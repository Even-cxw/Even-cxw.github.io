{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/images/blob.png","path":"images/blob.png","modified":1,"renderable":0},{"_id":"source/images/ic_voice.png","path":"images/ic_voice.png","modified":1,"renderable":0},{"_id":"source/images/vscode.png","path":"images/vscode.png","modified":1,"renderable":0},{"_id":"source/images/download/download01.png","path":"images/download/download01.png","modified":1,"renderable":0},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/download.md","hash":"ce3cac93b5b8f2abd6daf6724b0c197a0676313d","modified":1637724946168},{"_id":"source/_posts/document.md","hash":"18bca152a9cf5153f88f87db967ab48c5b0ad617","modified":1638236164493},{"_id":"source/_posts/js_animation.md","hash":"0803d0abd86544209cfd6a175e9855fffb5a0228","modified":1637894346938},{"_id":"source/_posts/md.md","hash":"ffddb73fda18402aff7ac52a2121409f099f1296","modified":1637058622664},{"_id":"source/_posts/typescript-webpack.md","hash":"af7cc63c065f46cae4fbbdf51287cb52de50ca50","modified":1637315063490},{"_id":"source/_posts/Vlog.md","hash":"83810e9783b334664a417f5461d6178b17a27104","modified":1637575637899},{"_id":"source/categories/index.md","hash":"34c6a3508cc22359904899b4cf66749c309c8cb2","modified":1637042935217},{"_id":"source/_posts/mac.md","hash":"addfc61bf3beca20b6cc6c883b927e2f3156ae7e","modified":1637129165088},{"_id":"source/_posts/type.md","hash":"507eb59a8a99d70c9bb96e82687a62e4fcccf6ae","modified":1638263348969},{"_id":"source/document/index.md","hash":"839ada6e16110b1394260a2fcbbb595f0e98774c","modified":1637563451075},{"_id":"source/images/ic_voice.png","hash":"bca1b47763ed7a2f05afef8b621f1381b40b56d4","modified":1637735806741},{"_id":"source/images/vscode.png","hash":"6ecfe3eba450515cfce9a8438a794faed14f237c","modified":1637049629250},{"_id":"source/404/index.md","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1636968055382},{"_id":"source/_posts/vscode.md","hash":"e6d021ccd67eb489b76c65f6aa1bde74f0cb9b1e","modified":1637895244461},{"_id":"source/tags/index.md","hash":"d413edb8b9370fc5b1eb5cfde05fa15340b2882a","modified":1637043389793},{"_id":"source/images/blob.png","hash":"7e46bd8bc21831d12735290cb9a08a053463181b","modified":1637723538119},{"_id":"source/.DS_Store","hash":"9352391a35ecb0d062dcdd904da5214a8aa90b86","modified":1637889287821},{"_id":"source/images/download/download01.png","hash":"7ac6d1c186f67b2cd9b0363bcfb08d5eee556ca2","modified":1637233979943},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1627608806000},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1627608806000},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1627608806000},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1627608806000},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1627608806000},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1627608806000},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1627608806000},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1627608806000},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1627608806000},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1627608806000},{"_id":"themes/next/_config.yml","hash":"c5814f1fa3378510daa1375d9a55d8bc84cf93c8","modified":1637894581626},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1627608806000},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1627608806000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1627608806000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1627608806000},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1627608806000},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1627608806000},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1627608806000},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1627608806000},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1627608806000},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1627608806000},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1627608806000},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1627608806000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1627608806000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1627608806000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1627608806000},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1627608806000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1627608806000},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1627608806000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1627608806000},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1627608806000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1627608806000},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1627608806000},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1627608806000},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1627608806000},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1627608806000},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1627608806000},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1627608806000},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1627608806000},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1627608806000},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1627608806000},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1627608806000},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1627608806000},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1627608806000},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1627608806000},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1627608806000},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1627608806000},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1627608806000},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1627608806000},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1627608806000},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1627608806000},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1627608806000},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1627608806000},{"_id":"themes/next/languages/zh-CN.yml","hash":"43bf547f0239a6d011ec411508df26a5f54e8a4c","modified":1636979521778},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1627608806000},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1627608806000},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1627608806000},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1627608806000},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1627608806000},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1627608806000},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1627608806000},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1636979869408},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1627608806000},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1627608806000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1627608806000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1627608806000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1627608806000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1627608806000},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1627608806000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1627608806000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1627608806000},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1627608806000},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1627608806000},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1627608806000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1627608806000},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1627608806000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1627608806000},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1627608806000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1627608806000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1627608806000},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1627608806000},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1627608806000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1627608806000},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1627608806000},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1627608806000},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1627608806000},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1627608806000},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1627608806000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1627608806000},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1627608806000},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1627608806000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1627608806000},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1627608806000},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1627608806000},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1627608806000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1627608806000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1627608806000},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1627608806000},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1627608806000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1627608806000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1627608806000},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1627608806000},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1627608806000},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1627608806000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1627608806000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1627608806000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1627608806000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1627608806000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1627608806000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1627608806000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1627608806000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1627608806000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1627608806000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1627608806000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1627608806000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1627608806000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1627608806000},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1627608806000},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1627608806000},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1627608806000},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1627608806000},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1627608806000},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1627608806000},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1627608806000},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1627608806000},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1637046820315},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1627608806000},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1627608806000},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1627608806000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1627608806000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1627608806000},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1627608806000},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1627608806000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1627608806000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1627608806000},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1627608806000},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1627608806000},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1627608806000},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1627608806000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1627608806000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1627608806000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1627608806000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1627608806000},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1627608806000},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1627608806000},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1627608806000},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1627608806000},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1627608806000},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1627608806000},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1627608806000},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1627608806000},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1627608806000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1627608806000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1627608806000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1637055562158},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0933c8b40fa254da1c0c3085bb82d5291659fa0d","modified":1637055675091},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"0fac0c55b4b33fcd23b841cda3fcedf189ed3b22","modified":1637054029726},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1627608806000},{"_id":"public/categories/index.html","hash":"414518ae102a651064c041a7e1fff2c1e37d6994","modified":1638263744559},{"_id":"public/404/index.html","hash":"36d92d433b7c71f5af47bf23f866a3741709de51","modified":1638263744559},{"_id":"public/tags/index.html","hash":"0cb2dbce3f63ce78aec838e81173d9a5d79f0ae2","modified":1638263744559},{"_id":"public/2021/11/16/vscode/index.html","hash":"8d767d1d693072ab1c9588966ad69bc3b981e2f1","modified":1638263744559},{"_id":"public/2019/11/18/Vlog/index.html","hash":"c11645554c5d3dcb9b301a62ded767b6c311b139","modified":1638263744559},{"_id":"public/2019/11/17/mac/index.html","hash":"96575caea34f4974a04c9db4913a534f55b239d1","modified":1638263744559},{"_id":"public/archives/index.html","hash":"83c59846d45c107d6f507e30151d4cca5d171fe8","modified":1638263744559},{"_id":"public/archives/2018/index.html","hash":"56f8d81ef8e8101b5091ea8ea64b9e1527985e80","modified":1638263744559},{"_id":"public/archives/2018/11/index.html","hash":"29c89ef882e98445a788a3fdec06d120dbed4c77","modified":1638263744559},{"_id":"public/archives/2019/index.html","hash":"afd8f197251387523ceab295f1650e085b70d0f6","modified":1638263744559},{"_id":"public/archives/2019/11/index.html","hash":"22d2db13c6161c845bc77a5c4acbe04759cbacc6","modified":1638263744559},{"_id":"public/archives/2021/index.html","hash":"afec65148bf1854ca1c0b29226283cb79fc6ad0b","modified":1638263744559},{"_id":"public/archives/2021/11/index.html","hash":"83ab59a8cf41833cf7a229a088e9cb0a7aa61623","modified":1638263744559},{"_id":"public/categories/Vlog/index.html","hash":"b17536f8fa566083935c2a811aed94ba32cfacc7","modified":1638263744559},{"_id":"public/categories/文档/index.html","hash":"e93c04be1ef3221ff7a2e1f9c6f5812b149681f3","modified":1638263744559},{"_id":"public/categories/javascript/index.html","hash":"a7333843f8914da00914c357d4dc928f9cdb318f","modified":1638263744559},{"_id":"public/categories/Mac/index.html","hash":"86e6910eb41d4cc07ea9cc4cc242a99197b95cfa","modified":1638263744559},{"_id":"public/categories/md/index.html","hash":"bbf18cd30113b7afff438e4876c1185b10a5c838","modified":1638263744559},{"_id":"public/categories/typescript/index.html","hash":"6713efc40c374cdcf070ba018bd8ee95fe8cbfe7","modified":1638263744559},{"_id":"public/categories/vscode/index.html","hash":"e002616a670d419c64bf4676ffae22c9511f3e86","modified":1638263744559},{"_id":"public/tags/Vlog/index.html","hash":"39ac28bf6123cf317d357b4f91682b3352376a8f","modified":1638263744559},{"_id":"public/tags/文档/index.html","hash":"e4d1b9e8cb5e23c331bd07a895aae8562af20e44","modified":1638263744559},{"_id":"public/tags/javascript/index.html","hash":"e91d3390483880c0d8ddfcfd8a8bc5ec476b3035","modified":1638263744559},{"_id":"public/tags/Mac/index.html","hash":"ba7044a52e79a1e2cb73ab166691e1561538439d","modified":1638263744559},{"_id":"public/tags/md/index.html","hash":"95ff19e03778c30f0c8c4861c434b3ebabd44b96","modified":1638263744559},{"_id":"public/tags/typescript/index.html","hash":"b6b945a95314364df66a09ac5883c947eff6a0e0","modified":1638263744559},{"_id":"public/tags/webpack/index.html","hash":"e486bf2e75004595f19259ab9e390d2ebb7024eb","modified":1638263744559},{"_id":"public/tags/vscode/index.html","hash":"eba06b4c7cb7ea0da2214b79995b57bf1ac19d52","modified":1638263744559},{"_id":"public/document/index.html","hash":"aff4387baff7c899e55c43277644e7285fd42e12","modified":1638263744559},{"_id":"public/2021/11/26/js-animation/index.html","hash":"38be4b163a518aaf52201a9bd33c46e5430f6b93","modified":1638263744559},{"_id":"public/2021/11/30/type/index.html","hash":"075510e48acddccd9751d9a1185b72516a4ee3af","modified":1638263744559},{"_id":"public/2021/11/22/download/index.html","hash":"70f70aeb0b13a7abf1312503bd4a87241ebca250","modified":1638263744559},{"_id":"public/2021/11/17/typescript-webpack/index.html","hash":"38602f3aa711dc30f785d80bdaf2c584ec4be70d","modified":1638263744559},{"_id":"public/2021/11/16/md/index.html","hash":"ba467380ee19b954a3d1e7fd2eb0d16e3e0ac4f8","modified":1638263744559},{"_id":"public/2018/11/16/document/index.html","hash":"49c7d3ff56f9ef2ba3e0c6805bb108134c74907e","modified":1638263744559},{"_id":"public/index.html","hash":"84a935d14beeaff34449d7aa16cd9a9c597a7019","modified":1638263744559},{"_id":"public/images/blob.png","hash":"7e46bd8bc21831d12735290cb9a08a053463181b","modified":1638263744559},{"_id":"public/images/vscode.png","hash":"6ecfe3eba450515cfce9a8438a794faed14f237c","modified":1638263744559},{"_id":"public/images/ic_voice.png","hash":"bca1b47763ed7a2f05afef8b621f1381b40b56d4","modified":1638263744559},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1638263744559},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1638263744559},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1638263744559},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1638263744559},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1638263744559},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1638263744559},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1638263744559},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1638263744559},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1638263744559},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1638263744559},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1638263744559},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1638263744559},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1638263744559},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1638263744559},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1638263744559},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1638263744559},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1638263744559},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1638263744559},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1638263744559},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1638263744559},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1638263744559},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1638263744559},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1638263744559},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1638263744559},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1638263744559},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1638263744559},{"_id":"public/css/main.css","hash":"0f350538eb2f84f9e59ed8bc9d705f09e054d986","modified":1638263744559},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1638263744559},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1638263744559},{"_id":"public/images/download/download01.png","hash":"7ac6d1c186f67b2cd9b0363bcfb08d5eee556ca2","modified":1638263744559}],"Category":[{"name":"Vlog","_id":"ckwlvxnsx000419oz04b3b88i"},{"name":"文档","_id":"ckwlvxnt1000b19ozc5k53rui"},{"name":"javascript","_id":"ckwlvxnt4000h19ozefw57ogl"},{"name":"Mac","_id":"ckwlvxnt7000n19ozde556w2o"},{"name":"md","_id":"ckwlvxntc000w19ozfukyblc5"},{"name":"typescript","_id":"ckwlvxntd001119oz6i368jtn"},{"name":"vscode","_id":"ckwlvxnte001519ozehcl2cfo"}],"Data":[],"Page":[{"title":"分类","date":"2021-11-15T08:47:17.000Z","type":"categories","_content":"## 内容一\n","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-11-15 16:47:17\ntype: \"categories\"\n---\n## 内容一\n","updated":"2021-11-16T06:08:55.217Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckwlvxnsp000019ozggjs29rv","content":"<h2 id=\"内容一\"><a href=\"#内容一\" class=\"headerlink\" title=\"内容一\"></a>内容一</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"内容一\"><a href=\"#内容一\" class=\"headerlink\" title=\"内容一\"></a>内容一</h2>"},{"title":"文档","date":"2021-11-10T08:47:17.000Z","updated":"2021-11-15T08:47:18.000Z","categories":"工具","_content":"\n\n#### 官方文档\n- [TS文档](https://www.tslang.cn/docs/handbook/basic-types.html)\n- [TS英文版文档](https://www.typescriptlang.org/docs/)\n- [axios文档](http://www.axios-js.com/zh-cn/docs/)\n- [fly文档](https://wendux.github.io/dist/#/doc/flyio/engine)\n- [postcss文档](https://postcss.org/)\n- [npm文档](https://docs.npmjs.com/)\n- [moment时间文档](http://momentjs.cn/docs/#/manipulating/)\n- [MDN手册](https://developer.mozilla.org/zh-CN/)\n- [lodash.js操作文档](https://www.lodashjs.com/)\n- [高德地图文档](https://lbs.amap.com/api/javascript-api/reference/map/)\n- [postcss文档](https://postcss.org/)\n- [mongodb文档](https://www.mongodb.org.cn/)\n- [node-fetch文档](https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch)\n- [koa文档](https://koa.bootcss.com/#introduction)\n- [typescript文档](https://github.com/zhongsp/TypeScript)\n- [高德地图文档](https://lbs.amap.com/api/amap-mobile/gettingstarted)\n- [nginx文档](https://www.nginx.cn/doc/index.html)\n- [A-fram VR体验文档](https://www.techbrood.com/aframe)\n- [桌面端electron-文档](http://www.electronjs.org/docs/tutorial/macos-dock)\n- [linux命令大全-文档](https://www.linuxcool.com/cat)\n- [正则表达测-文档](https://regexper.com/)\n- [微前端-文档](https://qiankun.umijs.org/zh/cookbook)\n- [bootcdn网址](https://www.bootcdn.cn/)\n- [webpack文档](https://webpack.docschina.org/)\n- [node](http://nodejs.cn/api/)\n- [react](https://reactjs.org/)\n- [schema](https://schema.org.cn/)\n- [个人博客](https://even-cxw.github.io/)\n- [nexT主题](https://theme-next.iissnan.com/getting-started.html)\n- [nexT操作文档](https://hexo.io/zh-cn/docs/)\n- [nexT操作文档-个人01](https://www.jianshu.com/p/f054333ac9e6)\n- [nexT操作文档-个人02](https://neveryu.github.io/2016/09/30/hexo-next-two/)\n- [jszip-utils](http://stuk.github.io/jszip-utils/) \n- [jsZip文档](https://stuk.github.io/jszip/documentation/examples.html)\n- [fontawesome图标库-英文版](https://fontawesome.com/)\n\n#### 微信文档\n- [微信公众号订阅](https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_Open_Tag.html#23)\n- [微信jssdk开发文档](http://caibaojian.com/wxwiki/0030551f015f01ecaa56d20b88ee3c6cb32503bf.html)\n\n\n#### vue文档\n- [vue-element-admin-在线观看](https://panjiachen.github.io/vue-element-admin/#/dashboard)\n- [vue拖拽](http://www.itxst.com/vue-draggable/imj6nvze.html)\n- [vue-cli配置文档](https://cli.vuejs.org/zh/config/) \n- [vue文档](https://cn.vuejs.org/)\n- [vue3文档](https://vue3js.cn/docs/zh/guide/migration/introduction.html)\n- [vuex文档](https://vuex.vuejs.org/zh/)\n- [vue Cli](https://cli.vuejs.org/zh/guide/webpack.html)\n\n#### UI文档\n- [vant-ui](https://youzan.github.io/vant/#/zh-CN/quickstart)   \n- [element-ui](https://element.eleme.cn/#/zh-CN/component/layout)\n- [mui-ui](https://dev.dcloud.net.cn/mui/)\n- [cube-ui](https://didi.github.io/cube-ui/#/zh-CN)\n- [ant-Desing-ui](https://ant.design/components/rate-cn/)\n- [lay-ui](https://www.layui.com/doc/)\n- [vite-ui](https://vite.wiki/zh/introduction/)\n\n#### 他人博客\n- [阮一峰flex布局](http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html)\n- [axios博客](https://segmentfault.com/a/1190000008470355)\n- [tweenmax博客](https://segmentfault.com/a/1190000007496078)\n- [weui博客](https://blog.csdn.net/gegephp/article/details/88869255)\n- [nginx-缓存设置](https://www.layui.com/)\n- [SVN使用手册](https://blog.csdn.net/sinat_37812785/article/details/80243207)\n- [字符串的方法](https://www.cnblogs.com/zhangxin2540/p/7054835.html)\n- [正则表达式菜鸟文档](https://www.runoob.com/regexp/regexp-syntax.html)\n- [正则表达测试工具网址](https://c.runoob.com/front-end/854)\n- [koa的学习教程](https://chenshenhai.github.io/koa2-note/note/static/server.html)\n- [滚动元素图解](https://www.jianshu.com/p/d267456ebc0d)\n\n#### 插件文档\n- [tweenmax插件文档](https://www.tweenmax.com.cn/api/timelinemax/) \n- [简单日历开发-插件](https://github.com/zwhGithub/vue-calendar)\n- [日历开发文档](https://github.com/Hzy0913/mpvue-calendar)\n\n\n\n#### 工具\n- [正则表达式图解工具](https://regexper.com/)\n- [阿里巴巴失量图](https://www.iconfont.cn/search/indextag=)\n- [eruda.js调试博客1](https://www.jianshu.com/p/b95227a22745)\n- [eruda.js调试博客2](https://www.cnblogs.com/aisiqi-love/p/11764627.html)\n- [PDF转word](https://app.xunjiepdf.com/)\n- [easy-mock模拟数据工具](https://easy-mock.com/login)\n- [vorlonjs混合开发调试工具](http://www.vorlonjs.com/)\n- [修改host网址](https://zhuanlan.zhihu.com/p/107334179)\n- [npm环境变量配置](https://www.cnblogs.com/coder-lzh/p/9232192.html)\n- [Bulletproof background images](https://backgrounds.cm/)\n- [mac外接显示器设置](https://zhuanlan.zhihu.com/p/161631562)\n- [vscode安装加速](https://blog.csdn.net/m0_55548148/article/details/115587339)\n```\n外网地址：https://az764295.vo.msecnd.net/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip\n内网地址：https://vscode.cdn.azure.cn/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip\n替换连接：vscode.cdn.azure.cn\n```\n\n#### 学习\n- [单元测试](https://segmentfault.com/a/1190000013470485)\n- [前端地图线路图](https://www.mscto.com/html5/30073)\n- [乾坤-微前端-git项目](https://github.com/umijs/qiankun)\n- [移动端字体放大问题](https://juejin.cn/post/6844903507061932040)\n- [clientX,pageX,offsetX 图解](https://www.cnblogs.com/skylar/p/4121508.html)\n- [节流防抖](https://www.jianshu.com/p/566c66aafa22)\n- [慕课网](https://www.imooc.com/)\n- [51CTO企业版](https://b.51cto.com/index)\n- [手写vue-MVVM](https://github.com/DMQ/mvvm)\n#### 软件下载\n- [罗技鼠标软件下载](https://www.logitech.com.cn/zh-cn/promo/ergosetup/logitech-options.html)\n\n#### bug文档\n- [返回不刷新问题](https://juejin.cn/post/6844903818191175687)\n","source":"document/index.md","raw":"---\ntitle: 文档\ndate: 2021-11-10 16:47:17\nupdated: 2021-11-15 16:47:18\ncategories: 工具\n---\n\n\n#### 官方文档\n- [TS文档](https://www.tslang.cn/docs/handbook/basic-types.html)\n- [TS英文版文档](https://www.typescriptlang.org/docs/)\n- [axios文档](http://www.axios-js.com/zh-cn/docs/)\n- [fly文档](https://wendux.github.io/dist/#/doc/flyio/engine)\n- [postcss文档](https://postcss.org/)\n- [npm文档](https://docs.npmjs.com/)\n- [moment时间文档](http://momentjs.cn/docs/#/manipulating/)\n- [MDN手册](https://developer.mozilla.org/zh-CN/)\n- [lodash.js操作文档](https://www.lodashjs.com/)\n- [高德地图文档](https://lbs.amap.com/api/javascript-api/reference/map/)\n- [postcss文档](https://postcss.org/)\n- [mongodb文档](https://www.mongodb.org.cn/)\n- [node-fetch文档](https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch)\n- [koa文档](https://koa.bootcss.com/#introduction)\n- [typescript文档](https://github.com/zhongsp/TypeScript)\n- [高德地图文档](https://lbs.amap.com/api/amap-mobile/gettingstarted)\n- [nginx文档](https://www.nginx.cn/doc/index.html)\n- [A-fram VR体验文档](https://www.techbrood.com/aframe)\n- [桌面端electron-文档](http://www.electronjs.org/docs/tutorial/macos-dock)\n- [linux命令大全-文档](https://www.linuxcool.com/cat)\n- [正则表达测-文档](https://regexper.com/)\n- [微前端-文档](https://qiankun.umijs.org/zh/cookbook)\n- [bootcdn网址](https://www.bootcdn.cn/)\n- [webpack文档](https://webpack.docschina.org/)\n- [node](http://nodejs.cn/api/)\n- [react](https://reactjs.org/)\n- [schema](https://schema.org.cn/)\n- [个人博客](https://even-cxw.github.io/)\n- [nexT主题](https://theme-next.iissnan.com/getting-started.html)\n- [nexT操作文档](https://hexo.io/zh-cn/docs/)\n- [nexT操作文档-个人01](https://www.jianshu.com/p/f054333ac9e6)\n- [nexT操作文档-个人02](https://neveryu.github.io/2016/09/30/hexo-next-two/)\n- [jszip-utils](http://stuk.github.io/jszip-utils/) \n- [jsZip文档](https://stuk.github.io/jszip/documentation/examples.html)\n- [fontawesome图标库-英文版](https://fontawesome.com/)\n\n#### 微信文档\n- [微信公众号订阅](https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_Open_Tag.html#23)\n- [微信jssdk开发文档](http://caibaojian.com/wxwiki/0030551f015f01ecaa56d20b88ee3c6cb32503bf.html)\n\n\n#### vue文档\n- [vue-element-admin-在线观看](https://panjiachen.github.io/vue-element-admin/#/dashboard)\n- [vue拖拽](http://www.itxst.com/vue-draggable/imj6nvze.html)\n- [vue-cli配置文档](https://cli.vuejs.org/zh/config/) \n- [vue文档](https://cn.vuejs.org/)\n- [vue3文档](https://vue3js.cn/docs/zh/guide/migration/introduction.html)\n- [vuex文档](https://vuex.vuejs.org/zh/)\n- [vue Cli](https://cli.vuejs.org/zh/guide/webpack.html)\n\n#### UI文档\n- [vant-ui](https://youzan.github.io/vant/#/zh-CN/quickstart)   \n- [element-ui](https://element.eleme.cn/#/zh-CN/component/layout)\n- [mui-ui](https://dev.dcloud.net.cn/mui/)\n- [cube-ui](https://didi.github.io/cube-ui/#/zh-CN)\n- [ant-Desing-ui](https://ant.design/components/rate-cn/)\n- [lay-ui](https://www.layui.com/doc/)\n- [vite-ui](https://vite.wiki/zh/introduction/)\n\n#### 他人博客\n- [阮一峰flex布局](http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html)\n- [axios博客](https://segmentfault.com/a/1190000008470355)\n- [tweenmax博客](https://segmentfault.com/a/1190000007496078)\n- [weui博客](https://blog.csdn.net/gegephp/article/details/88869255)\n- [nginx-缓存设置](https://www.layui.com/)\n- [SVN使用手册](https://blog.csdn.net/sinat_37812785/article/details/80243207)\n- [字符串的方法](https://www.cnblogs.com/zhangxin2540/p/7054835.html)\n- [正则表达式菜鸟文档](https://www.runoob.com/regexp/regexp-syntax.html)\n- [正则表达测试工具网址](https://c.runoob.com/front-end/854)\n- [koa的学习教程](https://chenshenhai.github.io/koa2-note/note/static/server.html)\n- [滚动元素图解](https://www.jianshu.com/p/d267456ebc0d)\n\n#### 插件文档\n- [tweenmax插件文档](https://www.tweenmax.com.cn/api/timelinemax/) \n- [简单日历开发-插件](https://github.com/zwhGithub/vue-calendar)\n- [日历开发文档](https://github.com/Hzy0913/mpvue-calendar)\n\n\n\n#### 工具\n- [正则表达式图解工具](https://regexper.com/)\n- [阿里巴巴失量图](https://www.iconfont.cn/search/indextag=)\n- [eruda.js调试博客1](https://www.jianshu.com/p/b95227a22745)\n- [eruda.js调试博客2](https://www.cnblogs.com/aisiqi-love/p/11764627.html)\n- [PDF转word](https://app.xunjiepdf.com/)\n- [easy-mock模拟数据工具](https://easy-mock.com/login)\n- [vorlonjs混合开发调试工具](http://www.vorlonjs.com/)\n- [修改host网址](https://zhuanlan.zhihu.com/p/107334179)\n- [npm环境变量配置](https://www.cnblogs.com/coder-lzh/p/9232192.html)\n- [Bulletproof background images](https://backgrounds.cm/)\n- [mac外接显示器设置](https://zhuanlan.zhihu.com/p/161631562)\n- [vscode安装加速](https://blog.csdn.net/m0_55548148/article/details/115587339)\n```\n外网地址：https://az764295.vo.msecnd.net/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip\n内网地址：https://vscode.cdn.azure.cn/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip\n替换连接：vscode.cdn.azure.cn\n```\n\n#### 学习\n- [单元测试](https://segmentfault.com/a/1190000013470485)\n- [前端地图线路图](https://www.mscto.com/html5/30073)\n- [乾坤-微前端-git项目](https://github.com/umijs/qiankun)\n- [移动端字体放大问题](https://juejin.cn/post/6844903507061932040)\n- [clientX,pageX,offsetX 图解](https://www.cnblogs.com/skylar/p/4121508.html)\n- [节流防抖](https://www.jianshu.com/p/566c66aafa22)\n- [慕课网](https://www.imooc.com/)\n- [51CTO企业版](https://b.51cto.com/index)\n- [手写vue-MVVM](https://github.com/DMQ/mvvm)\n#### 软件下载\n- [罗技鼠标软件下载](https://www.logitech.com.cn/zh-cn/promo/ergosetup/logitech-options.html)\n\n#### bug文档\n- [返回不刷新问题](https://juejin.cn/post/6844903818191175687)\n","path":"document/index.html","comments":1,"layout":"page","_id":"ckwlvxnsu000219oz6o1kd3tu","content":"<h4 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a>官方文档</h4><ul>\n<li><a href=\"https://www.tslang.cn/docs/handbook/basic-types.html\">TS文档</a></li>\n<li><a href=\"https://www.typescriptlang.org/docs/\">TS英文版文档</a></li>\n<li><a href=\"http://www.axios-js.com/zh-cn/docs/\">axios文档</a></li>\n<li><a href=\"https://wendux.github.io/dist/#/doc/flyio/engine\">fly文档</a></li>\n<li><a href=\"https://postcss.org/\">postcss文档</a></li>\n<li><a href=\"https://docs.npmjs.com/\">npm文档</a></li>\n<li><a href=\"http://momentjs.cn/docs/#/manipulating/\">moment时间文档</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/\">MDN手册</a></li>\n<li><a href=\"https://www.lodashjs.com/\">lodash.js操作文档</a></li>\n<li><a href=\"https://lbs.amap.com/api/javascript-api/reference/map/\">高德地图文档</a></li>\n<li><a href=\"https://postcss.org/\">postcss文档</a></li>\n<li><a href=\"https://www.mongodb.org.cn/\">mongodb文档</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch\">node-fetch文档</a></li>\n<li><a href=\"https://koa.bootcss.com/#introduction\">koa文档</a></li>\n<li><a href=\"https://github.com/zhongsp/TypeScript\">typescript文档</a></li>\n<li><a href=\"https://lbs.amap.com/api/amap-mobile/gettingstarted\">高德地图文档</a></li>\n<li><a href=\"https://www.nginx.cn/doc/index.html\">nginx文档</a></li>\n<li><a href=\"https://www.techbrood.com/aframe\">A-fram VR体验文档</a></li>\n<li><a href=\"http://www.electronjs.org/docs/tutorial/macos-dock\">桌面端electron-文档</a></li>\n<li><a href=\"https://www.linuxcool.com/cat\">linux命令大全-文档</a></li>\n<li><a href=\"https://regexper.com/\">正则表达测-文档</a></li>\n<li><a href=\"https://qiankun.umijs.org/zh/cookbook\">微前端-文档</a></li>\n<li><a href=\"https://www.bootcdn.cn/\">bootcdn网址</a></li>\n<li><a href=\"https://webpack.docschina.org/\">webpack文档</a></li>\n<li><a href=\"http://nodejs.cn/api/\">node</a></li>\n<li><a href=\"https://reactjs.org/\">react</a></li>\n<li><a href=\"https://schema.org.cn/\">schema</a></li>\n<li><a href=\"https://even-cxw.github.io/\">个人博客</a></li>\n<li><a href=\"https://theme-next.iissnan.com/getting-started.html\">nexT主题</a></li>\n<li><a href=\"https://hexo.io/zh-cn/docs/\">nexT操作文档</a></li>\n<li><a href=\"https://www.jianshu.com/p/f054333ac9e6\">nexT操作文档-个人01</a></li>\n<li><a href=\"https://neveryu.github.io/2016/09/30/hexo-next-two/\">nexT操作文档-个人02</a></li>\n<li><a href=\"http://stuk.github.io/jszip-utils/\">jszip-utils</a> </li>\n<li><a href=\"https://stuk.github.io/jszip/documentation/examples.html\">jsZip文档</a></li>\n<li><a href=\"https://fontawesome.com/\">fontawesome图标库-英文版</a></li>\n</ul>\n<h4 id=\"微信文档\"><a href=\"#微信文档\" class=\"headerlink\" title=\"微信文档\"></a>微信文档</h4><ul>\n<li><a href=\"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_Open_Tag.html#23\">微信公众号订阅</a></li>\n<li><a href=\"http://caibaojian.com/wxwiki/0030551f015f01ecaa56d20b88ee3c6cb32503bf.html\">微信jssdk开发文档</a></li>\n</ul>\n<h4 id=\"vue文档\"><a href=\"#vue文档\" class=\"headerlink\" title=\"vue文档\"></a>vue文档</h4><ul>\n<li><a href=\"https://panjiachen.github.io/vue-element-admin/#/dashboard\">vue-element-admin-在线观看</a></li>\n<li><a href=\"http://www.itxst.com/vue-draggable/imj6nvze.html\">vue拖拽</a></li>\n<li><a href=\"https://cli.vuejs.org/zh/config/\">vue-cli配置文档</a> </li>\n<li><a href=\"https://cn.vuejs.org/\">vue文档</a></li>\n<li><a href=\"https://vue3js.cn/docs/zh/guide/migration/introduction.html\">vue3文档</a></li>\n<li><a href=\"https://vuex.vuejs.org/zh/\">vuex文档</a></li>\n<li><a href=\"https://cli.vuejs.org/zh/guide/webpack.html\">vue Cli</a></li>\n</ul>\n<h4 id=\"UI文档\"><a href=\"#UI文档\" class=\"headerlink\" title=\"UI文档\"></a>UI文档</h4><ul>\n<li><a href=\"https://youzan.github.io/vant/#/zh-CN/quickstart\">vant-ui</a>   </li>\n<li><a href=\"https://element.eleme.cn/#/zh-CN/component/layout\">element-ui</a></li>\n<li><a href=\"https://dev.dcloud.net.cn/mui/\">mui-ui</a></li>\n<li><a href=\"https://didi.github.io/cube-ui/#/zh-CN\">cube-ui</a></li>\n<li><a href=\"https://ant.design/components/rate-cn/\">ant-Desing-ui</a></li>\n<li><a href=\"https://www.layui.com/doc/\">lay-ui</a></li>\n<li><a href=\"https://vite.wiki/zh/introduction/\">vite-ui</a></li>\n</ul>\n<h4 id=\"他人博客\"><a href=\"#他人博客\" class=\"headerlink\" title=\"他人博客\"></a>他人博客</h4><ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\">阮一峰flex布局</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000008470355\">axios博客</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000007496078\">tweenmax博客</a></li>\n<li><a href=\"https://blog.csdn.net/gegephp/article/details/88869255\">weui博客</a></li>\n<li><a href=\"https://www.layui.com/\">nginx-缓存设置</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_37812785/article/details/80243207\">SVN使用手册</a></li>\n<li><a href=\"https://www.cnblogs.com/zhangxin2540/p/7054835.html\">字符串的方法</a></li>\n<li><a href=\"https://www.runoob.com/regexp/regexp-syntax.html\">正则表达式菜鸟文档</a></li>\n<li><a href=\"https://c.runoob.com/front-end/854\">正则表达测试工具网址</a></li>\n<li><a href=\"https://chenshenhai.github.io/koa2-note/note/static/server.html\">koa的学习教程</a></li>\n<li><a href=\"https://www.jianshu.com/p/d267456ebc0d\">滚动元素图解</a></li>\n</ul>\n<h4 id=\"插件文档\"><a href=\"#插件文档\" class=\"headerlink\" title=\"插件文档\"></a>插件文档</h4><ul>\n<li><a href=\"https://www.tweenmax.com.cn/api/timelinemax/\">tweenmax插件文档</a> </li>\n<li><a href=\"https://github.com/zwhGithub/vue-calendar\">简单日历开发-插件</a></li>\n<li><a href=\"https://github.com/Hzy0913/mpvue-calendar\">日历开发文档</a></li>\n</ul>\n<h4 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h4><ul>\n<li><a href=\"https://regexper.com/\">正则表达式图解工具</a></li>\n<li><a href=\"https://www.iconfont.cn/search/indextag=\">阿里巴巴失量图</a></li>\n<li><a href=\"https://www.jianshu.com/p/b95227a22745\">eruda.js调试博客1</a></li>\n<li><a href=\"https://www.cnblogs.com/aisiqi-love/p/11764627.html\">eruda.js调试博客2</a></li>\n<li><a href=\"https://app.xunjiepdf.com/\">PDF转word</a></li>\n<li><a href=\"https://easy-mock.com/login\">easy-mock模拟数据工具</a></li>\n<li><a href=\"http://www.vorlonjs.com/\">vorlonjs混合开发调试工具</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/107334179\">修改host网址</a></li>\n<li><a href=\"https://www.cnblogs.com/coder-lzh/p/9232192.html\">npm环境变量配置</a></li>\n<li><a href=\"https://backgrounds.cm/\">Bulletproof background images</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/161631562\">mac外接显示器设置</a></li>\n<li><a href=\"https://blog.csdn.net/m0_55548148/article/details/115587339\">vscode安装加速</a><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">外网地址：https://az764295.vo.msecnd.net/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip</span><br><span class=\"line\">内网地址：https://vscode.cdn.azure.cn/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip</span><br><span class=\"line\">替换连接：vscode.cdn.azure.cn</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h4><ul>\n<li><a href=\"https://segmentfault.com/a/1190000013470485\">单元测试</a></li>\n<li><a href=\"https://www.mscto.com/html5/30073\">前端地图线路图</a></li>\n<li><a href=\"https://github.com/umijs/qiankun\">乾坤-微前端-git项目</a></li>\n<li><a href=\"https://juejin.cn/post/6844903507061932040\">移动端字体放大问题</a></li>\n<li><a href=\"https://www.cnblogs.com/skylar/p/4121508.html\">clientX,pageX,offsetX 图解</a></li>\n<li><a href=\"https://www.jianshu.com/p/566c66aafa22\">节流防抖</a></li>\n<li><a href=\"https://www.imooc.com/\">慕课网</a></li>\n<li><a href=\"https://b.51cto.com/index\">51CTO企业版</a></li>\n<li><a href=\"https://github.com/DMQ/mvvm\">手写vue-MVVM</a><h4 id=\"软件下载\"><a href=\"#软件下载\" class=\"headerlink\" title=\"软件下载\"></a>软件下载</h4></li>\n<li><a href=\"https://www.logitech.com.cn/zh-cn/promo/ergosetup/logitech-options.html\">罗技鼠标软件下载</a></li>\n</ul>\n<h4 id=\"bug文档\"><a href=\"#bug文档\" class=\"headerlink\" title=\"bug文档\"></a>bug文档</h4><ul>\n<li><a href=\"https://juejin.cn/post/6844903818191175687\">返回不刷新问题</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a>官方文档</h4><ul>\n<li><a href=\"https://www.tslang.cn/docs/handbook/basic-types.html\">TS文档</a></li>\n<li><a href=\"https://www.typescriptlang.org/docs/\">TS英文版文档</a></li>\n<li><a href=\"http://www.axios-js.com/zh-cn/docs/\">axios文档</a></li>\n<li><a href=\"https://wendux.github.io/dist/#/doc/flyio/engine\">fly文档</a></li>\n<li><a href=\"https://postcss.org/\">postcss文档</a></li>\n<li><a href=\"https://docs.npmjs.com/\">npm文档</a></li>\n<li><a href=\"http://momentjs.cn/docs/#/manipulating/\">moment时间文档</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/\">MDN手册</a></li>\n<li><a href=\"https://www.lodashjs.com/\">lodash.js操作文档</a></li>\n<li><a href=\"https://lbs.amap.com/api/javascript-api/reference/map/\">高德地图文档</a></li>\n<li><a href=\"https://postcss.org/\">postcss文档</a></li>\n<li><a href=\"https://www.mongodb.org.cn/\">mongodb文档</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch\">node-fetch文档</a></li>\n<li><a href=\"https://koa.bootcss.com/#introduction\">koa文档</a></li>\n<li><a href=\"https://github.com/zhongsp/TypeScript\">typescript文档</a></li>\n<li><a href=\"https://lbs.amap.com/api/amap-mobile/gettingstarted\">高德地图文档</a></li>\n<li><a href=\"https://www.nginx.cn/doc/index.html\">nginx文档</a></li>\n<li><a href=\"https://www.techbrood.com/aframe\">A-fram VR体验文档</a></li>\n<li><a href=\"http://www.electronjs.org/docs/tutorial/macos-dock\">桌面端electron-文档</a></li>\n<li><a href=\"https://www.linuxcool.com/cat\">linux命令大全-文档</a></li>\n<li><a href=\"https://regexper.com/\">正则表达测-文档</a></li>\n<li><a href=\"https://qiankun.umijs.org/zh/cookbook\">微前端-文档</a></li>\n<li><a href=\"https://www.bootcdn.cn/\">bootcdn网址</a></li>\n<li><a href=\"https://webpack.docschina.org/\">webpack文档</a></li>\n<li><a href=\"http://nodejs.cn/api/\">node</a></li>\n<li><a href=\"https://reactjs.org/\">react</a></li>\n<li><a href=\"https://schema.org.cn/\">schema</a></li>\n<li><a href=\"https://even-cxw.github.io/\">个人博客</a></li>\n<li><a href=\"https://theme-next.iissnan.com/getting-started.html\">nexT主题</a></li>\n<li><a href=\"https://hexo.io/zh-cn/docs/\">nexT操作文档</a></li>\n<li><a href=\"https://www.jianshu.com/p/f054333ac9e6\">nexT操作文档-个人01</a></li>\n<li><a href=\"https://neveryu.github.io/2016/09/30/hexo-next-two/\">nexT操作文档-个人02</a></li>\n<li><a href=\"http://stuk.github.io/jszip-utils/\">jszip-utils</a> </li>\n<li><a href=\"https://stuk.github.io/jszip/documentation/examples.html\">jsZip文档</a></li>\n<li><a href=\"https://fontawesome.com/\">fontawesome图标库-英文版</a></li>\n</ul>\n<h4 id=\"微信文档\"><a href=\"#微信文档\" class=\"headerlink\" title=\"微信文档\"></a>微信文档</h4><ul>\n<li><a href=\"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_Open_Tag.html#23\">微信公众号订阅</a></li>\n<li><a href=\"http://caibaojian.com/wxwiki/0030551f015f01ecaa56d20b88ee3c6cb32503bf.html\">微信jssdk开发文档</a></li>\n</ul>\n<h4 id=\"vue文档\"><a href=\"#vue文档\" class=\"headerlink\" title=\"vue文档\"></a>vue文档</h4><ul>\n<li><a href=\"https://panjiachen.github.io/vue-element-admin/#/dashboard\">vue-element-admin-在线观看</a></li>\n<li><a href=\"http://www.itxst.com/vue-draggable/imj6nvze.html\">vue拖拽</a></li>\n<li><a href=\"https://cli.vuejs.org/zh/config/\">vue-cli配置文档</a> </li>\n<li><a href=\"https://cn.vuejs.org/\">vue文档</a></li>\n<li><a href=\"https://vue3js.cn/docs/zh/guide/migration/introduction.html\">vue3文档</a></li>\n<li><a href=\"https://vuex.vuejs.org/zh/\">vuex文档</a></li>\n<li><a href=\"https://cli.vuejs.org/zh/guide/webpack.html\">vue Cli</a></li>\n</ul>\n<h4 id=\"UI文档\"><a href=\"#UI文档\" class=\"headerlink\" title=\"UI文档\"></a>UI文档</h4><ul>\n<li><a href=\"https://youzan.github.io/vant/#/zh-CN/quickstart\">vant-ui</a>   </li>\n<li><a href=\"https://element.eleme.cn/#/zh-CN/component/layout\">element-ui</a></li>\n<li><a href=\"https://dev.dcloud.net.cn/mui/\">mui-ui</a></li>\n<li><a href=\"https://didi.github.io/cube-ui/#/zh-CN\">cube-ui</a></li>\n<li><a href=\"https://ant.design/components/rate-cn/\">ant-Desing-ui</a></li>\n<li><a href=\"https://www.layui.com/doc/\">lay-ui</a></li>\n<li><a href=\"https://vite.wiki/zh/introduction/\">vite-ui</a></li>\n</ul>\n<h4 id=\"他人博客\"><a href=\"#他人博客\" class=\"headerlink\" title=\"他人博客\"></a>他人博客</h4><ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\">阮一峰flex布局</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000008470355\">axios博客</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000007496078\">tweenmax博客</a></li>\n<li><a href=\"https://blog.csdn.net/gegephp/article/details/88869255\">weui博客</a></li>\n<li><a href=\"https://www.layui.com/\">nginx-缓存设置</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_37812785/article/details/80243207\">SVN使用手册</a></li>\n<li><a href=\"https://www.cnblogs.com/zhangxin2540/p/7054835.html\">字符串的方法</a></li>\n<li><a href=\"https://www.runoob.com/regexp/regexp-syntax.html\">正则表达式菜鸟文档</a></li>\n<li><a href=\"https://c.runoob.com/front-end/854\">正则表达测试工具网址</a></li>\n<li><a href=\"https://chenshenhai.github.io/koa2-note/note/static/server.html\">koa的学习教程</a></li>\n<li><a href=\"https://www.jianshu.com/p/d267456ebc0d\">滚动元素图解</a></li>\n</ul>\n<h4 id=\"插件文档\"><a href=\"#插件文档\" class=\"headerlink\" title=\"插件文档\"></a>插件文档</h4><ul>\n<li><a href=\"https://www.tweenmax.com.cn/api/timelinemax/\">tweenmax插件文档</a> </li>\n<li><a href=\"https://github.com/zwhGithub/vue-calendar\">简单日历开发-插件</a></li>\n<li><a href=\"https://github.com/Hzy0913/mpvue-calendar\">日历开发文档</a></li>\n</ul>\n<h4 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h4><ul>\n<li><a href=\"https://regexper.com/\">正则表达式图解工具</a></li>\n<li><a href=\"https://www.iconfont.cn/search/indextag=\">阿里巴巴失量图</a></li>\n<li><a href=\"https://www.jianshu.com/p/b95227a22745\">eruda.js调试博客1</a></li>\n<li><a href=\"https://www.cnblogs.com/aisiqi-love/p/11764627.html\">eruda.js调试博客2</a></li>\n<li><a href=\"https://app.xunjiepdf.com/\">PDF转word</a></li>\n<li><a href=\"https://easy-mock.com/login\">easy-mock模拟数据工具</a></li>\n<li><a href=\"http://www.vorlonjs.com/\">vorlonjs混合开发调试工具</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/107334179\">修改host网址</a></li>\n<li><a href=\"https://www.cnblogs.com/coder-lzh/p/9232192.html\">npm环境变量配置</a></li>\n<li><a href=\"https://backgrounds.cm/\">Bulletproof background images</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/161631562\">mac外接显示器设置</a></li>\n<li><a href=\"https://blog.csdn.net/m0_55548148/article/details/115587339\">vscode安装加速</a><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">外网地址：https://az764295.vo.msecnd.net/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip</span><br><span class=\"line\">内网地址：https://vscode.cdn.azure.cn/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip</span><br><span class=\"line\">替换连接：vscode.cdn.azure.cn</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h4><ul>\n<li><a href=\"https://segmentfault.com/a/1190000013470485\">单元测试</a></li>\n<li><a href=\"https://www.mscto.com/html5/30073\">前端地图线路图</a></li>\n<li><a href=\"https://github.com/umijs/qiankun\">乾坤-微前端-git项目</a></li>\n<li><a href=\"https://juejin.cn/post/6844903507061932040\">移动端字体放大问题</a></li>\n<li><a href=\"https://www.cnblogs.com/skylar/p/4121508.html\">clientX,pageX,offsetX 图解</a></li>\n<li><a href=\"https://www.jianshu.com/p/566c66aafa22\">节流防抖</a></li>\n<li><a href=\"https://www.imooc.com/\">慕课网</a></li>\n<li><a href=\"https://b.51cto.com/index\">51CTO企业版</a></li>\n<li><a href=\"https://github.com/DMQ/mvvm\">手写vue-MVVM</a><h4 id=\"软件下载\"><a href=\"#软件下载\" class=\"headerlink\" title=\"软件下载\"></a>软件下载</h4></li>\n<li><a href=\"https://www.logitech.com.cn/zh-cn/promo/ergosetup/logitech-options.html\">罗技鼠标软件下载</a></li>\n</ul>\n<h4 id=\"bug文档\"><a href=\"#bug文档\" class=\"headerlink\" title=\"bug文档\"></a>bug文档</h4><ul>\n<li><a href=\"https://juejin.cn/post/6844903818191175687\">返回不刷新问题</a></li>\n</ul>\n"},{"title":"标签一","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签一\ntype: \"tags\"\n---","date":"2021-11-16T10:27:56.922Z","updated":"2021-11-16T06:16:29.793Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckwlvxnsy000619oz97bxambw","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404/index.md","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","date":"2021-11-16T10:27:56.922Z","updated":"2021-11-15T09:20:55.382Z","path":"404/index.html","title":"","comments":1,"layout":"page","_id":"ckwlvxnt0000819oz6q124lt3","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>"}],"Post":[{"title":"Vlog","date":"2019-11-18T06:30:24.000Z","comments":0,"_content":"\n# Vlog构思笔记\n1. 构思好后在进行拍摄\n2. 尽量半个月出一个视频\n\n\n## Vlog01\n> 一个爆米花引起的血案，开启了自己的第一个vlog。\n### 不足\n- 没有整体构思，按照视频瞎来。\n- 音频没有卡点。\n\n\n## Vlog02\n> 个人介绍\n### 自我介绍\n1. hello,大家好我叫Even，这是我第二个Vlog短视频。 [抖音截图]\n2. 为什么要做短视频呢，跟个人性格有关系，喜欢一些新鲜事物挑战自己，也跟自己的职业有关系吧，[程序员图]\n3. 做短视频的目的呢: 算是副业吧！为了记录自己的生活，等老了-看到自己的杰作，留下美好的回忆。 \n### 设备介绍\n1. 目前设备的话，相机是管朋友借的、支架的话自己买的-某宝100多、电脑自己本身就有。最大的成本就是个人时间。 [图片]","source":"_posts/Vlog.md","raw":"---\ntitle: Vlog\ndate: 2019-11-18 14:30:24\ncategories: Vlog\ntags: [Vlog]\ncomments: false\n---\n\n# Vlog构思笔记\n1. 构思好后在进行拍摄\n2. 尽量半个月出一个视频\n\n\n## Vlog01\n> 一个爆米花引起的血案，开启了自己的第一个vlog。\n### 不足\n- 没有整体构思，按照视频瞎来。\n- 音频没有卡点。\n\n\n## Vlog02\n> 个人介绍\n### 自我介绍\n1. hello,大家好我叫Even，这是我第二个Vlog短视频。 [抖音截图]\n2. 为什么要做短视频呢，跟个人性格有关系，喜欢一些新鲜事物挑战自己，也跟自己的职业有关系吧，[程序员图]\n3. 做短视频的目的呢: 算是副业吧！为了记录自己的生活，等老了-看到自己的杰作，留下美好的回忆。 \n### 设备介绍\n1. 目前设备的话，相机是管朋友借的、支架的话自己买的-某宝100多、电脑自己本身就有。最大的成本就是个人时间。 [图片]","slug":"Vlog","published":1,"updated":"2021-11-22T10:07:17.899Z","layout":"post","photos":[],"link":"","_id":"ckwlvxnsr000119ozc0gz4ngh","content":"<h1 id=\"Vlog构思笔记\"><a href=\"#Vlog构思笔记\" class=\"headerlink\" title=\"Vlog构思笔记\"></a>Vlog构思笔记</h1><ol>\n<li>构思好后在进行拍摄</li>\n<li>尽量半个月出一个视频</li>\n</ol>\n<h2 id=\"Vlog01\"><a href=\"#Vlog01\" class=\"headerlink\" title=\"Vlog01\"></a>Vlog01</h2><blockquote>\n<p>一个爆米花引起的血案，开启了自己的第一个vlog。</p>\n</blockquote>\n<h3 id=\"不足\"><a href=\"#不足\" class=\"headerlink\" title=\"不足\"></a>不足</h3><ul>\n<li>没有整体构思，按照视频瞎来。</li>\n<li>音频没有卡点。</li>\n</ul>\n<h2 id=\"Vlog02\"><a href=\"#Vlog02\" class=\"headerlink\" title=\"Vlog02\"></a>Vlog02</h2><blockquote>\n<p>个人介绍</p>\n</blockquote>\n<h3 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h3><ol>\n<li>hello,大家好我叫Even，这是我第二个Vlog短视频。 [抖音截图]</li>\n<li>为什么要做短视频呢，跟个人性格有关系，喜欢一些新鲜事物挑战自己，也跟自己的职业有关系吧，[程序员图]</li>\n<li>做短视频的目的呢: 算是副业吧！为了记录自己的生活，等老了-看到自己的杰作，留下美好的回忆。 <h3 id=\"设备介绍\"><a href=\"#设备介绍\" class=\"headerlink\" title=\"设备介绍\"></a>设备介绍</h3></li>\n<li>目前设备的话，相机是管朋友借的、支架的话自己买的-某宝100多、电脑自己本身就有。最大的成本就是个人时间。 [图片]</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Vlog构思笔记\"><a href=\"#Vlog构思笔记\" class=\"headerlink\" title=\"Vlog构思笔记\"></a>Vlog构思笔记</h1><ol>\n<li>构思好后在进行拍摄</li>\n<li>尽量半个月出一个视频</li>\n</ol>\n<h2 id=\"Vlog01\"><a href=\"#Vlog01\" class=\"headerlink\" title=\"Vlog01\"></a>Vlog01</h2><blockquote>\n<p>一个爆米花引起的血案，开启了自己的第一个vlog。</p>\n</blockquote>\n<h3 id=\"不足\"><a href=\"#不足\" class=\"headerlink\" title=\"不足\"></a>不足</h3><ul>\n<li>没有整体构思，按照视频瞎来。</li>\n<li>音频没有卡点。</li>\n</ul>\n<h2 id=\"Vlog02\"><a href=\"#Vlog02\" class=\"headerlink\" title=\"Vlog02\"></a>Vlog02</h2><blockquote>\n<p>个人介绍</p>\n</blockquote>\n<h3 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h3><ol>\n<li>hello,大家好我叫Even，这是我第二个Vlog短视频。 [抖音截图]</li>\n<li>为什么要做短视频呢，跟个人性格有关系，喜欢一些新鲜事物挑战自己，也跟自己的职业有关系吧，[程序员图]</li>\n<li>做短视频的目的呢: 算是副业吧！为了记录自己的生活，等老了-看到自己的杰作，留下美好的回忆。 <h3 id=\"设备介绍\"><a href=\"#设备介绍\" class=\"headerlink\" title=\"设备介绍\"></a>设备介绍</h3></li>\n<li>目前设备的话，相机是管朋友借的、支架的话自己买的-某宝100多、电脑自己本身就有。最大的成本就是个人时间。 [图片]</li>\n</ol>\n"},{"title":"文档","date":"2018-11-16T06:30:24.000Z","comments":0,"_content":"\n#### 官方文档\n- [TS文档](https://www.tslang.cn/docs/handbook/basic-types.html)\n- [TS英文版文档](https://www.typescriptlang.org/docs/)\n- [axios文档](http://www.axios-js.com/zh-cn/docs/)\n- [fly文档](https://wendux.github.io/dist/#/doc/flyio/engine)\n- [postcss文档](https://postcss.org/)\n- [npm文档](https://docs.npmjs.com/)\n- [moment时间文档](http://momentjs.cn/docs/#/manipulating/)\n- [MDN手册](https://developer.mozilla.org/zh-CN/)\n- [lodash.js操作文档](https://www.lodashjs.com/)\n- [高德地图文档](https://lbs.amap.com/api/javascript-api/reference/map/)\n- [postcss文档](https://postcss.org/)\n\n<!-- more -->   \n\n- [mongodb文档](https://www.mongodb.org.cn/)\n- [node-fetch文档](https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch)\n- [koa文档](https://koa.bootcss.com/#introduction)\n- [typescript文档](https://github.com/zhongsp/TypeScript)\n- [高德地图文档](https://lbs.amap.com/api/amap-mobile/gettingstarted)\n- [nginx文档](https://www.nginx.cn/doc/index.html)\n- [A-fram VR体验文档](https://www.techbrood.com/aframe)\n- [桌面端electron-文档](http://www.electronjs.org/docs/tutorial/macos-dock)\n- [linux命令大全-文档](https://www.linuxcool.com/cat)\n- [正则表达测-文档](https://regexper.com/)\n- [微前端-文档](https://qiankun.umijs.org/zh/cookbook)\n- [bootcdn网址](https://www.bootcdn.cn/)\n- [webpack文档](https://webpack.docschina.org/)\n- [node](http://nodejs.cn/api/)\n- [react](https://reactjs.org/)\n- [schema](https://schema.org.cn/)\n- [Even博客](https://even-cxw.github.io/)\n- [nexT主题](https://theme-next.iissnan.com/getting-started.html)\n- [nexT操作文档](https://hexo.io/zh-cn/docs/)\n- [nexT操作文档-个人01](https://www.jianshu.com/p/f054333ac9e6)\n- [nexT操作文档-个人02](https://neveryu.github.io/2016/09/30/hexo-next-two/)\n- [jszip-utils](http://stuk.github.io/jszip-utils/) \n- [jsZip文档](https://stuk.github.io/jszip/documentation/examples.html)\n- [fontawesome图标库-英文版](https://fontawesome.com/)\n- [gulp官方文档](https://www.gulpjs.com.cn/docs/getting-started/quick-start/)\n- [gulp中文文档](https://github.com/nimoc/gulp-book/blob/master/chapter2.md)\n- [AnnieJS-github](https://github.com/flash2x/AnnieJS)\n- [babel中文官网](https://babel.docschina.org/)\n\n#### 微信文档\n- [微信公众号订阅](https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_Open_Tag.html#23)\n- [微信jssdk开发文档](http://caibaojian.com/wxwiki/0030551f015f01ecaa56d20b88ee3c6cb32503bf.html)\n\n\n#### vue文档\n- [vue-element-admin-在线观看](https://panjiachen.github.io/vue-element-admin/#/dashboard)\n- [vue拖拽](http://www.itxst.com/vue-draggable/imj6nvze.html)\n- [vue-cli配置文档](https://cli.vuejs.org/zh/config/) \n- [vue文档](https://cn.vuejs.org/)\n- [vue3文档](https://vue3js.cn/docs/zh/guide/migration/introduction.html)\n- [vuex文档](https://vuex.vuejs.org/zh/)\n- [vue Cli](https://cli.vuejs.org/zh/guide/webpack.html)\n\n#### UI文档\n- [vant-ui](https://youzan.github.io/vant/#/zh-CN/quickstart)   \n- [element-ui](https://element.eleme.cn/#/zh-CN/component/layout)\n- [mui-ui](https://dev.dcloud.net.cn/mui/)\n- [cube-ui](https://didi.github.io/cube-ui/#/zh-CN)\n- [ant-Desing-ui](https://ant.design/components/rate-cn/)\n- [lay-ui](https://www.layui.com/doc/)\n- [vite-ui](https://vite.wiki/zh/introduction/)\n\n#### 他人博客\n- [阮一峰flex布局](http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html)\n- [axios博客](https://segmentfault.com/a/1190000008470355)\n- [tweenmax博客](https://segmentfault.com/a/1190000007496078)\n- [weui博客](https://blog.csdn.net/gegephp/article/details/88869255)\n- [nginx-缓存设置](https://www.layui.com/)\n- [SVN使用手册](https://blog.csdn.net/sinat_37812785/article/details/80243207)\n- [字符串的方法](https://www.cnblogs.com/zhangxin2540/p/7054835.html)\n- [正则表达式菜鸟文档](https://www.runoob.com/regexp/regexp-syntax.html)\n- [正则表达测试工具网址](https://c.runoob.com/front-end/854)\n- [koa的学习教程](https://chenshenhai.github.io/koa2-note/note/static/server.html)\n- [滚动元素图解](https://www.jianshu.com/p/d267456ebc0d)\n\n#### 插件文档\n- [tweenmax插件文档](https://www.tweenmax.com.cn/api/timelinemax/) \n- [简单日历开发-插件](https://github.com/zwhGithub/vue-calendar)\n- [日历开发文档](https://github.com/Hzy0913/mpvue-calendar)\n\n\n\n#### 工具\n- [正则表达式图解工具](https://regexper.com/)\n- [阿里巴巴失量图](https://www.iconfont.cn/search/indextag=)\n- [eruda.js调试博客1](https://www.jianshu.com/p/b95227a22745)\n- [eruda.js调试博客2](https://www.cnblogs.com/aisiqi-love/p/11764627.html)\n- [PDF转word](https://app.xunjiepdf.com/)\n- [easy-mock模拟数据工具](https://easy-mock.com/login)\n- [vorlonjs混合开发调试工具](http://www.vorlonjs.com/)\n- [修改host网址](https://zhuanlan.zhihu.com/p/107334179)\n- [npm环境变量配置](https://www.cnblogs.com/coder-lzh/p/9232192.html)\n- [Bulletproof background images](https://backgrounds.cm/)\n- [mac外接显示器设置](https://zhuanlan.zhihu.com/p/161631562)\n- [生成精灵图JSON网址](https://www.leshylabs.com/apps/sstool/)\n\n#### 学习\n- [单元测试](https://segmentfault.com/a/1190000013470485)\n- [前端地图线路图](https://www.mscto.com/html5/30073)\n- [乾坤-微前端-git项目](https://github.com/umijs/qiankun)\n- [移动端字体放大问题](https://juejin.cn/post/6844903507061932040)\n- [clientX,pageX,offsetX 图解](https://www.cnblogs.com/skylar/p/4121508.html)\n- [节流防抖](https://www.jianshu.com/p/566c66aafa22)\n- [慕课网](https://www.imooc.com/)\n- [51CTO企业版](https://b.51cto.com/index)\n- [手写vue-MVVM](https://github.com/DMQ/mvvm)\n- [计算机基础](http://www.weixueyuan.net/a/9.html)\n#### 软件下载\n- [罗技鼠标软件下载](https://www.logitech.com.cn/zh-cn/promo/ergosetup/logitech-options.html)\n\n#### bug文档\n- [返回不刷新问题](https://juejin.cn/post/6844903818191175687)\n","source":"_posts/document.md","raw":"---\ntitle: 文档\ndate: 2018-11-16 14:30:24\ncategories: 文档\ntags: [文档]\ncomments: false\n---\n\n#### 官方文档\n- [TS文档](https://www.tslang.cn/docs/handbook/basic-types.html)\n- [TS英文版文档](https://www.typescriptlang.org/docs/)\n- [axios文档](http://www.axios-js.com/zh-cn/docs/)\n- [fly文档](https://wendux.github.io/dist/#/doc/flyio/engine)\n- [postcss文档](https://postcss.org/)\n- [npm文档](https://docs.npmjs.com/)\n- [moment时间文档](http://momentjs.cn/docs/#/manipulating/)\n- [MDN手册](https://developer.mozilla.org/zh-CN/)\n- [lodash.js操作文档](https://www.lodashjs.com/)\n- [高德地图文档](https://lbs.amap.com/api/javascript-api/reference/map/)\n- [postcss文档](https://postcss.org/)\n\n<!-- more -->   \n\n- [mongodb文档](https://www.mongodb.org.cn/)\n- [node-fetch文档](https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch)\n- [koa文档](https://koa.bootcss.com/#introduction)\n- [typescript文档](https://github.com/zhongsp/TypeScript)\n- [高德地图文档](https://lbs.amap.com/api/amap-mobile/gettingstarted)\n- [nginx文档](https://www.nginx.cn/doc/index.html)\n- [A-fram VR体验文档](https://www.techbrood.com/aframe)\n- [桌面端electron-文档](http://www.electronjs.org/docs/tutorial/macos-dock)\n- [linux命令大全-文档](https://www.linuxcool.com/cat)\n- [正则表达测-文档](https://regexper.com/)\n- [微前端-文档](https://qiankun.umijs.org/zh/cookbook)\n- [bootcdn网址](https://www.bootcdn.cn/)\n- [webpack文档](https://webpack.docschina.org/)\n- [node](http://nodejs.cn/api/)\n- [react](https://reactjs.org/)\n- [schema](https://schema.org.cn/)\n- [Even博客](https://even-cxw.github.io/)\n- [nexT主题](https://theme-next.iissnan.com/getting-started.html)\n- [nexT操作文档](https://hexo.io/zh-cn/docs/)\n- [nexT操作文档-个人01](https://www.jianshu.com/p/f054333ac9e6)\n- [nexT操作文档-个人02](https://neveryu.github.io/2016/09/30/hexo-next-two/)\n- [jszip-utils](http://stuk.github.io/jszip-utils/) \n- [jsZip文档](https://stuk.github.io/jszip/documentation/examples.html)\n- [fontawesome图标库-英文版](https://fontawesome.com/)\n- [gulp官方文档](https://www.gulpjs.com.cn/docs/getting-started/quick-start/)\n- [gulp中文文档](https://github.com/nimoc/gulp-book/blob/master/chapter2.md)\n- [AnnieJS-github](https://github.com/flash2x/AnnieJS)\n- [babel中文官网](https://babel.docschina.org/)\n\n#### 微信文档\n- [微信公众号订阅](https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_Open_Tag.html#23)\n- [微信jssdk开发文档](http://caibaojian.com/wxwiki/0030551f015f01ecaa56d20b88ee3c6cb32503bf.html)\n\n\n#### vue文档\n- [vue-element-admin-在线观看](https://panjiachen.github.io/vue-element-admin/#/dashboard)\n- [vue拖拽](http://www.itxst.com/vue-draggable/imj6nvze.html)\n- [vue-cli配置文档](https://cli.vuejs.org/zh/config/) \n- [vue文档](https://cn.vuejs.org/)\n- [vue3文档](https://vue3js.cn/docs/zh/guide/migration/introduction.html)\n- [vuex文档](https://vuex.vuejs.org/zh/)\n- [vue Cli](https://cli.vuejs.org/zh/guide/webpack.html)\n\n#### UI文档\n- [vant-ui](https://youzan.github.io/vant/#/zh-CN/quickstart)   \n- [element-ui](https://element.eleme.cn/#/zh-CN/component/layout)\n- [mui-ui](https://dev.dcloud.net.cn/mui/)\n- [cube-ui](https://didi.github.io/cube-ui/#/zh-CN)\n- [ant-Desing-ui](https://ant.design/components/rate-cn/)\n- [lay-ui](https://www.layui.com/doc/)\n- [vite-ui](https://vite.wiki/zh/introduction/)\n\n#### 他人博客\n- [阮一峰flex布局](http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html)\n- [axios博客](https://segmentfault.com/a/1190000008470355)\n- [tweenmax博客](https://segmentfault.com/a/1190000007496078)\n- [weui博客](https://blog.csdn.net/gegephp/article/details/88869255)\n- [nginx-缓存设置](https://www.layui.com/)\n- [SVN使用手册](https://blog.csdn.net/sinat_37812785/article/details/80243207)\n- [字符串的方法](https://www.cnblogs.com/zhangxin2540/p/7054835.html)\n- [正则表达式菜鸟文档](https://www.runoob.com/regexp/regexp-syntax.html)\n- [正则表达测试工具网址](https://c.runoob.com/front-end/854)\n- [koa的学习教程](https://chenshenhai.github.io/koa2-note/note/static/server.html)\n- [滚动元素图解](https://www.jianshu.com/p/d267456ebc0d)\n\n#### 插件文档\n- [tweenmax插件文档](https://www.tweenmax.com.cn/api/timelinemax/) \n- [简单日历开发-插件](https://github.com/zwhGithub/vue-calendar)\n- [日历开发文档](https://github.com/Hzy0913/mpvue-calendar)\n\n\n\n#### 工具\n- [正则表达式图解工具](https://regexper.com/)\n- [阿里巴巴失量图](https://www.iconfont.cn/search/indextag=)\n- [eruda.js调试博客1](https://www.jianshu.com/p/b95227a22745)\n- [eruda.js调试博客2](https://www.cnblogs.com/aisiqi-love/p/11764627.html)\n- [PDF转word](https://app.xunjiepdf.com/)\n- [easy-mock模拟数据工具](https://easy-mock.com/login)\n- [vorlonjs混合开发调试工具](http://www.vorlonjs.com/)\n- [修改host网址](https://zhuanlan.zhihu.com/p/107334179)\n- [npm环境变量配置](https://www.cnblogs.com/coder-lzh/p/9232192.html)\n- [Bulletproof background images](https://backgrounds.cm/)\n- [mac外接显示器设置](https://zhuanlan.zhihu.com/p/161631562)\n- [生成精灵图JSON网址](https://www.leshylabs.com/apps/sstool/)\n\n#### 学习\n- [单元测试](https://segmentfault.com/a/1190000013470485)\n- [前端地图线路图](https://www.mscto.com/html5/30073)\n- [乾坤-微前端-git项目](https://github.com/umijs/qiankun)\n- [移动端字体放大问题](https://juejin.cn/post/6844903507061932040)\n- [clientX,pageX,offsetX 图解](https://www.cnblogs.com/skylar/p/4121508.html)\n- [节流防抖](https://www.jianshu.com/p/566c66aafa22)\n- [慕课网](https://www.imooc.com/)\n- [51CTO企业版](https://b.51cto.com/index)\n- [手写vue-MVVM](https://github.com/DMQ/mvvm)\n- [计算机基础](http://www.weixueyuan.net/a/9.html)\n#### 软件下载\n- [罗技鼠标软件下载](https://www.logitech.com.cn/zh-cn/promo/ergosetup/logitech-options.html)\n\n#### bug文档\n- [返回不刷新问题](https://juejin.cn/post/6844903818191175687)\n","slug":"document","published":1,"updated":"2021-11-30T01:36:04.493Z","layout":"post","photos":[],"link":"","_id":"ckwlvxnsv000319oz9raxdapa","content":"<h4 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a>官方文档</h4><ul>\n<li><a href=\"https://www.tslang.cn/docs/handbook/basic-types.html\">TS文档</a></li>\n<li><a href=\"https://www.typescriptlang.org/docs/\">TS英文版文档</a></li>\n<li><a href=\"http://www.axios-js.com/zh-cn/docs/\">axios文档</a></li>\n<li><a href=\"https://wendux.github.io/dist/#/doc/flyio/engine\">fly文档</a></li>\n<li><a href=\"https://postcss.org/\">postcss文档</a></li>\n<li><a href=\"https://docs.npmjs.com/\">npm文档</a></li>\n<li><a href=\"http://momentjs.cn/docs/#/manipulating/\">moment时间文档</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/\">MDN手册</a></li>\n<li><a href=\"https://www.lodashjs.com/\">lodash.js操作文档</a></li>\n<li><a href=\"https://lbs.amap.com/api/javascript-api/reference/map/\">高德地图文档</a></li>\n<li><a href=\"https://postcss.org/\">postcss文档</a></li>\n</ul>\n<span id=\"more\"></span>   \n\n<ul>\n<li><a href=\"https://www.mongodb.org.cn/\">mongodb文档</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch\">node-fetch文档</a></li>\n<li><a href=\"https://koa.bootcss.com/#introduction\">koa文档</a></li>\n<li><a href=\"https://github.com/zhongsp/TypeScript\">typescript文档</a></li>\n<li><a href=\"https://lbs.amap.com/api/amap-mobile/gettingstarted\">高德地图文档</a></li>\n<li><a href=\"https://www.nginx.cn/doc/index.html\">nginx文档</a></li>\n<li><a href=\"https://www.techbrood.com/aframe\">A-fram VR体验文档</a></li>\n<li><a href=\"http://www.electronjs.org/docs/tutorial/macos-dock\">桌面端electron-文档</a></li>\n<li><a href=\"https://www.linuxcool.com/cat\">linux命令大全-文档</a></li>\n<li><a href=\"https://regexper.com/\">正则表达测-文档</a></li>\n<li><a href=\"https://qiankun.umijs.org/zh/cookbook\">微前端-文档</a></li>\n<li><a href=\"https://www.bootcdn.cn/\">bootcdn网址</a></li>\n<li><a href=\"https://webpack.docschina.org/\">webpack文档</a></li>\n<li><a href=\"http://nodejs.cn/api/\">node</a></li>\n<li><a href=\"https://reactjs.org/\">react</a></li>\n<li><a href=\"https://schema.org.cn/\">schema</a></li>\n<li><a href=\"https://even-cxw.github.io/\">Even博客</a></li>\n<li><a href=\"https://theme-next.iissnan.com/getting-started.html\">nexT主题</a></li>\n<li><a href=\"https://hexo.io/zh-cn/docs/\">nexT操作文档</a></li>\n<li><a href=\"https://www.jianshu.com/p/f054333ac9e6\">nexT操作文档-个人01</a></li>\n<li><a href=\"https://neveryu.github.io/2016/09/30/hexo-next-two/\">nexT操作文档-个人02</a></li>\n<li><a href=\"http://stuk.github.io/jszip-utils/\">jszip-utils</a> </li>\n<li><a href=\"https://stuk.github.io/jszip/documentation/examples.html\">jsZip文档</a></li>\n<li><a href=\"https://fontawesome.com/\">fontawesome图标库-英文版</a></li>\n<li><a href=\"https://www.gulpjs.com.cn/docs/getting-started/quick-start/\">gulp官方文档</a></li>\n<li><a href=\"https://github.com/nimoc/gulp-book/blob/master/chapter2.md\">gulp中文文档</a></li>\n<li><a href=\"https://github.com/flash2x/AnnieJS\">AnnieJS-github</a></li>\n<li><a href=\"https://babel.docschina.org/\">babel中文官网</a></li>\n</ul>\n<h4 id=\"微信文档\"><a href=\"#微信文档\" class=\"headerlink\" title=\"微信文档\"></a>微信文档</h4><ul>\n<li><a href=\"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_Open_Tag.html#23\">微信公众号订阅</a></li>\n<li><a href=\"http://caibaojian.com/wxwiki/0030551f015f01ecaa56d20b88ee3c6cb32503bf.html\">微信jssdk开发文档</a></li>\n</ul>\n<h4 id=\"vue文档\"><a href=\"#vue文档\" class=\"headerlink\" title=\"vue文档\"></a>vue文档</h4><ul>\n<li><a href=\"https://panjiachen.github.io/vue-element-admin/#/dashboard\">vue-element-admin-在线观看</a></li>\n<li><a href=\"http://www.itxst.com/vue-draggable/imj6nvze.html\">vue拖拽</a></li>\n<li><a href=\"https://cli.vuejs.org/zh/config/\">vue-cli配置文档</a> </li>\n<li><a href=\"https://cn.vuejs.org/\">vue文档</a></li>\n<li><a href=\"https://vue3js.cn/docs/zh/guide/migration/introduction.html\">vue3文档</a></li>\n<li><a href=\"https://vuex.vuejs.org/zh/\">vuex文档</a></li>\n<li><a href=\"https://cli.vuejs.org/zh/guide/webpack.html\">vue Cli</a></li>\n</ul>\n<h4 id=\"UI文档\"><a href=\"#UI文档\" class=\"headerlink\" title=\"UI文档\"></a>UI文档</h4><ul>\n<li><a href=\"https://youzan.github.io/vant/#/zh-CN/quickstart\">vant-ui</a>   </li>\n<li><a href=\"https://element.eleme.cn/#/zh-CN/component/layout\">element-ui</a></li>\n<li><a href=\"https://dev.dcloud.net.cn/mui/\">mui-ui</a></li>\n<li><a href=\"https://didi.github.io/cube-ui/#/zh-CN\">cube-ui</a></li>\n<li><a href=\"https://ant.design/components/rate-cn/\">ant-Desing-ui</a></li>\n<li><a href=\"https://www.layui.com/doc/\">lay-ui</a></li>\n<li><a href=\"https://vite.wiki/zh/introduction/\">vite-ui</a></li>\n</ul>\n<h4 id=\"他人博客\"><a href=\"#他人博客\" class=\"headerlink\" title=\"他人博客\"></a>他人博客</h4><ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\">阮一峰flex布局</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000008470355\">axios博客</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000007496078\">tweenmax博客</a></li>\n<li><a href=\"https://blog.csdn.net/gegephp/article/details/88869255\">weui博客</a></li>\n<li><a href=\"https://www.layui.com/\">nginx-缓存设置</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_37812785/article/details/80243207\">SVN使用手册</a></li>\n<li><a href=\"https://www.cnblogs.com/zhangxin2540/p/7054835.html\">字符串的方法</a></li>\n<li><a href=\"https://www.runoob.com/regexp/regexp-syntax.html\">正则表达式菜鸟文档</a></li>\n<li><a href=\"https://c.runoob.com/front-end/854\">正则表达测试工具网址</a></li>\n<li><a href=\"https://chenshenhai.github.io/koa2-note/note/static/server.html\">koa的学习教程</a></li>\n<li><a href=\"https://www.jianshu.com/p/d267456ebc0d\">滚动元素图解</a></li>\n</ul>\n<h4 id=\"插件文档\"><a href=\"#插件文档\" class=\"headerlink\" title=\"插件文档\"></a>插件文档</h4><ul>\n<li><a href=\"https://www.tweenmax.com.cn/api/timelinemax/\">tweenmax插件文档</a> </li>\n<li><a href=\"https://github.com/zwhGithub/vue-calendar\">简单日历开发-插件</a></li>\n<li><a href=\"https://github.com/Hzy0913/mpvue-calendar\">日历开发文档</a></li>\n</ul>\n<h4 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h4><ul>\n<li><a href=\"https://regexper.com/\">正则表达式图解工具</a></li>\n<li><a href=\"https://www.iconfont.cn/search/indextag=\">阿里巴巴失量图</a></li>\n<li><a href=\"https://www.jianshu.com/p/b95227a22745\">eruda.js调试博客1</a></li>\n<li><a href=\"https://www.cnblogs.com/aisiqi-love/p/11764627.html\">eruda.js调试博客2</a></li>\n<li><a href=\"https://app.xunjiepdf.com/\">PDF转word</a></li>\n<li><a href=\"https://easy-mock.com/login\">easy-mock模拟数据工具</a></li>\n<li><a href=\"http://www.vorlonjs.com/\">vorlonjs混合开发调试工具</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/107334179\">修改host网址</a></li>\n<li><a href=\"https://www.cnblogs.com/coder-lzh/p/9232192.html\">npm环境变量配置</a></li>\n<li><a href=\"https://backgrounds.cm/\">Bulletproof background images</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/161631562\">mac外接显示器设置</a></li>\n<li><a href=\"https://www.leshylabs.com/apps/sstool/\">生成精灵图JSON网址</a></li>\n</ul>\n<h4 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h4><ul>\n<li><a href=\"https://segmentfault.com/a/1190000013470485\">单元测试</a></li>\n<li><a href=\"https://www.mscto.com/html5/30073\">前端地图线路图</a></li>\n<li><a href=\"https://github.com/umijs/qiankun\">乾坤-微前端-git项目</a></li>\n<li><a href=\"https://juejin.cn/post/6844903507061932040\">移动端字体放大问题</a></li>\n<li><a href=\"https://www.cnblogs.com/skylar/p/4121508.html\">clientX,pageX,offsetX 图解</a></li>\n<li><a href=\"https://www.jianshu.com/p/566c66aafa22\">节流防抖</a></li>\n<li><a href=\"https://www.imooc.com/\">慕课网</a></li>\n<li><a href=\"https://b.51cto.com/index\">51CTO企业版</a></li>\n<li><a href=\"https://github.com/DMQ/mvvm\">手写vue-MVVM</a></li>\n<li><a href=\"http://www.weixueyuan.net/a/9.html\">计算机基础</a><h4 id=\"软件下载\"><a href=\"#软件下载\" class=\"headerlink\" title=\"软件下载\"></a>软件下载</h4></li>\n<li><a href=\"https://www.logitech.com.cn/zh-cn/promo/ergosetup/logitech-options.html\">罗技鼠标软件下载</a></li>\n</ul>\n<h4 id=\"bug文档\"><a href=\"#bug文档\" class=\"headerlink\" title=\"bug文档\"></a>bug文档</h4><ul>\n<li><a href=\"https://juejin.cn/post/6844903818191175687\">返回不刷新问题</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h4 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a>官方文档</h4><ul>\n<li><a href=\"https://www.tslang.cn/docs/handbook/basic-types.html\">TS文档</a></li>\n<li><a href=\"https://www.typescriptlang.org/docs/\">TS英文版文档</a></li>\n<li><a href=\"http://www.axios-js.com/zh-cn/docs/\">axios文档</a></li>\n<li><a href=\"https://wendux.github.io/dist/#/doc/flyio/engine\">fly文档</a></li>\n<li><a href=\"https://postcss.org/\">postcss文档</a></li>\n<li><a href=\"https://docs.npmjs.com/\">npm文档</a></li>\n<li><a href=\"http://momentjs.cn/docs/#/manipulating/\">moment时间文档</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/\">MDN手册</a></li>\n<li><a href=\"https://www.lodashjs.com/\">lodash.js操作文档</a></li>\n<li><a href=\"https://lbs.amap.com/api/javascript-api/reference/map/\">高德地图文档</a></li>\n<li><a href=\"https://postcss.org/\">postcss文档</a></li>\n</ul>","more":"<ul>\n<li><a href=\"https://www.mongodb.org.cn/\">mongodb文档</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch\">node-fetch文档</a></li>\n<li><a href=\"https://koa.bootcss.com/#introduction\">koa文档</a></li>\n<li><a href=\"https://github.com/zhongsp/TypeScript\">typescript文档</a></li>\n<li><a href=\"https://lbs.amap.com/api/amap-mobile/gettingstarted\">高德地图文档</a></li>\n<li><a href=\"https://www.nginx.cn/doc/index.html\">nginx文档</a></li>\n<li><a href=\"https://www.techbrood.com/aframe\">A-fram VR体验文档</a></li>\n<li><a href=\"http://www.electronjs.org/docs/tutorial/macos-dock\">桌面端electron-文档</a></li>\n<li><a href=\"https://www.linuxcool.com/cat\">linux命令大全-文档</a></li>\n<li><a href=\"https://regexper.com/\">正则表达测-文档</a></li>\n<li><a href=\"https://qiankun.umijs.org/zh/cookbook\">微前端-文档</a></li>\n<li><a href=\"https://www.bootcdn.cn/\">bootcdn网址</a></li>\n<li><a href=\"https://webpack.docschina.org/\">webpack文档</a></li>\n<li><a href=\"http://nodejs.cn/api/\">node</a></li>\n<li><a href=\"https://reactjs.org/\">react</a></li>\n<li><a href=\"https://schema.org.cn/\">schema</a></li>\n<li><a href=\"https://even-cxw.github.io/\">Even博客</a></li>\n<li><a href=\"https://theme-next.iissnan.com/getting-started.html\">nexT主题</a></li>\n<li><a href=\"https://hexo.io/zh-cn/docs/\">nexT操作文档</a></li>\n<li><a href=\"https://www.jianshu.com/p/f054333ac9e6\">nexT操作文档-个人01</a></li>\n<li><a href=\"https://neveryu.github.io/2016/09/30/hexo-next-two/\">nexT操作文档-个人02</a></li>\n<li><a href=\"http://stuk.github.io/jszip-utils/\">jszip-utils</a> </li>\n<li><a href=\"https://stuk.github.io/jszip/documentation/examples.html\">jsZip文档</a></li>\n<li><a href=\"https://fontawesome.com/\">fontawesome图标库-英文版</a></li>\n<li><a href=\"https://www.gulpjs.com.cn/docs/getting-started/quick-start/\">gulp官方文档</a></li>\n<li><a href=\"https://github.com/nimoc/gulp-book/blob/master/chapter2.md\">gulp中文文档</a></li>\n<li><a href=\"https://github.com/flash2x/AnnieJS\">AnnieJS-github</a></li>\n<li><a href=\"https://babel.docschina.org/\">babel中文官网</a></li>\n</ul>\n<h4 id=\"微信文档\"><a href=\"#微信文档\" class=\"headerlink\" title=\"微信文档\"></a>微信文档</h4><ul>\n<li><a href=\"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_Open_Tag.html#23\">微信公众号订阅</a></li>\n<li><a href=\"http://caibaojian.com/wxwiki/0030551f015f01ecaa56d20b88ee3c6cb32503bf.html\">微信jssdk开发文档</a></li>\n</ul>\n<h4 id=\"vue文档\"><a href=\"#vue文档\" class=\"headerlink\" title=\"vue文档\"></a>vue文档</h4><ul>\n<li><a href=\"https://panjiachen.github.io/vue-element-admin/#/dashboard\">vue-element-admin-在线观看</a></li>\n<li><a href=\"http://www.itxst.com/vue-draggable/imj6nvze.html\">vue拖拽</a></li>\n<li><a href=\"https://cli.vuejs.org/zh/config/\">vue-cli配置文档</a> </li>\n<li><a href=\"https://cn.vuejs.org/\">vue文档</a></li>\n<li><a href=\"https://vue3js.cn/docs/zh/guide/migration/introduction.html\">vue3文档</a></li>\n<li><a href=\"https://vuex.vuejs.org/zh/\">vuex文档</a></li>\n<li><a href=\"https://cli.vuejs.org/zh/guide/webpack.html\">vue Cli</a></li>\n</ul>\n<h4 id=\"UI文档\"><a href=\"#UI文档\" class=\"headerlink\" title=\"UI文档\"></a>UI文档</h4><ul>\n<li><a href=\"https://youzan.github.io/vant/#/zh-CN/quickstart\">vant-ui</a>   </li>\n<li><a href=\"https://element.eleme.cn/#/zh-CN/component/layout\">element-ui</a></li>\n<li><a href=\"https://dev.dcloud.net.cn/mui/\">mui-ui</a></li>\n<li><a href=\"https://didi.github.io/cube-ui/#/zh-CN\">cube-ui</a></li>\n<li><a href=\"https://ant.design/components/rate-cn/\">ant-Desing-ui</a></li>\n<li><a href=\"https://www.layui.com/doc/\">lay-ui</a></li>\n<li><a href=\"https://vite.wiki/zh/introduction/\">vite-ui</a></li>\n</ul>\n<h4 id=\"他人博客\"><a href=\"#他人博客\" class=\"headerlink\" title=\"他人博客\"></a>他人博客</h4><ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\">阮一峰flex布局</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000008470355\">axios博客</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000007496078\">tweenmax博客</a></li>\n<li><a href=\"https://blog.csdn.net/gegephp/article/details/88869255\">weui博客</a></li>\n<li><a href=\"https://www.layui.com/\">nginx-缓存设置</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_37812785/article/details/80243207\">SVN使用手册</a></li>\n<li><a href=\"https://www.cnblogs.com/zhangxin2540/p/7054835.html\">字符串的方法</a></li>\n<li><a href=\"https://www.runoob.com/regexp/regexp-syntax.html\">正则表达式菜鸟文档</a></li>\n<li><a href=\"https://c.runoob.com/front-end/854\">正则表达测试工具网址</a></li>\n<li><a href=\"https://chenshenhai.github.io/koa2-note/note/static/server.html\">koa的学习教程</a></li>\n<li><a href=\"https://www.jianshu.com/p/d267456ebc0d\">滚动元素图解</a></li>\n</ul>\n<h4 id=\"插件文档\"><a href=\"#插件文档\" class=\"headerlink\" title=\"插件文档\"></a>插件文档</h4><ul>\n<li><a href=\"https://www.tweenmax.com.cn/api/timelinemax/\">tweenmax插件文档</a> </li>\n<li><a href=\"https://github.com/zwhGithub/vue-calendar\">简单日历开发-插件</a></li>\n<li><a href=\"https://github.com/Hzy0913/mpvue-calendar\">日历开发文档</a></li>\n</ul>\n<h4 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h4><ul>\n<li><a href=\"https://regexper.com/\">正则表达式图解工具</a></li>\n<li><a href=\"https://www.iconfont.cn/search/indextag=\">阿里巴巴失量图</a></li>\n<li><a href=\"https://www.jianshu.com/p/b95227a22745\">eruda.js调试博客1</a></li>\n<li><a href=\"https://www.cnblogs.com/aisiqi-love/p/11764627.html\">eruda.js调试博客2</a></li>\n<li><a href=\"https://app.xunjiepdf.com/\">PDF转word</a></li>\n<li><a href=\"https://easy-mock.com/login\">easy-mock模拟数据工具</a></li>\n<li><a href=\"http://www.vorlonjs.com/\">vorlonjs混合开发调试工具</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/107334179\">修改host网址</a></li>\n<li><a href=\"https://www.cnblogs.com/coder-lzh/p/9232192.html\">npm环境变量配置</a></li>\n<li><a href=\"https://backgrounds.cm/\">Bulletproof background images</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/161631562\">mac外接显示器设置</a></li>\n<li><a href=\"https://www.leshylabs.com/apps/sstool/\">生成精灵图JSON网址</a></li>\n</ul>\n<h4 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h4><ul>\n<li><a href=\"https://segmentfault.com/a/1190000013470485\">单元测试</a></li>\n<li><a href=\"https://www.mscto.com/html5/30073\">前端地图线路图</a></li>\n<li><a href=\"https://github.com/umijs/qiankun\">乾坤-微前端-git项目</a></li>\n<li><a href=\"https://juejin.cn/post/6844903507061932040\">移动端字体放大问题</a></li>\n<li><a href=\"https://www.cnblogs.com/skylar/p/4121508.html\">clientX,pageX,offsetX 图解</a></li>\n<li><a href=\"https://www.jianshu.com/p/566c66aafa22\">节流防抖</a></li>\n<li><a href=\"https://www.imooc.com/\">慕课网</a></li>\n<li><a href=\"https://b.51cto.com/index\">51CTO企业版</a></li>\n<li><a href=\"https://github.com/DMQ/mvvm\">手写vue-MVVM</a></li>\n<li><a href=\"http://www.weixueyuan.net/a/9.html\">计算机基础</a><h4 id=\"软件下载\"><a href=\"#软件下载\" class=\"headerlink\" title=\"软件下载\"></a>软件下载</h4></li>\n<li><a href=\"https://www.logitech.com.cn/zh-cn/promo/ergosetup/logitech-options.html\">罗技鼠标软件下载</a></li>\n</ul>\n<h4 id=\"bug文档\"><a href=\"#bug文档\" class=\"headerlink\" title=\"bug文档\"></a>bug文档</h4><ul>\n<li><a href=\"https://juejin.cn/post/6844903818191175687\">返回不刷新问题</a></li>\n</ul>"},{"title":"资源下载","date":"2021-11-22T08:15:24.000Z","comments":0,"_content":"\n## 一、下载逻辑\n<font color=\"red\">【先区分是请求方式】</font>\n\n### 1、get请求\n```javascript\n// 直接打开下载\nwindow.open()\n```\n### 2、post请求\n\n1. 若后端返回数据为`application/octet-stream格式`\n- application/octet-stream: 需要转成[blob](https://developer.mozilla.org/zh-CN/docs/Web/API/Blob/Blob)对象，在通过[createObjectURL](https://developer.mozilla.org/zh-CN/docs/Web/API/URL/createObjectURL)转成连接。\n```javascript\n// res为后端返回的数据流\nvar blob = new Blob(['res'],{type:'application/vnd.ms-excel'})\nvar link = URL.createObjectURL(blob)\nlet a = document.createElement(\"a\"); // 生成一个a元素\nlet event = new MouseEvent(\"click\"); // 创建一个单击事件\na.download = \"text.txt\"; // 设置图片名称\na.href = link // 将生成的URL设置为a.href属性\na.dispatchEvent(event); // 触发a的单击事件\n```\n\n<!-- more -->\n\n\n2. 若后端返回格式为`base64格式`：可能需要我们拼接前缀，对应前缀如下。\t\n- 文档\n|  文件后缀   | 文档类型  |\n|  --------  | --------  |\n| doc  | data:application/msword;base64, |\n| docx  | data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64, |\n| xls  | data:application/vnd.ms-excel;base64, |\n| xlsx  | data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64, |\n| pdf  | data:application/pdf;base64, |\n| ppt  | data:application/vnd.ms-powerpoint;base64, |\n| pptx  | data:application/vnd.openxmlformats-officedocument.presentationml.presentation;base64, |\n| txt  | data:text/plain;base64, |\n\t\n- 图片\n|  文件后缀   | 文档类型  |\n|  --------  | --------  |\n| png  | data:image/png;base64, |\n| jpg  | data:image/jpeg;base64, |\n| gif  | data:image/gif;base64, |\n| svg  | data:image/svg+xml;base64, |\n| ico  | data:image/x-icon;base64, |\n| bmp  | data:image/bmp;base64, |\n- 将拼接好的url通过a连接下载，代码如下！\n> a标签下载\n```javascript   \n\tlet a = document.createElement(\"a\"); // 生成一个a元素\n\tlet event = new MouseEvent(\"click\"); // 创建一个单击事件\n\ta.download = \"text.txt\"; // 设置图片名称\n\ta.href = link //  将生成的base64设置为a.href属性\n\ta.dispatchEvent(event); // 触发a的单击事件\n```\n> wondow.open()下载\n```javascript\n\twindo.open()\n```\n\n----\n\n## 二、Blob对象\n**1、第一个参数：**[ArrayBuffer](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer)、[TypedArray](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray)、[Blob](https://developer.mozilla.org/zh-CN/docs/Web/API/Blob/Blob)、 DOMString:javascript里的string字符串 等对象构成的 Array,\n- 为了让前端操作二进制数据才有了`ArrayBuffer`、`TypedArray`、`Uint8Array...`等对象， 那他们分别代表什么意思呢？\n- `ArrayBuffer`\n> 官网解释：二进制数据缓冲区，它是一个字节数组。 个人理解为：无法读取和操作的数据格式，只能看到他的长度看不到内容更别说来`操作此内容`，<font color=\"green\">【那我们来如何操作呢？就有了另外几个api】</font>\n```javascript\n// 定义长度为4的数据容器, 哈哈，这里只能看不能有任何操作！\nvar buffer = new Arraybuffer(4)\n```\n- `TypedArray`\n> 这个更是一个`烟雾弹`,TypedArray既不是全局变量也不是函数(所以休想在全局中访问到他),他是`Uint8Array...`等子类的实例化，当我们得到`TypedArray`实例后便可以轻松的使用他的api操作数据了。\n```javascript\n// 定义长度为4的数据容器, 哈哈，这里只能看不能有任何操作！\nvar buffer = new Arraybuffer(4)\n// 得到TypedArray 这样我就可以操作上面的数据了。\nvar TypedArray = new Uint8Array(buffer);\nTypedArray[0] = 32;\nTypedArray[1] = 64;\n```\n- `Uint8Array`\n> 数组类型表示一个8位无符号整型数组，创建时内容被初始化为0。创建完后，可以以对象的方式或使用数组下标索引的方式引用数组中的元素。\t\n```javascript \n// 创建TypedArray实例\nvar TypedArray = new Uint8Array(object);\n```\n\n**2、第二个参数：**[官方文档](https://developer.mozilla.org/zh-CN/docs/Web/API/Blob/Blob)有说是[MIME](https://www.w3school.com.cn/media/media_mimeref.asp)媒体类型，白话意思:\"定义下载文件的后缀名\"\n\n**3、blob**是前端操作数据的核心对象，很多数据处理都需要他在中间做`转换`,如图！！！\n![](/images/blob.png)\n- [File](https://developer.mozilla.org/zh-CN/docs/Web/API/File)对象大家都很熟悉，当我们通过`input`框选择照片的时候， 可以抓取到file对象，当你在浏览器控制台中打开file对象时，会发现<font color=\"red\">file的原型指向blob对象</font>`file并没有定义任何api,都是继承blob对象`， 由此可见blob对象的重要性。\n\n----\n\n## 三、问题?\n### 1、blob对象MIME参数可以定义后缀名，a标签的download也可以定义后缀名，哪个优先级更高?\n> `download`的优先级更高\n> download没有定义后缀名的时候以[MIME](https://www.w3school.com.cn/media/media_mimeref.asp)为准\n```javascript\nvar blob = new Blob(['1111'],{type:'application/vnd.ms-excel'}) //定义了exce表格\na.download = \"text.txt\"; // 定义了txt文本\n```\n\n### 2、改变后缀名文件大小是否被改变?\n> 如下分别定义了`text.jpg`、`vscode.png`、`text.text`三种不同的名字,转成了我想要的格式，但是他的**数据大小是不会被改变的**\n![](/images/download/download01.png)\n\n----\n\n## 四、实际开发应用\n### 1、图片连接不在同一个域下,如何实现下载？\n1. 我们需要吧连接转成barse64然后在下载\n2. barse64可以用canvas的drawImage转成baser64,drawImage的参数是img\n3. 所以我们需要把url连接变成image对象。 代码如下！！\n```javascript\nvar img = new Image();\nimg.crossOrigin = 'anonymous'\nimg.src = '.....';\nimg.onload = function() {\n\tlet canvas = document.createElement('canvas');\n\tcanvas.width = img.width;\n\tcanvas.height = img.height;\n\tlet content = canvas.getContext('2d');\n\tcontent.drawImage(img,0,0,img.width,img.height);\n\tlet url = canvas.toDataURL();\n\twindo.open(url)\n}\n```\n\n### 2、如何实现input框手动输入内容，并下载？\n1. 第一想到（a连接、window.open）实现下载，那么如何将a连接的href指向内容呢？\n2. 可能想到了用 URL.createObjectURL()创建连接，但是该函数的参数只能是 blob\\file对象\n3. blob对象只要new一个即可，将我们要输入的文本以参数的形式传递进去，实例化一个blob对象。\n4. 通过以上想法，便可以实现这个功能。  代码如下！ 有俩种可实行方案。\n```javascript\nlet text = document.getElementById(\"text\");\nlet download = document.getElementById(\"download\");\ntext.addEventListener('input', function() {\n\tconsole.log(this.value)\n})\ndownload.addEventListener('click', function() {\n\tvar blob = new Blob(['1111'],{type:'application/vnd.ms-excel'})\n\tconsole.log(blob);\n\tlet a = document.createElement(\"a\"); // 生成一个a元素\n\tlet event = new MouseEvent(\"click\"); // 创建一个单击事件\n\ta.download = \"text.txt\"; // 设置图片名称\n\ta.href = link // 将生成的URL设置为a.href属性\n\ta.dispatchEvent(event); // 触发a的单击事件\n})\n```\n\n### 3、如何实现base64转成blob？\n- `new Blob(array,options)`, 思考:从base64中获取Blob中获取`俩个参数`，如果获取到直接new一下就完美解决！！!\n1. <font color=\"green\">[获取第二个参数]]</font>：<font color=\"red\">MIME类型很好获取 => 可以从base64前缀中读取到。\t</font>\n| base64前缀 | MIME类型 |\n| ---- | ---- |\n|   data:application/msword;base64,   |  application/msword    |\n|   data:application/vnd.ms-powerpoint;base64,   |  application/vnd.ms-powerpoint   |\n> 代码如下\n```javascript\n// mime类型\nvar mimeType = base64URI.split(',')[0].split(':')[1].split(';')[0]; \n```\n\n2. <font color=\"green\">[获取第一个参数]</font>：<font color=\"red\">将base64内容转成TypeArray</font>\n> 解码base64-api:[atob](https://developer.mozilla.org/en-US/docs/Web/API/atob)、编码base64-api:[btoa](https://developer.mozilla.org/en-US/docs/Web/API/btoa)、[charCodeAt](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt)\n```javascript\nfunction base64ToBlob() {\n\t// mime类型\n\tvar mimeType = base64URI.split(',')[0].split(':')[1].split(';')[0]; \n\t// 解码base64\n\tvar atobBase64 = atob(base64URI.split(',')[1]); //base64 解码\n\t// 创建二进制缓冲区，只能看不能操作\n\tvar arrayBuffer = new ArrayBuffer(atobBase64.length);\n\t// 创建可以操作视图缓冲区数据的函数api - 只有这样才可以操作数据。\n\tvar typeArray01 = new Uint8Array(arrayBuffer)\n\t// 操作类型数组，将解码barse64数据插入类数组中。\n\tfor (var i = 0; i < atobBase64.length; i++) {\n\t\ttypeArray01[i] = atobBase64.charCodeAt(i);\n\t}\n\tnew Blob([typeArray01], {type: mimeType});\n}\n```\n\n\n### 4、如何实现blob转成base64？\n- [FileReader](https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader)\n```javascript\nvar reader = new FileReader();\nreader.onload = function (e) {\n\tcallback(e.target.result);\n}\nreader.readAsDataURL(blob);\n\n```","source":"_posts/download.md","raw":"---\ntitle: 资源下载\ndate: 2021-11-22 16:15:24\ncategories: javascript\ntags: [javascript]\ncomments: false\n---\n\n## 一、下载逻辑\n<font color=\"red\">【先区分是请求方式】</font>\n\n### 1、get请求\n```javascript\n// 直接打开下载\nwindow.open()\n```\n### 2、post请求\n\n1. 若后端返回数据为`application/octet-stream格式`\n- application/octet-stream: 需要转成[blob](https://developer.mozilla.org/zh-CN/docs/Web/API/Blob/Blob)对象，在通过[createObjectURL](https://developer.mozilla.org/zh-CN/docs/Web/API/URL/createObjectURL)转成连接。\n```javascript\n// res为后端返回的数据流\nvar blob = new Blob(['res'],{type:'application/vnd.ms-excel'})\nvar link = URL.createObjectURL(blob)\nlet a = document.createElement(\"a\"); // 生成一个a元素\nlet event = new MouseEvent(\"click\"); // 创建一个单击事件\na.download = \"text.txt\"; // 设置图片名称\na.href = link // 将生成的URL设置为a.href属性\na.dispatchEvent(event); // 触发a的单击事件\n```\n\n<!-- more -->\n\n\n2. 若后端返回格式为`base64格式`：可能需要我们拼接前缀，对应前缀如下。\t\n- 文档\n|  文件后缀   | 文档类型  |\n|  --------  | --------  |\n| doc  | data:application/msword;base64, |\n| docx  | data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64, |\n| xls  | data:application/vnd.ms-excel;base64, |\n| xlsx  | data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64, |\n| pdf  | data:application/pdf;base64, |\n| ppt  | data:application/vnd.ms-powerpoint;base64, |\n| pptx  | data:application/vnd.openxmlformats-officedocument.presentationml.presentation;base64, |\n| txt  | data:text/plain;base64, |\n\t\n- 图片\n|  文件后缀   | 文档类型  |\n|  --------  | --------  |\n| png  | data:image/png;base64, |\n| jpg  | data:image/jpeg;base64, |\n| gif  | data:image/gif;base64, |\n| svg  | data:image/svg+xml;base64, |\n| ico  | data:image/x-icon;base64, |\n| bmp  | data:image/bmp;base64, |\n- 将拼接好的url通过a连接下载，代码如下！\n> a标签下载\n```javascript   \n\tlet a = document.createElement(\"a\"); // 生成一个a元素\n\tlet event = new MouseEvent(\"click\"); // 创建一个单击事件\n\ta.download = \"text.txt\"; // 设置图片名称\n\ta.href = link //  将生成的base64设置为a.href属性\n\ta.dispatchEvent(event); // 触发a的单击事件\n```\n> wondow.open()下载\n```javascript\n\twindo.open()\n```\n\n----\n\n## 二、Blob对象\n**1、第一个参数：**[ArrayBuffer](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer)、[TypedArray](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray)、[Blob](https://developer.mozilla.org/zh-CN/docs/Web/API/Blob/Blob)、 DOMString:javascript里的string字符串 等对象构成的 Array,\n- 为了让前端操作二进制数据才有了`ArrayBuffer`、`TypedArray`、`Uint8Array...`等对象， 那他们分别代表什么意思呢？\n- `ArrayBuffer`\n> 官网解释：二进制数据缓冲区，它是一个字节数组。 个人理解为：无法读取和操作的数据格式，只能看到他的长度看不到内容更别说来`操作此内容`，<font color=\"green\">【那我们来如何操作呢？就有了另外几个api】</font>\n```javascript\n// 定义长度为4的数据容器, 哈哈，这里只能看不能有任何操作！\nvar buffer = new Arraybuffer(4)\n```\n- `TypedArray`\n> 这个更是一个`烟雾弹`,TypedArray既不是全局变量也不是函数(所以休想在全局中访问到他),他是`Uint8Array...`等子类的实例化，当我们得到`TypedArray`实例后便可以轻松的使用他的api操作数据了。\n```javascript\n// 定义长度为4的数据容器, 哈哈，这里只能看不能有任何操作！\nvar buffer = new Arraybuffer(4)\n// 得到TypedArray 这样我就可以操作上面的数据了。\nvar TypedArray = new Uint8Array(buffer);\nTypedArray[0] = 32;\nTypedArray[1] = 64;\n```\n- `Uint8Array`\n> 数组类型表示一个8位无符号整型数组，创建时内容被初始化为0。创建完后，可以以对象的方式或使用数组下标索引的方式引用数组中的元素。\t\n```javascript \n// 创建TypedArray实例\nvar TypedArray = new Uint8Array(object);\n```\n\n**2、第二个参数：**[官方文档](https://developer.mozilla.org/zh-CN/docs/Web/API/Blob/Blob)有说是[MIME](https://www.w3school.com.cn/media/media_mimeref.asp)媒体类型，白话意思:\"定义下载文件的后缀名\"\n\n**3、blob**是前端操作数据的核心对象，很多数据处理都需要他在中间做`转换`,如图！！！\n![](/images/blob.png)\n- [File](https://developer.mozilla.org/zh-CN/docs/Web/API/File)对象大家都很熟悉，当我们通过`input`框选择照片的时候， 可以抓取到file对象，当你在浏览器控制台中打开file对象时，会发现<font color=\"red\">file的原型指向blob对象</font>`file并没有定义任何api,都是继承blob对象`， 由此可见blob对象的重要性。\n\n----\n\n## 三、问题?\n### 1、blob对象MIME参数可以定义后缀名，a标签的download也可以定义后缀名，哪个优先级更高?\n> `download`的优先级更高\n> download没有定义后缀名的时候以[MIME](https://www.w3school.com.cn/media/media_mimeref.asp)为准\n```javascript\nvar blob = new Blob(['1111'],{type:'application/vnd.ms-excel'}) //定义了exce表格\na.download = \"text.txt\"; // 定义了txt文本\n```\n\n### 2、改变后缀名文件大小是否被改变?\n> 如下分别定义了`text.jpg`、`vscode.png`、`text.text`三种不同的名字,转成了我想要的格式，但是他的**数据大小是不会被改变的**\n![](/images/download/download01.png)\n\n----\n\n## 四、实际开发应用\n### 1、图片连接不在同一个域下,如何实现下载？\n1. 我们需要吧连接转成barse64然后在下载\n2. barse64可以用canvas的drawImage转成baser64,drawImage的参数是img\n3. 所以我们需要把url连接变成image对象。 代码如下！！\n```javascript\nvar img = new Image();\nimg.crossOrigin = 'anonymous'\nimg.src = '.....';\nimg.onload = function() {\n\tlet canvas = document.createElement('canvas');\n\tcanvas.width = img.width;\n\tcanvas.height = img.height;\n\tlet content = canvas.getContext('2d');\n\tcontent.drawImage(img,0,0,img.width,img.height);\n\tlet url = canvas.toDataURL();\n\twindo.open(url)\n}\n```\n\n### 2、如何实现input框手动输入内容，并下载？\n1. 第一想到（a连接、window.open）实现下载，那么如何将a连接的href指向内容呢？\n2. 可能想到了用 URL.createObjectURL()创建连接，但是该函数的参数只能是 blob\\file对象\n3. blob对象只要new一个即可，将我们要输入的文本以参数的形式传递进去，实例化一个blob对象。\n4. 通过以上想法，便可以实现这个功能。  代码如下！ 有俩种可实行方案。\n```javascript\nlet text = document.getElementById(\"text\");\nlet download = document.getElementById(\"download\");\ntext.addEventListener('input', function() {\n\tconsole.log(this.value)\n})\ndownload.addEventListener('click', function() {\n\tvar blob = new Blob(['1111'],{type:'application/vnd.ms-excel'})\n\tconsole.log(blob);\n\tlet a = document.createElement(\"a\"); // 生成一个a元素\n\tlet event = new MouseEvent(\"click\"); // 创建一个单击事件\n\ta.download = \"text.txt\"; // 设置图片名称\n\ta.href = link // 将生成的URL设置为a.href属性\n\ta.dispatchEvent(event); // 触发a的单击事件\n})\n```\n\n### 3、如何实现base64转成blob？\n- `new Blob(array,options)`, 思考:从base64中获取Blob中获取`俩个参数`，如果获取到直接new一下就完美解决！！!\n1. <font color=\"green\">[获取第二个参数]]</font>：<font color=\"red\">MIME类型很好获取 => 可以从base64前缀中读取到。\t</font>\n| base64前缀 | MIME类型 |\n| ---- | ---- |\n|   data:application/msword;base64,   |  application/msword    |\n|   data:application/vnd.ms-powerpoint;base64,   |  application/vnd.ms-powerpoint   |\n> 代码如下\n```javascript\n// mime类型\nvar mimeType = base64URI.split(',')[0].split(':')[1].split(';')[0]; \n```\n\n2. <font color=\"green\">[获取第一个参数]</font>：<font color=\"red\">将base64内容转成TypeArray</font>\n> 解码base64-api:[atob](https://developer.mozilla.org/en-US/docs/Web/API/atob)、编码base64-api:[btoa](https://developer.mozilla.org/en-US/docs/Web/API/btoa)、[charCodeAt](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt)\n```javascript\nfunction base64ToBlob() {\n\t// mime类型\n\tvar mimeType = base64URI.split(',')[0].split(':')[1].split(';')[0]; \n\t// 解码base64\n\tvar atobBase64 = atob(base64URI.split(',')[1]); //base64 解码\n\t// 创建二进制缓冲区，只能看不能操作\n\tvar arrayBuffer = new ArrayBuffer(atobBase64.length);\n\t// 创建可以操作视图缓冲区数据的函数api - 只有这样才可以操作数据。\n\tvar typeArray01 = new Uint8Array(arrayBuffer)\n\t// 操作类型数组，将解码barse64数据插入类数组中。\n\tfor (var i = 0; i < atobBase64.length; i++) {\n\t\ttypeArray01[i] = atobBase64.charCodeAt(i);\n\t}\n\tnew Blob([typeArray01], {type: mimeType});\n}\n```\n\n\n### 4、如何实现blob转成base64？\n- [FileReader](https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader)\n```javascript\nvar reader = new FileReader();\nreader.onload = function (e) {\n\tcallback(e.target.result);\n}\nreader.readAsDataURL(blob);\n\n```","slug":"download","published":1,"updated":"2021-11-24T03:35:46.168Z","layout":"post","photos":[],"link":"","_id":"ckwlvxnsz000719ozabaqg3ev","content":"<h2 id=\"一、下载逻辑\"><a href=\"#一、下载逻辑\" class=\"headerlink\" title=\"一、下载逻辑\"></a>一、下载逻辑</h2><p><font color=\"red\">【先区分是请求方式】</font></p>\n<h3 id=\"1、get请求\"><a href=\"#1、get请求\" class=\"headerlink\" title=\"1、get请求\"></a>1、get请求</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 直接打开下载</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.open()</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、post请求\"><a href=\"#2、post请求\" class=\"headerlink\" title=\"2、post请求\"></a>2、post请求</h3><ol>\n<li>若后端返回数据为<code>application/octet-stream格式</code></li>\n</ol>\n<ul>\n<li>application/octet-stream: 需要转成<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob/Blob\">blob</a>对象，在通过<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/URL/createObjectURL\">createObjectURL</a>转成连接。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// res为后端返回的数据流</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> blob = <span class=\"keyword\">new</span> Blob([<span class=\"string\">&#x27;res&#x27;</span>],&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;application/vnd.ms-excel&#x27;</span>&#125;)</span><br><span class=\"line\"><span class=\"keyword\">var</span> link = URL.createObjectURL(blob)</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;a&quot;</span>); <span class=\"comment\">// 生成一个a元素</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> event = <span class=\"keyword\">new</span> MouseEvent(<span class=\"string\">&quot;click&quot;</span>); <span class=\"comment\">// 创建一个单击事件</span></span><br><span class=\"line\">a.download = <span class=\"string\">&quot;text.txt&quot;</span>; <span class=\"comment\">// 设置图片名称</span></span><br><span class=\"line\">a.href = link <span class=\"comment\">// 将生成的URL设置为a.href属性</span></span><br><span class=\"line\">a.dispatchEvent(event); <span class=\"comment\">// 触发a的单击事件</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<span id=\"more\"></span>\n\n\n<ol start=\"2\">\n<li>若后端返回格式为<code>base64格式</code>：可能需要我们拼接前缀，对应前缀如下。    </li>\n</ol>\n<ul>\n<li>文档<table>\n<thead>\n<tr>\n<th>文件后缀</th>\n<th>文档类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>doc</td>\n<td>data:application/msword;base64,</td>\n</tr>\n<tr>\n<td>docx</td>\n<td>data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,</td>\n</tr>\n<tr>\n<td>xls</td>\n<td>data:application/vnd.ms-excel;base64,</td>\n</tr>\n<tr>\n<td>xlsx</td>\n<td>data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,</td>\n</tr>\n<tr>\n<td>pdf</td>\n<td>data:application/pdf;base64,</td>\n</tr>\n<tr>\n<td>ppt</td>\n<td>data:application/vnd.ms-powerpoint;base64,</td>\n</tr>\n<tr>\n<td>pptx</td>\n<td>data:application/vnd.openxmlformats-officedocument.presentationml.presentation;base64,</td>\n</tr>\n<tr>\n<td>txt</td>\n<td>data:text/plain;base64,</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n</li>\n<li>图片<table>\n<thead>\n<tr>\n<th>文件后缀</th>\n<th>文档类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>png</td>\n<td>data:image/png;base64,</td>\n</tr>\n<tr>\n<td>jpg</td>\n<td>data:image/jpeg;base64,</td>\n</tr>\n<tr>\n<td>gif</td>\n<td>data:image/gif;base64,</td>\n</tr>\n<tr>\n<td>svg</td>\n<td>data:image/svg+xml;base64,</td>\n</tr>\n<tr>\n<td>ico</td>\n<td>data:image/x-icon;base64,</td>\n</tr>\n<tr>\n<td>bmp</td>\n<td>data:image/bmp;base64,</td>\n</tr>\n</tbody></table>\n</li>\n<li>将拼接好的url通过a连接下载，代码如下！<blockquote>\n<p>a标签下载</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;a&quot;</span>); <span class=\"comment\">// 生成一个a元素</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> event = <span class=\"keyword\">new</span> MouseEvent(<span class=\"string\">&quot;click&quot;</span>); <span class=\"comment\">// 创建一个单击事件</span></span><br><span class=\"line\">a.download = <span class=\"string\">&quot;text.txt&quot;</span>; <span class=\"comment\">// 设置图片名称</span></span><br><span class=\"line\">a.href = link <span class=\"comment\">//  将生成的base64设置为a.href属性</span></span><br><span class=\"line\">a.dispatchEvent(event); <span class=\"comment\">// 触发a的单击事件</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>wondow.open()下载</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">windo.open()</span><br></pre></td></tr></table></figure></li>\n</ul>\n<hr>\n<h2 id=\"二、Blob对象\"><a href=\"#二、Blob对象\" class=\"headerlink\" title=\"二、Blob对象\"></a>二、Blob对象</h2><p><strong>1、第一个参数：</strong><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob/Blob\">Blob</a>、 DOMString:javascript里的string字符串 等对象构成的 Array,</p>\n<ul>\n<li>为了让前端操作二进制数据才有了<code>ArrayBuffer</code>、<code>TypedArray</code>、<code>Uint8Array...</code>等对象， 那他们分别代表什么意思呢？</li>\n<li><code>ArrayBuffer</code><blockquote>\n<p>官网解释：二进制数据缓冲区，它是一个字节数组。 个人理解为：无法读取和操作的数据格式，只能看到他的长度看不到内容更别说来<code>操作此内容</code>，<font color=\"green\">【那我们来如何操作呢？就有了另外几个api】</font></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义长度为4的数据容器, 哈哈，这里只能看不能有任何操作！</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> buffer = <span class=\"keyword\">new</span> Arraybuffer(<span class=\"number\">4</span>)</span><br></pre></td></tr></table></figure></li>\n<li><code>TypedArray</code><blockquote>\n<p>这个更是一个<code>烟雾弹</code>,TypedArray既不是全局变量也不是函数(所以休想在全局中访问到他),他是<code>Uint8Array...</code>等子类的实例化，当我们得到<code>TypedArray</code>实例后便可以轻松的使用他的api操作数据了。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义长度为4的数据容器, 哈哈，这里只能看不能有任何操作！</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> buffer = <span class=\"keyword\">new</span> Arraybuffer(<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"comment\">// 得到TypedArray 这样我就可以操作上面的数据了。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> TypedArray = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(buffer);</span><br><span class=\"line\">TypedArray[<span class=\"number\">0</span>] = <span class=\"number\">32</span>;</span><br><span class=\"line\">TypedArray[<span class=\"number\">1</span>] = <span class=\"number\">64</span>;</span><br></pre></td></tr></table></figure></li>\n<li><code>Uint8Array</code><blockquote>\n<p>数组类型表示一个8位无符号整型数组，创建时内容被初始化为0。创建完后，可以以对象的方式或使用数组下标索引的方式引用数组中的元素。    </p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建TypedArray实例</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> TypedArray = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(object);</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>2、第二个参数：</strong><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob/Blob\">官方文档</a>有说是<a href=\"https://www.w3school.com.cn/media/media_mimeref.asp\">MIME</a>媒体类型，白话意思:”定义下载文件的后缀名”</p>\n<p><strong>3、blob</strong>是前端操作数据的核心对象，很多数据处理都需要他在中间做<code>转换</code>,如图！！！<br><img src=\"/images/blob.png\"></p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/File\">File</a>对象大家都很熟悉，当我们通过<code>input</code>框选择照片的时候， 可以抓取到file对象，当你在浏览器控制台中打开file对象时，会发现<font color=\"red\">file的原型指向blob对象</font><code>file并没有定义任何api,都是继承blob对象</code>， 由此可见blob对象的重要性。</li>\n</ul>\n<hr>\n<h2 id=\"三、问题\"><a href=\"#三、问题\" class=\"headerlink\" title=\"三、问题?\"></a>三、问题?</h2><h3 id=\"1、blob对象MIME参数可以定义后缀名，a标签的download也可以定义后缀名，哪个优先级更高\"><a href=\"#1、blob对象MIME参数可以定义后缀名，a标签的download也可以定义后缀名，哪个优先级更高\" class=\"headerlink\" title=\"1、blob对象MIME参数可以定义后缀名，a标签的download也可以定义后缀名，哪个优先级更高?\"></a>1、blob对象MIME参数可以定义后缀名，a标签的download也可以定义后缀名，哪个优先级更高?</h3><blockquote>\n<p><code>download</code>的优先级更高<br>download没有定义后缀名的时候以<a href=\"https://www.w3school.com.cn/media/media_mimeref.asp\">MIME</a>为准</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> blob = <span class=\"keyword\">new</span> Blob([<span class=\"string\">&#x27;1111&#x27;</span>],&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;application/vnd.ms-excel&#x27;</span>&#125;) <span class=\"comment\">//定义了exce表格</span></span><br><span class=\"line\">a.download = <span class=\"string\">&quot;text.txt&quot;</span>; <span class=\"comment\">// 定义了txt文本</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、改变后缀名文件大小是否被改变\"><a href=\"#2、改变后缀名文件大小是否被改变\" class=\"headerlink\" title=\"2、改变后缀名文件大小是否被改变?\"></a>2、改变后缀名文件大小是否被改变?</h3><blockquote>\n<p>如下分别定义了<code>text.jpg</code>、<code>vscode.png</code>、<code>text.text</code>三种不同的名字,转成了我想要的格式，但是他的<strong>数据大小是不会被改变的</strong><br><img src=\"/images/download/download01.png\"></p>\n</blockquote>\n<hr>\n<h2 id=\"四、实际开发应用\"><a href=\"#四、实际开发应用\" class=\"headerlink\" title=\"四、实际开发应用\"></a>四、实际开发应用</h2><h3 id=\"1、图片连接不在同一个域下-如何实现下载？\"><a href=\"#1、图片连接不在同一个域下-如何实现下载？\" class=\"headerlink\" title=\"1、图片连接不在同一个域下,如何实现下载？\"></a>1、图片连接不在同一个域下,如何实现下载？</h3><ol>\n<li>我们需要吧连接转成barse64然后在下载</li>\n<li>barse64可以用canvas的drawImage转成baser64,drawImage的参数是img</li>\n<li>所以我们需要把url连接变成image对象。 代码如下！！<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">img.crossOrigin = <span class=\"string\">&#x27;anonymous&#x27;</span></span><br><span class=\"line\">img.src = <span class=\"string\">&#x27;.....&#x27;</span>;</span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;canvas&#x27;</span>);</span><br><span class=\"line\">\tcanvas.width = img.width;</span><br><span class=\"line\">\tcanvas.height = img.height;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> content = canvas.getContext(<span class=\"string\">&#x27;2d&#x27;</span>);</span><br><span class=\"line\">\tcontent.drawImage(img,<span class=\"number\">0</span>,<span class=\"number\">0</span>,img.width,img.height);</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> url = canvas.toDataURL();</span><br><span class=\"line\">\twindo.open(url)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"2、如何实现input框手动输入内容，并下载？\"><a href=\"#2、如何实现input框手动输入内容，并下载？\" class=\"headerlink\" title=\"2、如何实现input框手动输入内容，并下载？\"></a>2、如何实现input框手动输入内容，并下载？</h3><ol>\n<li>第一想到（a连接、window.open）实现下载，那么如何将a连接的href指向内容呢？</li>\n<li>可能想到了用 URL.createObjectURL()创建连接，但是该函数的参数只能是 blob\\file对象</li>\n<li>blob对象只要new一个即可，将我们要输入的文本以参数的形式传递进去，实例化一个blob对象。</li>\n<li>通过以上想法，便可以实现这个功能。  代码如下！ 有俩种可实行方案。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> text = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;text&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> download = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;download&quot;</span>);</span><br><span class=\"line\">text.addEventListener(<span class=\"string\">&#x27;input&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.value)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">download.addEventListener(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> blob = <span class=\"keyword\">new</span> Blob([<span class=\"string\">&#x27;1111&#x27;</span>],&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;application/vnd.ms-excel&#x27;</span>&#125;)</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(blob);</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> a = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;a&quot;</span>); <span class=\"comment\">// 生成一个a元素</span></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> event = <span class=\"keyword\">new</span> MouseEvent(<span class=\"string\">&quot;click&quot;</span>); <span class=\"comment\">// 创建一个单击事件</span></span><br><span class=\"line\">\ta.download = <span class=\"string\">&quot;text.txt&quot;</span>; <span class=\"comment\">// 设置图片名称</span></span><br><span class=\"line\">\ta.href = link <span class=\"comment\">// 将生成的URL设置为a.href属性</span></span><br><span class=\"line\">\ta.dispatchEvent(event); <span class=\"comment\">// 触发a的单击事件</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"3、如何实现base64转成blob？\"><a href=\"#3、如何实现base64转成blob？\" class=\"headerlink\" title=\"3、如何实现base64转成blob？\"></a>3、如何实现base64转成blob？</h3><ul>\n<li><code>new Blob(array,options)</code>, 思考:从base64中获取Blob中获取<code>俩个参数</code>，如果获取到直接new一下就完美解决！！!</li>\n</ul>\n<ol>\n<li><p><font color=\"green\">[获取第二个参数]]</font>：<font color=\"red\">MIME类型很好获取 =&gt; 可以从base64前缀中读取到。    </font></p>\n<table>\n<thead>\n<tr>\n<th>base64前缀</th>\n<th>MIME类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>data:application/msword;base64,</td>\n<td>application/msword</td>\n</tr>\n<tr>\n<td>data:application/vnd.ms-powerpoint;base64,</td>\n<td>application/vnd.ms-powerpoint</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>代码如下</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// mime类型</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mimeType = base64URI.split(<span class=\"string\">&#x27;,&#x27;</span>)[<span class=\"number\">0</span>].split(<span class=\"string\">&#x27;:&#x27;</span>)[<span class=\"number\">1</span>].split(<span class=\"string\">&#x27;;&#x27;</span>)[<span class=\"number\">0</span>]; </span><br></pre></td></tr></table></figure></li>\n<li><p><font color=\"green\">[获取第一个参数]</font>：<font color=\"red\">将base64内容转成TypeArray</font></p>\n<blockquote>\n<p>解码base64-api:<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/atob\">atob</a>、编码base64-api:<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/btoa\">btoa</a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\">charCodeAt</a></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">base64ToBlob</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// mime类型</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> mimeType = base64URI.split(<span class=\"string\">&#x27;,&#x27;</span>)[<span class=\"number\">0</span>].split(<span class=\"string\">&#x27;:&#x27;</span>)[<span class=\"number\">1</span>].split(<span class=\"string\">&#x27;;&#x27;</span>)[<span class=\"number\">0</span>]; </span><br><span class=\"line\">\t<span class=\"comment\">// 解码base64</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> atobBase64 = atob(base64URI.split(<span class=\"string\">&#x27;,&#x27;</span>)[<span class=\"number\">1</span>]); <span class=\"comment\">//base64 解码</span></span><br><span class=\"line\">\t<span class=\"comment\">// 创建二进制缓冲区，只能看不能操作</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arrayBuffer = <span class=\"keyword\">new</span> <span class=\"built_in\">ArrayBuffer</span>(atobBase64.length);</span><br><span class=\"line\">\t<span class=\"comment\">// 创建可以操作视图缓冲区数据的函数api - 只有这样才可以操作数据。</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> typeArray01 = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(arrayBuffer)</span><br><span class=\"line\">\t<span class=\"comment\">// 操作类型数组，将解码barse64数据插入类数组中。</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; atobBase64.length; i++) &#123;</span><br><span class=\"line\">\t\ttypeArray01[i] = atobBase64.charCodeAt(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">new</span> Blob([typeArray01], &#123;<span class=\"attr\">type</span>: mimeType&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"4、如何实现blob转成base64？\"><a href=\"#4、如何实现blob转成base64？\" class=\"headerlink\" title=\"4、如何实现blob转成base64？\"></a>4、如何实现blob转成base64？</h3><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader\">FileReader</a><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();</span><br><span class=\"line\">reader.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">\tcallback(e.target.result);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">reader.readAsDataURL(blob);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"一、下载逻辑\"><a href=\"#一、下载逻辑\" class=\"headerlink\" title=\"一、下载逻辑\"></a>一、下载逻辑</h2><p><font color=\"red\">【先区分是请求方式】</font></p>\n<h3 id=\"1、get请求\"><a href=\"#1、get请求\" class=\"headerlink\" title=\"1、get请求\"></a>1、get请求</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 直接打开下载</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.open()</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、post请求\"><a href=\"#2、post请求\" class=\"headerlink\" title=\"2、post请求\"></a>2、post请求</h3><ol>\n<li>若后端返回数据为<code>application/octet-stream格式</code></li>\n</ol>\n<ul>\n<li>application/octet-stream: 需要转成<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob/Blob\">blob</a>对象，在通过<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/URL/createObjectURL\">createObjectURL</a>转成连接。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// res为后端返回的数据流</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> blob = <span class=\"keyword\">new</span> Blob([<span class=\"string\">&#x27;res&#x27;</span>],&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;application/vnd.ms-excel&#x27;</span>&#125;)</span><br><span class=\"line\"><span class=\"keyword\">var</span> link = URL.createObjectURL(blob)</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;a&quot;</span>); <span class=\"comment\">// 生成一个a元素</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> event = <span class=\"keyword\">new</span> MouseEvent(<span class=\"string\">&quot;click&quot;</span>); <span class=\"comment\">// 创建一个单击事件</span></span><br><span class=\"line\">a.download = <span class=\"string\">&quot;text.txt&quot;</span>; <span class=\"comment\">// 设置图片名称</span></span><br><span class=\"line\">a.href = link <span class=\"comment\">// 将生成的URL设置为a.href属性</span></span><br><span class=\"line\">a.dispatchEvent(event); <span class=\"comment\">// 触发a的单击事件</span></span><br></pre></td></tr></table></figure></li>\n</ul>","more":"<ol start=\"2\">\n<li>若后端返回格式为<code>base64格式</code>：可能需要我们拼接前缀，对应前缀如下。    </li>\n</ol>\n<ul>\n<li>文档<table>\n<thead>\n<tr>\n<th>文件后缀</th>\n<th>文档类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>doc</td>\n<td>data:application/msword;base64,</td>\n</tr>\n<tr>\n<td>docx</td>\n<td>data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,</td>\n</tr>\n<tr>\n<td>xls</td>\n<td>data:application/vnd.ms-excel;base64,</td>\n</tr>\n<tr>\n<td>xlsx</td>\n<td>data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,</td>\n</tr>\n<tr>\n<td>pdf</td>\n<td>data:application/pdf;base64,</td>\n</tr>\n<tr>\n<td>ppt</td>\n<td>data:application/vnd.ms-powerpoint;base64,</td>\n</tr>\n<tr>\n<td>pptx</td>\n<td>data:application/vnd.openxmlformats-officedocument.presentationml.presentation;base64,</td>\n</tr>\n<tr>\n<td>txt</td>\n<td>data:text/plain;base64,</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n</li>\n<li>图片<table>\n<thead>\n<tr>\n<th>文件后缀</th>\n<th>文档类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>png</td>\n<td>data:image/png;base64,</td>\n</tr>\n<tr>\n<td>jpg</td>\n<td>data:image/jpeg;base64,</td>\n</tr>\n<tr>\n<td>gif</td>\n<td>data:image/gif;base64,</td>\n</tr>\n<tr>\n<td>svg</td>\n<td>data:image/svg+xml;base64,</td>\n</tr>\n<tr>\n<td>ico</td>\n<td>data:image/x-icon;base64,</td>\n</tr>\n<tr>\n<td>bmp</td>\n<td>data:image/bmp;base64,</td>\n</tr>\n</tbody></table>\n</li>\n<li>将拼接好的url通过a连接下载，代码如下！<blockquote>\n<p>a标签下载</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;a&quot;</span>); <span class=\"comment\">// 生成一个a元素</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> event = <span class=\"keyword\">new</span> MouseEvent(<span class=\"string\">&quot;click&quot;</span>); <span class=\"comment\">// 创建一个单击事件</span></span><br><span class=\"line\">a.download = <span class=\"string\">&quot;text.txt&quot;</span>; <span class=\"comment\">// 设置图片名称</span></span><br><span class=\"line\">a.href = link <span class=\"comment\">//  将生成的base64设置为a.href属性</span></span><br><span class=\"line\">a.dispatchEvent(event); <span class=\"comment\">// 触发a的单击事件</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>wondow.open()下载</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">windo.open()</span><br></pre></td></tr></table></figure></li>\n</ul>\n<hr>\n<h2 id=\"二、Blob对象\"><a href=\"#二、Blob对象\" class=\"headerlink\" title=\"二、Blob对象\"></a>二、Blob对象</h2><p><strong>1、第一个参数：</strong><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob/Blob\">Blob</a>、 DOMString:javascript里的string字符串 等对象构成的 Array,</p>\n<ul>\n<li>为了让前端操作二进制数据才有了<code>ArrayBuffer</code>、<code>TypedArray</code>、<code>Uint8Array...</code>等对象， 那他们分别代表什么意思呢？</li>\n<li><code>ArrayBuffer</code><blockquote>\n<p>官网解释：二进制数据缓冲区，它是一个字节数组。 个人理解为：无法读取和操作的数据格式，只能看到他的长度看不到内容更别说来<code>操作此内容</code>，<font color=\"green\">【那我们来如何操作呢？就有了另外几个api】</font></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义长度为4的数据容器, 哈哈，这里只能看不能有任何操作！</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> buffer = <span class=\"keyword\">new</span> Arraybuffer(<span class=\"number\">4</span>)</span><br></pre></td></tr></table></figure></li>\n<li><code>TypedArray</code><blockquote>\n<p>这个更是一个<code>烟雾弹</code>,TypedArray既不是全局变量也不是函数(所以休想在全局中访问到他),他是<code>Uint8Array...</code>等子类的实例化，当我们得到<code>TypedArray</code>实例后便可以轻松的使用他的api操作数据了。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义长度为4的数据容器, 哈哈，这里只能看不能有任何操作！</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> buffer = <span class=\"keyword\">new</span> Arraybuffer(<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"comment\">// 得到TypedArray 这样我就可以操作上面的数据了。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> TypedArray = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(buffer);</span><br><span class=\"line\">TypedArray[<span class=\"number\">0</span>] = <span class=\"number\">32</span>;</span><br><span class=\"line\">TypedArray[<span class=\"number\">1</span>] = <span class=\"number\">64</span>;</span><br></pre></td></tr></table></figure></li>\n<li><code>Uint8Array</code><blockquote>\n<p>数组类型表示一个8位无符号整型数组，创建时内容被初始化为0。创建完后，可以以对象的方式或使用数组下标索引的方式引用数组中的元素。    </p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建TypedArray实例</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> TypedArray = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(object);</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>2、第二个参数：</strong><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob/Blob\">官方文档</a>有说是<a href=\"https://www.w3school.com.cn/media/media_mimeref.asp\">MIME</a>媒体类型，白话意思:”定义下载文件的后缀名”</p>\n<p><strong>3、blob</strong>是前端操作数据的核心对象，很多数据处理都需要他在中间做<code>转换</code>,如图！！！<br><img src=\"/images/blob.png\"></p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/File\">File</a>对象大家都很熟悉，当我们通过<code>input</code>框选择照片的时候， 可以抓取到file对象，当你在浏览器控制台中打开file对象时，会发现<font color=\"red\">file的原型指向blob对象</font><code>file并没有定义任何api,都是继承blob对象</code>， 由此可见blob对象的重要性。</li>\n</ul>\n<hr>\n<h2 id=\"三、问题\"><a href=\"#三、问题\" class=\"headerlink\" title=\"三、问题?\"></a>三、问题?</h2><h3 id=\"1、blob对象MIME参数可以定义后缀名，a标签的download也可以定义后缀名，哪个优先级更高\"><a href=\"#1、blob对象MIME参数可以定义后缀名，a标签的download也可以定义后缀名，哪个优先级更高\" class=\"headerlink\" title=\"1、blob对象MIME参数可以定义后缀名，a标签的download也可以定义后缀名，哪个优先级更高?\"></a>1、blob对象MIME参数可以定义后缀名，a标签的download也可以定义后缀名，哪个优先级更高?</h3><blockquote>\n<p><code>download</code>的优先级更高<br>download没有定义后缀名的时候以<a href=\"https://www.w3school.com.cn/media/media_mimeref.asp\">MIME</a>为准</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> blob = <span class=\"keyword\">new</span> Blob([<span class=\"string\">&#x27;1111&#x27;</span>],&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;application/vnd.ms-excel&#x27;</span>&#125;) <span class=\"comment\">//定义了exce表格</span></span><br><span class=\"line\">a.download = <span class=\"string\">&quot;text.txt&quot;</span>; <span class=\"comment\">// 定义了txt文本</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、改变后缀名文件大小是否被改变\"><a href=\"#2、改变后缀名文件大小是否被改变\" class=\"headerlink\" title=\"2、改变后缀名文件大小是否被改变?\"></a>2、改变后缀名文件大小是否被改变?</h3><blockquote>\n<p>如下分别定义了<code>text.jpg</code>、<code>vscode.png</code>、<code>text.text</code>三种不同的名字,转成了我想要的格式，但是他的<strong>数据大小是不会被改变的</strong><br><img src=\"/images/download/download01.png\"></p>\n</blockquote>\n<hr>\n<h2 id=\"四、实际开发应用\"><a href=\"#四、实际开发应用\" class=\"headerlink\" title=\"四、实际开发应用\"></a>四、实际开发应用</h2><h3 id=\"1、图片连接不在同一个域下-如何实现下载？\"><a href=\"#1、图片连接不在同一个域下-如何实现下载？\" class=\"headerlink\" title=\"1、图片连接不在同一个域下,如何实现下载？\"></a>1、图片连接不在同一个域下,如何实现下载？</h3><ol>\n<li>我们需要吧连接转成barse64然后在下载</li>\n<li>barse64可以用canvas的drawImage转成baser64,drawImage的参数是img</li>\n<li>所以我们需要把url连接变成image对象。 代码如下！！<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">img.crossOrigin = <span class=\"string\">&#x27;anonymous&#x27;</span></span><br><span class=\"line\">img.src = <span class=\"string\">&#x27;.....&#x27;</span>;</span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;canvas&#x27;</span>);</span><br><span class=\"line\">\tcanvas.width = img.width;</span><br><span class=\"line\">\tcanvas.height = img.height;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> content = canvas.getContext(<span class=\"string\">&#x27;2d&#x27;</span>);</span><br><span class=\"line\">\tcontent.drawImage(img,<span class=\"number\">0</span>,<span class=\"number\">0</span>,img.width,img.height);</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> url = canvas.toDataURL();</span><br><span class=\"line\">\twindo.open(url)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"2、如何实现input框手动输入内容，并下载？\"><a href=\"#2、如何实现input框手动输入内容，并下载？\" class=\"headerlink\" title=\"2、如何实现input框手动输入内容，并下载？\"></a>2、如何实现input框手动输入内容，并下载？</h3><ol>\n<li>第一想到（a连接、window.open）实现下载，那么如何将a连接的href指向内容呢？</li>\n<li>可能想到了用 URL.createObjectURL()创建连接，但是该函数的参数只能是 blob\\file对象</li>\n<li>blob对象只要new一个即可，将我们要输入的文本以参数的形式传递进去，实例化一个blob对象。</li>\n<li>通过以上想法，便可以实现这个功能。  代码如下！ 有俩种可实行方案。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> text = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;text&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> download = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;download&quot;</span>);</span><br><span class=\"line\">text.addEventListener(<span class=\"string\">&#x27;input&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.value)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">download.addEventListener(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> blob = <span class=\"keyword\">new</span> Blob([<span class=\"string\">&#x27;1111&#x27;</span>],&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;application/vnd.ms-excel&#x27;</span>&#125;)</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(blob);</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> a = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;a&quot;</span>); <span class=\"comment\">// 生成一个a元素</span></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> event = <span class=\"keyword\">new</span> MouseEvent(<span class=\"string\">&quot;click&quot;</span>); <span class=\"comment\">// 创建一个单击事件</span></span><br><span class=\"line\">\ta.download = <span class=\"string\">&quot;text.txt&quot;</span>; <span class=\"comment\">// 设置图片名称</span></span><br><span class=\"line\">\ta.href = link <span class=\"comment\">// 将生成的URL设置为a.href属性</span></span><br><span class=\"line\">\ta.dispatchEvent(event); <span class=\"comment\">// 触发a的单击事件</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"3、如何实现base64转成blob？\"><a href=\"#3、如何实现base64转成blob？\" class=\"headerlink\" title=\"3、如何实现base64转成blob？\"></a>3、如何实现base64转成blob？</h3><ul>\n<li><code>new Blob(array,options)</code>, 思考:从base64中获取Blob中获取<code>俩个参数</code>，如果获取到直接new一下就完美解决！！!</li>\n</ul>\n<ol>\n<li><p><font color=\"green\">[获取第二个参数]]</font>：<font color=\"red\">MIME类型很好获取 =&gt; 可以从base64前缀中读取到。    </font></p>\n<table>\n<thead>\n<tr>\n<th>base64前缀</th>\n<th>MIME类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>data:application/msword;base64,</td>\n<td>application/msword</td>\n</tr>\n<tr>\n<td>data:application/vnd.ms-powerpoint;base64,</td>\n<td>application/vnd.ms-powerpoint</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>代码如下</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// mime类型</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mimeType = base64URI.split(<span class=\"string\">&#x27;,&#x27;</span>)[<span class=\"number\">0</span>].split(<span class=\"string\">&#x27;:&#x27;</span>)[<span class=\"number\">1</span>].split(<span class=\"string\">&#x27;;&#x27;</span>)[<span class=\"number\">0</span>]; </span><br></pre></td></tr></table></figure></li>\n<li><p><font color=\"green\">[获取第一个参数]</font>：<font color=\"red\">将base64内容转成TypeArray</font></p>\n<blockquote>\n<p>解码base64-api:<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/atob\">atob</a>、编码base64-api:<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/btoa\">btoa</a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\">charCodeAt</a></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">base64ToBlob</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// mime类型</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> mimeType = base64URI.split(<span class=\"string\">&#x27;,&#x27;</span>)[<span class=\"number\">0</span>].split(<span class=\"string\">&#x27;:&#x27;</span>)[<span class=\"number\">1</span>].split(<span class=\"string\">&#x27;;&#x27;</span>)[<span class=\"number\">0</span>]; </span><br><span class=\"line\">\t<span class=\"comment\">// 解码base64</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> atobBase64 = atob(base64URI.split(<span class=\"string\">&#x27;,&#x27;</span>)[<span class=\"number\">1</span>]); <span class=\"comment\">//base64 解码</span></span><br><span class=\"line\">\t<span class=\"comment\">// 创建二进制缓冲区，只能看不能操作</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arrayBuffer = <span class=\"keyword\">new</span> <span class=\"built_in\">ArrayBuffer</span>(atobBase64.length);</span><br><span class=\"line\">\t<span class=\"comment\">// 创建可以操作视图缓冲区数据的函数api - 只有这样才可以操作数据。</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> typeArray01 = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(arrayBuffer)</span><br><span class=\"line\">\t<span class=\"comment\">// 操作类型数组，将解码barse64数据插入类数组中。</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; atobBase64.length; i++) &#123;</span><br><span class=\"line\">\t\ttypeArray01[i] = atobBase64.charCodeAt(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">new</span> Blob([typeArray01], &#123;<span class=\"attr\">type</span>: mimeType&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"4、如何实现blob转成base64？\"><a href=\"#4、如何实现blob转成base64？\" class=\"headerlink\" title=\"4、如何实现blob转成base64？\"></a>4、如何实现blob转成base64？</h3><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader\">FileReader</a><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();</span><br><span class=\"line\">reader.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">\tcallback(e.target.result);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">reader.readAsDataURL(blob);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>"},{"title":"Mac","date":"2019-11-17T06:30:24.000Z","comments":0,"_content":"\n- mac截图快捷键 `command + shift + 5`","source":"_posts/mac.md","raw":"---\ntitle: Mac\ndate: 2019-11-17 14:30:24\ncategories: Mac\ntags: [Mac]\ncomments: false\n---\n\n- mac截图快捷键 `command + shift + 5`","slug":"mac","published":1,"updated":"2021-11-17T06:06:05.088Z","layout":"post","photos":[],"link":"","_id":"ckwlvxnt0000919oz464d3mjj","content":"<ul>\n<li>mac截图快捷键 <code>command + shift + 5</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>mac截图快捷键 <code>command + shift + 5</code></li>\n</ul>\n"},{"title":"精灵图实现动画效果","date":"2021-11-26T08:15:24.000Z","comments":0,"_content":"\n- 如图！当UI给如下雪碧图，需要我们实现`喇叭播放效果，并且可以控制播放暂停`,我们只需要不停切换雪碧图位置来实现动画播放效果。\n![](/images/ic_voice.png)\n\n## 铺垫\n\n### 生成精灵图JSON网址\n- [地址](https://www.leshylabs.com/apps/sstool/)良心网站，可以将我们雪碧图`尺寸大小、x,y位置`以json的格式返回给我们(如下！！！)\n- 是不是很惊喜，我们不需要在管ui要数据，不管给什么图我们只要生成json，然后读取数据值实现动画效果，2秒钟搞定动画。\n```javascript\n  \"ic_voice\": [\n    {\n      \"name\": \"ic_voice_01\",\n      \"x\": 0,\n      \"y\": 0,\n      \"width\": 60,\n      \"height\": 60\n    },\n    {\n      \"name\": \"ic_voice_02\",\n      \"x\": 0,\n      \"y\": 61,\n      \"width\": 60,\n      \"height\": 60\n    },\n    {\n      \"name\": \"ic_voice_03\",\n      \"x\": 61,\n      \"y\": 0,\n      \"width\": 60,\n      \"height\": 60\n    }\n  ]\n```\n\n### requestAnimationFrame\n- 大家的第一反应是用`setTimeout`实现每秒切换，但是在移动端部分手机会因为型号原因导致动画`卡屏`，所有用此方法[requestAnimationFrame](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame)可以完全避免卡顿问题，此函数的回调函数是在`浏览器下一次重绘之前执行`.\n```javascript\nwindow.requestAnimationFrame(function(DOMHighResTimeStamp) {\n    // callback methods\n});\n```\n- `浏览器下一次重绘之前执行`此回调函数，默认传递参数[DOMHighResTimeStamp](https://developer.mozilla.org/zh-CN/docs/Web/API/DOMHighResTimeStamp#compat-mobile),那么`DOMHighResTimeStamp`又是个什么鬼? 请继续往下看！！！\n\n### DOMHighResTimeStamp\n- [DOMHighResTimeStamp](https://developer.mozilla.org/zh-CN/docs/Web/API/DOMHighResTimeStamp#compat-mobile)翻译成汉语：<font color=\"red\">【dom高精度时间戳】</font>,既然是高精度肯定要比毫秒还要精准（微妙级别), 让我们疑惑的是为什么小数点之前只有5位，甚至可能只有俩位数。他跟获取时间戳不太相同，他是：`自创建上下文以来经过的时间`\n> 想要观察 doSomething方法执行了多久？\n```javascript\nlet highTimeStamp1 = window.performance.now() // 21152.700000047684\nfunction doSomething() {\n    console.log(111)\n}\nlet highTimeStamp2 = window.performance.now() // 21152.700000047684\n// Difference doSomething方法执行所用的时间。\nlet Difference = highTimeStamp2 - highTimeStamp1;\n```\n- js里我们一般用最多的是毫秒级别， 1s = 1000毫秒， 秒的时间戳是10位，那么毫秒时间戳便是13位。\n```javascript\n// 获取当前时间戳\nlet timeStamp = new Date().getTime(); // 1637891606442\n```\n\n<!-- more -->\n\n### 实现requestAnimationFrame循环调用\n- 如下代码！fn函数观察发现他只会执行`一次`,`自创建上下文以来经过这里时会执行`\n```javascript\nwindow.requestAnimationFrame(function fn(DOMHighResTimeStamp) {\n    console.log('我执行了几次')\n});\n```\n- 那么如何循环执行呢？ 当然是函数自调用，执行`fn函数`时，在自己调用自己。\n```javascript\nwindow.requestAnimationFrame(function fn(DOMHighResTimeStamp) {\n    console.log('我被执行了几次');\n    requestAnimationFrame(fn)\n});\n```\n\n## 代码如下\n- [github地址](https://github.com/Even-cxw/demo/tree/main/%E9%9B%AA%E7%A2%A7%E5%8A%A8%E7%94%BB%E5%9B%BE)\n```javascript\n // 生成精灵图JSON网址: https://www.leshylabs.com/apps/sstool/;\n  /**\n   * @desc 动画函数，移动雪碧图\n   * @param {Element} dom 需要插入的dom\n   * @param {string} key 雪碧图名称\n   * @param {number} speed 动画频率/毫秒\n   */\n  class AnimationHelp {\n    constructor(dom, key, speed) {\n      // 记录动画开启/结束状态\n      this.isStart = false;\n      // 存雪碧图的宽高、x\\y坐标点。\n      this.imageAttribute = {};\n      // 当前时间\n      this.startTime = window.performance.now();\n      // 当前动画x,y下角标\n      this.nowFramesIndex = 0;\n      this.dom = dom;\n      this.speed = speed;\n      this.imageUrl = \"./static/\" + key + \".png\";\n      this.getJSONData(key);\n    }\n\n    // 得到雪碧图JSON数据\n    getJSONData(key) {\n      let url = './static/allAnimation.json';\n      $.get(url, result => {\n        let keyData = result[key];\n        this.imageAttribute.height = keyData[0].height;\n        this.imageAttribute.width = keyData[0].width;\n        this.imageAttribute.childrens = [];\n        for (let item of keyData) {\n          let value = [];\n          value.push(item.x);\n          value.push(item.y);\n          this.imageAttribute.childrens.push(value);\n        }\n        console.log('this.imageAttribute', this.imageAttribute);\n        this.initSpriteMap();\n        this.start();\n      });\n    }\n\n    // 初始化雪碧图\n    initSpriteMap() {\n      this.spriteMapDiv = document.createElement('div');\n      this.dom.appendChild(this.spriteMapDiv);\n      let divCss = {\n        height: this.imageAttribute.height + 'px',\n        width: this.imageAttribute.width + 'px',\n        overflow: 'hidden'\n      };\n      $(this.spriteMapDiv).css(divCss);\n      this.img  = document.createElement('img');\n      this.img.src = this.imageUrl\n      $(this.spriteMapDiv).append(this.img);\n    }\n\n    // 停止动画\n    stop() {\n      if (!this.isStart) return;\n      cancelAnimationFrame(this.animationId);\n      let initX = this.imageAttribute.childrens[0][0];\n      let initY = this.imageAttribute.childrens[0][1];\n      this.img && $(this.img).css(\"transform\", `translate(-${initX}px, -${initY}px)`);\n      this.isStart = false;\n    }\n\n    // 开始动画\n    start() {\n      if (this.isStart) return;\n      this.isStart = true;\n      this.repeatAnimation();\n    }\n\n    // 循环开始动画\n    repeatAnimation() {\n      let that = this;\n      that.animationId = requestAnimationFrame(function fn(timestamp) {\n        that.rander(timestamp);\n        that.animationId = requestAnimationFrame(fn);\n      });\n    }\n\n    rander(timestamp) {\n      const elapsedTime = timestamp - this.startTime;\n      if (elapsedTime > this.speed) {\n        this.startTime = timestamp;\n        if (this.imageAttribute.childrens.length <= this.nowFramesIndex) {\n          this.nowFramesIndex = 0;\n        }\n        let x = this.imageAttribute.childrens[this.nowFramesIndex][0];\n        let y = this.imageAttribute.childrens[this.nowFramesIndex][1];\n        $(this.img).css(\"transform\", `translate(-${x}px, -${y}px)`);\n        this.nowFramesIndex++;\n      }\n    }\n  }\n\n```","source":"_posts/js_animation.md","raw":"---\ntitle: 精灵图实现动画效果\ndate: 2021-11-26 16:15:24\ncategories: javascript\ntags: [javascript]\ncomments: false\n---\n\n- 如图！当UI给如下雪碧图，需要我们实现`喇叭播放效果，并且可以控制播放暂停`,我们只需要不停切换雪碧图位置来实现动画播放效果。\n![](/images/ic_voice.png)\n\n## 铺垫\n\n### 生成精灵图JSON网址\n- [地址](https://www.leshylabs.com/apps/sstool/)良心网站，可以将我们雪碧图`尺寸大小、x,y位置`以json的格式返回给我们(如下！！！)\n- 是不是很惊喜，我们不需要在管ui要数据，不管给什么图我们只要生成json，然后读取数据值实现动画效果，2秒钟搞定动画。\n```javascript\n  \"ic_voice\": [\n    {\n      \"name\": \"ic_voice_01\",\n      \"x\": 0,\n      \"y\": 0,\n      \"width\": 60,\n      \"height\": 60\n    },\n    {\n      \"name\": \"ic_voice_02\",\n      \"x\": 0,\n      \"y\": 61,\n      \"width\": 60,\n      \"height\": 60\n    },\n    {\n      \"name\": \"ic_voice_03\",\n      \"x\": 61,\n      \"y\": 0,\n      \"width\": 60,\n      \"height\": 60\n    }\n  ]\n```\n\n### requestAnimationFrame\n- 大家的第一反应是用`setTimeout`实现每秒切换，但是在移动端部分手机会因为型号原因导致动画`卡屏`，所有用此方法[requestAnimationFrame](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame)可以完全避免卡顿问题，此函数的回调函数是在`浏览器下一次重绘之前执行`.\n```javascript\nwindow.requestAnimationFrame(function(DOMHighResTimeStamp) {\n    // callback methods\n});\n```\n- `浏览器下一次重绘之前执行`此回调函数，默认传递参数[DOMHighResTimeStamp](https://developer.mozilla.org/zh-CN/docs/Web/API/DOMHighResTimeStamp#compat-mobile),那么`DOMHighResTimeStamp`又是个什么鬼? 请继续往下看！！！\n\n### DOMHighResTimeStamp\n- [DOMHighResTimeStamp](https://developer.mozilla.org/zh-CN/docs/Web/API/DOMHighResTimeStamp#compat-mobile)翻译成汉语：<font color=\"red\">【dom高精度时间戳】</font>,既然是高精度肯定要比毫秒还要精准（微妙级别), 让我们疑惑的是为什么小数点之前只有5位，甚至可能只有俩位数。他跟获取时间戳不太相同，他是：`自创建上下文以来经过的时间`\n> 想要观察 doSomething方法执行了多久？\n```javascript\nlet highTimeStamp1 = window.performance.now() // 21152.700000047684\nfunction doSomething() {\n    console.log(111)\n}\nlet highTimeStamp2 = window.performance.now() // 21152.700000047684\n// Difference doSomething方法执行所用的时间。\nlet Difference = highTimeStamp2 - highTimeStamp1;\n```\n- js里我们一般用最多的是毫秒级别， 1s = 1000毫秒， 秒的时间戳是10位，那么毫秒时间戳便是13位。\n```javascript\n// 获取当前时间戳\nlet timeStamp = new Date().getTime(); // 1637891606442\n```\n\n<!-- more -->\n\n### 实现requestAnimationFrame循环调用\n- 如下代码！fn函数观察发现他只会执行`一次`,`自创建上下文以来经过这里时会执行`\n```javascript\nwindow.requestAnimationFrame(function fn(DOMHighResTimeStamp) {\n    console.log('我执行了几次')\n});\n```\n- 那么如何循环执行呢？ 当然是函数自调用，执行`fn函数`时，在自己调用自己。\n```javascript\nwindow.requestAnimationFrame(function fn(DOMHighResTimeStamp) {\n    console.log('我被执行了几次');\n    requestAnimationFrame(fn)\n});\n```\n\n## 代码如下\n- [github地址](https://github.com/Even-cxw/demo/tree/main/%E9%9B%AA%E7%A2%A7%E5%8A%A8%E7%94%BB%E5%9B%BE)\n```javascript\n // 生成精灵图JSON网址: https://www.leshylabs.com/apps/sstool/;\n  /**\n   * @desc 动画函数，移动雪碧图\n   * @param {Element} dom 需要插入的dom\n   * @param {string} key 雪碧图名称\n   * @param {number} speed 动画频率/毫秒\n   */\n  class AnimationHelp {\n    constructor(dom, key, speed) {\n      // 记录动画开启/结束状态\n      this.isStart = false;\n      // 存雪碧图的宽高、x\\y坐标点。\n      this.imageAttribute = {};\n      // 当前时间\n      this.startTime = window.performance.now();\n      // 当前动画x,y下角标\n      this.nowFramesIndex = 0;\n      this.dom = dom;\n      this.speed = speed;\n      this.imageUrl = \"./static/\" + key + \".png\";\n      this.getJSONData(key);\n    }\n\n    // 得到雪碧图JSON数据\n    getJSONData(key) {\n      let url = './static/allAnimation.json';\n      $.get(url, result => {\n        let keyData = result[key];\n        this.imageAttribute.height = keyData[0].height;\n        this.imageAttribute.width = keyData[0].width;\n        this.imageAttribute.childrens = [];\n        for (let item of keyData) {\n          let value = [];\n          value.push(item.x);\n          value.push(item.y);\n          this.imageAttribute.childrens.push(value);\n        }\n        console.log('this.imageAttribute', this.imageAttribute);\n        this.initSpriteMap();\n        this.start();\n      });\n    }\n\n    // 初始化雪碧图\n    initSpriteMap() {\n      this.spriteMapDiv = document.createElement('div');\n      this.dom.appendChild(this.spriteMapDiv);\n      let divCss = {\n        height: this.imageAttribute.height + 'px',\n        width: this.imageAttribute.width + 'px',\n        overflow: 'hidden'\n      };\n      $(this.spriteMapDiv).css(divCss);\n      this.img  = document.createElement('img');\n      this.img.src = this.imageUrl\n      $(this.spriteMapDiv).append(this.img);\n    }\n\n    // 停止动画\n    stop() {\n      if (!this.isStart) return;\n      cancelAnimationFrame(this.animationId);\n      let initX = this.imageAttribute.childrens[0][0];\n      let initY = this.imageAttribute.childrens[0][1];\n      this.img && $(this.img).css(\"transform\", `translate(-${initX}px, -${initY}px)`);\n      this.isStart = false;\n    }\n\n    // 开始动画\n    start() {\n      if (this.isStart) return;\n      this.isStart = true;\n      this.repeatAnimation();\n    }\n\n    // 循环开始动画\n    repeatAnimation() {\n      let that = this;\n      that.animationId = requestAnimationFrame(function fn(timestamp) {\n        that.rander(timestamp);\n        that.animationId = requestAnimationFrame(fn);\n      });\n    }\n\n    rander(timestamp) {\n      const elapsedTime = timestamp - this.startTime;\n      if (elapsedTime > this.speed) {\n        this.startTime = timestamp;\n        if (this.imageAttribute.childrens.length <= this.nowFramesIndex) {\n          this.nowFramesIndex = 0;\n        }\n        let x = this.imageAttribute.childrens[this.nowFramesIndex][0];\n        let y = this.imageAttribute.childrens[this.nowFramesIndex][1];\n        $(this.img).css(\"transform\", `translate(-${x}px, -${y}px)`);\n        this.nowFramesIndex++;\n      }\n    }\n  }\n\n```","slug":"js-animation","published":1,"updated":"2021-11-26T02:39:06.938Z","layout":"post","photos":[],"link":"","_id":"ckwlvxnt1000a19ozgo522cff","content":"<ul>\n<li>如图！当UI给如下雪碧图，需要我们实现<code>喇叭播放效果，并且可以控制播放暂停</code>,我们只需要不停切换雪碧图位置来实现动画播放效果。<br><img src=\"/images/ic_voice.png\"></li>\n</ul>\n<h2 id=\"铺垫\"><a href=\"#铺垫\" class=\"headerlink\" title=\"铺垫\"></a>铺垫</h2><h3 id=\"生成精灵图JSON网址\"><a href=\"#生成精灵图JSON网址\" class=\"headerlink\" title=\"生成精灵图JSON网址\"></a>生成精灵图JSON网址</h3><ul>\n<li><a href=\"https://www.leshylabs.com/apps/sstool/\">地址</a>良心网站，可以将我们雪碧图<code>尺寸大小、x,y位置</code>以json的格式返回给我们(如下！！！)</li>\n<li>是不是很惊喜，我们不需要在管ui要数据，不管给什么图我们只要生成json，然后读取数据值实现动画效果，2秒钟搞定动画。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;ic_voice&quot;</span>: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;ic_voice_01&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;x&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;y&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;width&quot;</span>: <span class=\"number\">60</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;height&quot;</span>: <span class=\"number\">60</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;ic_voice_02&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;x&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;y&quot;</span>: <span class=\"number\">61</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;width&quot;</span>: <span class=\"number\">60</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;height&quot;</span>: <span class=\"number\">60</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;ic_voice_03&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;x&quot;</span>: <span class=\"number\">61</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;y&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;width&quot;</span>: <span class=\"number\">60</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;height&quot;</span>: <span class=\"number\">60</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"requestAnimationFrame\"><a href=\"#requestAnimationFrame\" class=\"headerlink\" title=\"requestAnimationFrame\"></a>requestAnimationFrame</h3><ul>\n<li>大家的第一反应是用<code>setTimeout</code>实现每秒切换，但是在移动端部分手机会因为型号原因导致动画<code>卡屏</code>，所有用此方法<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame\">requestAnimationFrame</a>可以完全避免卡顿问题，此函数的回调函数是在<code>浏览器下一次重绘之前执行</code>.<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.requestAnimationFrame(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">DOMHighResTimeStamp</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// callback methods</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><code>浏览器下一次重绘之前执行</code>此回调函数，默认传递参数<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/DOMHighResTimeStamp#compat-mobile\">DOMHighResTimeStamp</a>,那么<code>DOMHighResTimeStamp</code>又是个什么鬼? 请继续往下看！！！</li>\n</ul>\n<h3 id=\"DOMHighResTimeStamp\"><a href=\"#DOMHighResTimeStamp\" class=\"headerlink\" title=\"DOMHighResTimeStamp\"></a>DOMHighResTimeStamp</h3><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/DOMHighResTimeStamp#compat-mobile\">DOMHighResTimeStamp</a>翻译成汉语：<font color=\"red\">【dom高精度时间戳】</font>,既然是高精度肯定要比毫秒还要精准（微妙级别), 让我们疑惑的是为什么小数点之前只有5位，甚至可能只有俩位数。他跟获取时间戳不太相同，他是：<code>自创建上下文以来经过的时间</code><blockquote>\n<p>想要观察 doSomething方法执行了多久？</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> highTimeStamp1 = <span class=\"built_in\">window</span>.performance.now() <span class=\"comment\">// 21152.700000047684</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">111</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> highTimeStamp2 = <span class=\"built_in\">window</span>.performance.now() <span class=\"comment\">// 21152.700000047684</span></span><br><span class=\"line\"><span class=\"comment\">// Difference doSomething方法执行所用的时间。</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> Difference = highTimeStamp2 - highTimeStamp1;</span><br></pre></td></tr></table></figure></li>\n<li>js里我们一般用最多的是毫秒级别， 1s = 1000毫秒， 秒的时间戳是10位，那么毫秒时间戳便是13位。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取当前时间戳</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> timeStamp = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime(); <span class=\"comment\">// 1637891606442</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<span id=\"more\"></span>\n\n<h3 id=\"实现requestAnimationFrame循环调用\"><a href=\"#实现requestAnimationFrame循环调用\" class=\"headerlink\" title=\"实现requestAnimationFrame循环调用\"></a>实现requestAnimationFrame循环调用</h3><ul>\n<li>如下代码！fn函数观察发现他只会执行<code>一次</code>,<code>自创建上下文以来经过这里时会执行</code><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.requestAnimationFrame(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\">DOMHighResTimeStamp</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;我执行了几次&#x27;</span>)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li>那么如何循环执行呢？ 当然是函数自调用，执行<code>fn函数</code>时，在自己调用自己。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.requestAnimationFrame(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\">DOMHighResTimeStamp</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;我被执行了几次&#x27;</span>);</span><br><span class=\"line\">    requestAnimationFrame(fn)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"代码如下\"><a href=\"#代码如下\" class=\"headerlink\" title=\"代码如下\"></a>代码如下</h2><ul>\n<li><a href=\"https://github.com/Even-cxw/demo/tree/main/%E9%9B%AA%E7%A2%A7%E5%8A%A8%E7%94%BB%E5%9B%BE\">github地址</a><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 生成精灵图JSON网址: https://www.leshylabs.com/apps/sstool/;</span></span><br><span class=\"line\"> <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@desc </span>动画函数，移动雪碧图</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param <span class=\"type\">&#123;Element&#125;</span> </span>dom 需要插入的dom</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> </span>key 雪碧图名称</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> </span>speed 动画频率/毫秒</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AnimationHelp</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">dom, key, speed</span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"comment\">// 记录动画开启/结束状态</span></span><br><span class=\"line\">     <span class=\"built_in\">this</span>.isStart = <span class=\"literal\">false</span>;</span><br><span class=\"line\">     <span class=\"comment\">// 存雪碧图的宽高、x\\y坐标点。</span></span><br><span class=\"line\">     <span class=\"built_in\">this</span>.imageAttribute = &#123;&#125;;</span><br><span class=\"line\">     <span class=\"comment\">// 当前时间</span></span><br><span class=\"line\">     <span class=\"built_in\">this</span>.startTime = <span class=\"built_in\">window</span>.performance.now();</span><br><span class=\"line\">     <span class=\"comment\">// 当前动画x,y下角标</span></span><br><span class=\"line\">     <span class=\"built_in\">this</span>.nowFramesIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.dom = dom;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.speed = speed;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.imageUrl = <span class=\"string\">&quot;./static/&quot;</span> + key + <span class=\"string\">&quot;.png&quot;</span>;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.getJSONData(key);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 得到雪碧图JSON数据</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">getJSONData</span>(<span class=\"params\">key</span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> url = <span class=\"string\">&#x27;./static/allAnimation.json&#x27;</span>;</span><br><span class=\"line\">     $.get(url, <span class=\"function\"><span class=\"params\">result</span> =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">let</span> keyData = result[key];</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.imageAttribute.height = keyData[<span class=\"number\">0</span>].height;</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.imageAttribute.width = keyData[<span class=\"number\">0</span>].width;</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.imageAttribute.childrens = [];</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> keyData) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">let</span> value = [];</span><br><span class=\"line\">         value.push(item.x);</span><br><span class=\"line\">         value.push(item.y);</span><br><span class=\"line\">         <span class=\"built_in\">this</span>.imageAttribute.childrens.push(value);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;this.imageAttribute&#x27;</span>, <span class=\"built_in\">this</span>.imageAttribute);</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.initSpriteMap();</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.start();</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 初始化雪碧图</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">initSpriteMap</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.spriteMapDiv = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.dom.appendChild(<span class=\"built_in\">this</span>.spriteMapDiv);</span><br><span class=\"line\">     <span class=\"keyword\">let</span> divCss = &#123;</span><br><span class=\"line\">       <span class=\"attr\">height</span>: <span class=\"built_in\">this</span>.imageAttribute.height + <span class=\"string\">&#x27;px&#x27;</span>,</span><br><span class=\"line\">       <span class=\"attr\">width</span>: <span class=\"built_in\">this</span>.imageAttribute.width + <span class=\"string\">&#x27;px&#x27;</span>,</span><br><span class=\"line\">       <span class=\"attr\">overflow</span>: <span class=\"string\">&#x27;hidden&#x27;</span></span><br><span class=\"line\">     &#125;;</span><br><span class=\"line\">     $(<span class=\"built_in\">this</span>.spriteMapDiv).css(divCss);</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.img  = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;img&#x27;</span>);</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.img.src = <span class=\"built_in\">this</span>.imageUrl</span><br><span class=\"line\">     $(<span class=\"built_in\">this</span>.spriteMapDiv).append(<span class=\"built_in\">this</span>.img);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 停止动画</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">stop</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (!<span class=\"built_in\">this</span>.isStart) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">     cancelAnimationFrame(<span class=\"built_in\">this</span>.animationId);</span><br><span class=\"line\">     <span class=\"keyword\">let</span> initX = <span class=\"built_in\">this</span>.imageAttribute.childrens[<span class=\"number\">0</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">     <span class=\"keyword\">let</span> initY = <span class=\"built_in\">this</span>.imageAttribute.childrens[<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.img &amp;&amp; $(<span class=\"built_in\">this</span>.img).css(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"string\">`translate(-<span class=\"subst\">$&#123;initX&#125;</span>px, -<span class=\"subst\">$&#123;initY&#125;</span>px)`</span>);</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.isStart = <span class=\"literal\">false</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 开始动画</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">start</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.isStart) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.isStart = <span class=\"literal\">true</span>;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.repeatAnimation();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 循环开始动画</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">repeatAnimation</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> that = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">     that.animationId = requestAnimationFrame(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\">timestamp</span>) </span>&#123;</span><br><span class=\"line\">       that.rander(timestamp);</span><br><span class=\"line\">       that.animationId = requestAnimationFrame(fn);</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">rander</span>(<span class=\"params\">timestamp</span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">const</span> elapsedTime = timestamp - <span class=\"built_in\">this</span>.startTime;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (elapsedTime &gt; <span class=\"built_in\">this</span>.speed) &#123;</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.startTime = timestamp;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.imageAttribute.childrens.length &lt;= <span class=\"built_in\">this</span>.nowFramesIndex) &#123;</span><br><span class=\"line\">         <span class=\"built_in\">this</span>.nowFramesIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">let</span> x = <span class=\"built_in\">this</span>.imageAttribute.childrens[<span class=\"built_in\">this</span>.nowFramesIndex][<span class=\"number\">0</span>];</span><br><span class=\"line\">       <span class=\"keyword\">let</span> y = <span class=\"built_in\">this</span>.imageAttribute.childrens[<span class=\"built_in\">this</span>.nowFramesIndex][<span class=\"number\">1</span>];</span><br><span class=\"line\">       $(<span class=\"built_in\">this</span>.img).css(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"string\">`translate(-<span class=\"subst\">$&#123;x&#125;</span>px, -<span class=\"subst\">$&#123;y&#125;</span>px)`</span>);</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.nowFramesIndex++;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"<ul>\n<li>如图！当UI给如下雪碧图，需要我们实现<code>喇叭播放效果，并且可以控制播放暂停</code>,我们只需要不停切换雪碧图位置来实现动画播放效果。<br><img src=\"/images/ic_voice.png\"></li>\n</ul>\n<h2 id=\"铺垫\"><a href=\"#铺垫\" class=\"headerlink\" title=\"铺垫\"></a>铺垫</h2><h3 id=\"生成精灵图JSON网址\"><a href=\"#生成精灵图JSON网址\" class=\"headerlink\" title=\"生成精灵图JSON网址\"></a>生成精灵图JSON网址</h3><ul>\n<li><a href=\"https://www.leshylabs.com/apps/sstool/\">地址</a>良心网站，可以将我们雪碧图<code>尺寸大小、x,y位置</code>以json的格式返回给我们(如下！！！)</li>\n<li>是不是很惊喜，我们不需要在管ui要数据，不管给什么图我们只要生成json，然后读取数据值实现动画效果，2秒钟搞定动画。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;ic_voice&quot;</span>: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;ic_voice_01&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;x&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;y&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;width&quot;</span>: <span class=\"number\">60</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;height&quot;</span>: <span class=\"number\">60</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;ic_voice_02&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;x&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;y&quot;</span>: <span class=\"number\">61</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;width&quot;</span>: <span class=\"number\">60</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;height&quot;</span>: <span class=\"number\">60</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;ic_voice_03&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;x&quot;</span>: <span class=\"number\">61</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;y&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;width&quot;</span>: <span class=\"number\">60</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;height&quot;</span>: <span class=\"number\">60</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"requestAnimationFrame\"><a href=\"#requestAnimationFrame\" class=\"headerlink\" title=\"requestAnimationFrame\"></a>requestAnimationFrame</h3><ul>\n<li>大家的第一反应是用<code>setTimeout</code>实现每秒切换，但是在移动端部分手机会因为型号原因导致动画<code>卡屏</code>，所有用此方法<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame\">requestAnimationFrame</a>可以完全避免卡顿问题，此函数的回调函数是在<code>浏览器下一次重绘之前执行</code>.<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.requestAnimationFrame(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">DOMHighResTimeStamp</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// callback methods</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><code>浏览器下一次重绘之前执行</code>此回调函数，默认传递参数<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/DOMHighResTimeStamp#compat-mobile\">DOMHighResTimeStamp</a>,那么<code>DOMHighResTimeStamp</code>又是个什么鬼? 请继续往下看！！！</li>\n</ul>\n<h3 id=\"DOMHighResTimeStamp\"><a href=\"#DOMHighResTimeStamp\" class=\"headerlink\" title=\"DOMHighResTimeStamp\"></a>DOMHighResTimeStamp</h3><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/DOMHighResTimeStamp#compat-mobile\">DOMHighResTimeStamp</a>翻译成汉语：<font color=\"red\">【dom高精度时间戳】</font>,既然是高精度肯定要比毫秒还要精准（微妙级别), 让我们疑惑的是为什么小数点之前只有5位，甚至可能只有俩位数。他跟获取时间戳不太相同，他是：<code>自创建上下文以来经过的时间</code><blockquote>\n<p>想要观察 doSomething方法执行了多久？</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> highTimeStamp1 = <span class=\"built_in\">window</span>.performance.now() <span class=\"comment\">// 21152.700000047684</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">111</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> highTimeStamp2 = <span class=\"built_in\">window</span>.performance.now() <span class=\"comment\">// 21152.700000047684</span></span><br><span class=\"line\"><span class=\"comment\">// Difference doSomething方法执行所用的时间。</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> Difference = highTimeStamp2 - highTimeStamp1;</span><br></pre></td></tr></table></figure></li>\n<li>js里我们一般用最多的是毫秒级别， 1s = 1000毫秒， 秒的时间戳是10位，那么毫秒时间戳便是13位。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取当前时间戳</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> timeStamp = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime(); <span class=\"comment\">// 1637891606442</span></span><br></pre></td></tr></table></figure></li>\n</ul>","more":"<h3 id=\"实现requestAnimationFrame循环调用\"><a href=\"#实现requestAnimationFrame循环调用\" class=\"headerlink\" title=\"实现requestAnimationFrame循环调用\"></a>实现requestAnimationFrame循环调用</h3><ul>\n<li>如下代码！fn函数观察发现他只会执行<code>一次</code>,<code>自创建上下文以来经过这里时会执行</code><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.requestAnimationFrame(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\">DOMHighResTimeStamp</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;我执行了几次&#x27;</span>)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li>那么如何循环执行呢？ 当然是函数自调用，执行<code>fn函数</code>时，在自己调用自己。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.requestAnimationFrame(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\">DOMHighResTimeStamp</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;我被执行了几次&#x27;</span>);</span><br><span class=\"line\">    requestAnimationFrame(fn)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"代码如下\"><a href=\"#代码如下\" class=\"headerlink\" title=\"代码如下\"></a>代码如下</h2><ul>\n<li><a href=\"https://github.com/Even-cxw/demo/tree/main/%E9%9B%AA%E7%A2%A7%E5%8A%A8%E7%94%BB%E5%9B%BE\">github地址</a><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 生成精灵图JSON网址: https://www.leshylabs.com/apps/sstool/;</span></span><br><span class=\"line\"> <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@desc </span>动画函数，移动雪碧图</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param <span class=\"type\">&#123;Element&#125;</span> </span>dom 需要插入的dom</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> </span>key 雪碧图名称</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> </span>speed 动画频率/毫秒</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AnimationHelp</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">dom, key, speed</span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"comment\">// 记录动画开启/结束状态</span></span><br><span class=\"line\">     <span class=\"built_in\">this</span>.isStart = <span class=\"literal\">false</span>;</span><br><span class=\"line\">     <span class=\"comment\">// 存雪碧图的宽高、x\\y坐标点。</span></span><br><span class=\"line\">     <span class=\"built_in\">this</span>.imageAttribute = &#123;&#125;;</span><br><span class=\"line\">     <span class=\"comment\">// 当前时间</span></span><br><span class=\"line\">     <span class=\"built_in\">this</span>.startTime = <span class=\"built_in\">window</span>.performance.now();</span><br><span class=\"line\">     <span class=\"comment\">// 当前动画x,y下角标</span></span><br><span class=\"line\">     <span class=\"built_in\">this</span>.nowFramesIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.dom = dom;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.speed = speed;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.imageUrl = <span class=\"string\">&quot;./static/&quot;</span> + key + <span class=\"string\">&quot;.png&quot;</span>;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.getJSONData(key);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 得到雪碧图JSON数据</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">getJSONData</span>(<span class=\"params\">key</span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> url = <span class=\"string\">&#x27;./static/allAnimation.json&#x27;</span>;</span><br><span class=\"line\">     $.get(url, <span class=\"function\"><span class=\"params\">result</span> =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">let</span> keyData = result[key];</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.imageAttribute.height = keyData[<span class=\"number\">0</span>].height;</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.imageAttribute.width = keyData[<span class=\"number\">0</span>].width;</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.imageAttribute.childrens = [];</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> keyData) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">let</span> value = [];</span><br><span class=\"line\">         value.push(item.x);</span><br><span class=\"line\">         value.push(item.y);</span><br><span class=\"line\">         <span class=\"built_in\">this</span>.imageAttribute.childrens.push(value);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;this.imageAttribute&#x27;</span>, <span class=\"built_in\">this</span>.imageAttribute);</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.initSpriteMap();</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.start();</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 初始化雪碧图</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">initSpriteMap</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.spriteMapDiv = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.dom.appendChild(<span class=\"built_in\">this</span>.spriteMapDiv);</span><br><span class=\"line\">     <span class=\"keyword\">let</span> divCss = &#123;</span><br><span class=\"line\">       <span class=\"attr\">height</span>: <span class=\"built_in\">this</span>.imageAttribute.height + <span class=\"string\">&#x27;px&#x27;</span>,</span><br><span class=\"line\">       <span class=\"attr\">width</span>: <span class=\"built_in\">this</span>.imageAttribute.width + <span class=\"string\">&#x27;px&#x27;</span>,</span><br><span class=\"line\">       <span class=\"attr\">overflow</span>: <span class=\"string\">&#x27;hidden&#x27;</span></span><br><span class=\"line\">     &#125;;</span><br><span class=\"line\">     $(<span class=\"built_in\">this</span>.spriteMapDiv).css(divCss);</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.img  = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;img&#x27;</span>);</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.img.src = <span class=\"built_in\">this</span>.imageUrl</span><br><span class=\"line\">     $(<span class=\"built_in\">this</span>.spriteMapDiv).append(<span class=\"built_in\">this</span>.img);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 停止动画</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">stop</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (!<span class=\"built_in\">this</span>.isStart) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">     cancelAnimationFrame(<span class=\"built_in\">this</span>.animationId);</span><br><span class=\"line\">     <span class=\"keyword\">let</span> initX = <span class=\"built_in\">this</span>.imageAttribute.childrens[<span class=\"number\">0</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">     <span class=\"keyword\">let</span> initY = <span class=\"built_in\">this</span>.imageAttribute.childrens[<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.img &amp;&amp; $(<span class=\"built_in\">this</span>.img).css(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"string\">`translate(-<span class=\"subst\">$&#123;initX&#125;</span>px, -<span class=\"subst\">$&#123;initY&#125;</span>px)`</span>);</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.isStart = <span class=\"literal\">false</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 开始动画</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">start</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.isStart) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.isStart = <span class=\"literal\">true</span>;</span><br><span class=\"line\">     <span class=\"built_in\">this</span>.repeatAnimation();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 循环开始动画</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">repeatAnimation</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> that = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">     that.animationId = requestAnimationFrame(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\">timestamp</span>) </span>&#123;</span><br><span class=\"line\">       that.rander(timestamp);</span><br><span class=\"line\">       that.animationId = requestAnimationFrame(fn);</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">rander</span>(<span class=\"params\">timestamp</span>)</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">const</span> elapsedTime = timestamp - <span class=\"built_in\">this</span>.startTime;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (elapsedTime &gt; <span class=\"built_in\">this</span>.speed) &#123;</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.startTime = timestamp;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.imageAttribute.childrens.length &lt;= <span class=\"built_in\">this</span>.nowFramesIndex) &#123;</span><br><span class=\"line\">         <span class=\"built_in\">this</span>.nowFramesIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">let</span> x = <span class=\"built_in\">this</span>.imageAttribute.childrens[<span class=\"built_in\">this</span>.nowFramesIndex][<span class=\"number\">0</span>];</span><br><span class=\"line\">       <span class=\"keyword\">let</span> y = <span class=\"built_in\">this</span>.imageAttribute.childrens[<span class=\"built_in\">this</span>.nowFramesIndex][<span class=\"number\">1</span>];</span><br><span class=\"line\">       $(<span class=\"built_in\">this</span>.img).css(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"string\">`translate(-<span class=\"subst\">$&#123;x&#125;</span>px, -<span class=\"subst\">$&#123;y&#125;</span>px)`</span>);</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.nowFramesIndex++;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>"},{"title":"md","date":"2021-11-16T06:30:24.000Z","comments":0,"_content":"\n## 绿色字体\n```javascript\n<font color=\"green\">【aaaaa】</font>\n```\n>效果图\n<font color=\"green\">【aaaaa】</font>\n---\n<!-- more -->\n## 红色字体\n```javascript\n<font color=\"red\">bbbb</font>\n```\n>效果图\n<font color=\"red\">bbbb</font>\n---\n\n## 字体加粗\n```javascript\n配备了 **运行步骤** 以及 **简要说明** 来帮助大家运行项目以及了解本节的知识点。\n```\n>效果图\n配备了 **运行步骤** 以及 **简要说明** 来帮助大家运行项目以及了解本节的知识点。\n---\n\n## 加粗并带背景色\n```javascript\n在 `app.js` 中，暴露一个可以重复执行的工厂函数，为每个请求创建新的应用程序实例。\n```\n>效果图\n在 `app.js` 中，暴露一个可以重复执行的工厂函数，为每个请求创建新的应用程序实例。\n---\n\n## 引入图片\n```javascript\n![](/images/vscode.png)\n```\n>效果图\n![](/images/vscode.png)\n---\n\n## 难度\n```javascript\n【难度：<i class=\"fa fa-star\"></i><i class=\"fa fa-star\"></i><i class=\"fa fa-star\"></i>】\n```\n>效果图\n【难度：<i class=\"fa fa-star\"></i><i class=\"fa fa-star\"></i><i class=\"fa fa-star\"></i>】\n---\n\n## 标题\n```javascript\n**1、配置webpack**\n```\n>效果图\n**1、配置webpack**\n---\n\n## 文本居中\n```javascript\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n```\n>效果图\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n---\n\n\n\n","source":"_posts/md.md","raw":"---\ntitle: md\ndate: 2021-11-16 14:30:24\ncategories: md\ntags: [md]\ncomments: false\n---\n\n## 绿色字体\n```javascript\n<font color=\"green\">【aaaaa】</font>\n```\n>效果图\n<font color=\"green\">【aaaaa】</font>\n---\n<!-- more -->\n## 红色字体\n```javascript\n<font color=\"red\">bbbb</font>\n```\n>效果图\n<font color=\"red\">bbbb</font>\n---\n\n## 字体加粗\n```javascript\n配备了 **运行步骤** 以及 **简要说明** 来帮助大家运行项目以及了解本节的知识点。\n```\n>效果图\n配备了 **运行步骤** 以及 **简要说明** 来帮助大家运行项目以及了解本节的知识点。\n---\n\n## 加粗并带背景色\n```javascript\n在 `app.js` 中，暴露一个可以重复执行的工厂函数，为每个请求创建新的应用程序实例。\n```\n>效果图\n在 `app.js` 中，暴露一个可以重复执行的工厂函数，为每个请求创建新的应用程序实例。\n---\n\n## 引入图片\n```javascript\n![](/images/vscode.png)\n```\n>效果图\n![](/images/vscode.png)\n---\n\n## 难度\n```javascript\n【难度：<i class=\"fa fa-star\"></i><i class=\"fa fa-star\"></i><i class=\"fa fa-star\"></i>】\n```\n>效果图\n【难度：<i class=\"fa fa-star\"></i><i class=\"fa fa-star\"></i><i class=\"fa fa-star\"></i>】\n---\n\n## 标题\n```javascript\n**1、配置webpack**\n```\n>效果图\n**1、配置webpack**\n---\n\n## 文本居中\n```javascript\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n```\n>效果图\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n---\n\n\n\n","slug":"md","published":1,"updated":"2021-11-16T10:30:22.664Z","layout":"post","photos":[],"link":"","_id":"ckwlvxnt2000e19oz1h8seic0","content":"<h2 id=\"绿色字体\"><a href=\"#绿色字体\" class=\"headerlink\" title=\"绿色字体\"></a>绿色字体</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font color=<span class=\"string\">&quot;green&quot;</span>&gt;【aaaaa】&lt;/font&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br><font color=\"green\">【aaaaa】</font></p>\n</blockquote>\n<hr>\n<span id=\"more\"></span>\n<h2 id=\"红色字体\"><a href=\"#红色字体\" class=\"headerlink\" title=\"红色字体\"></a>红色字体</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font color=<span class=\"string\">&quot;red&quot;</span>&gt;bbbb&lt;/font&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br><font color=\"red\">bbbb</font></p>\n</blockquote>\n<hr>\n<h2 id=\"字体加粗\"><a href=\"#字体加粗\" class=\"headerlink\" title=\"字体加粗\"></a>字体加粗</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配备了 **运行步骤** 以及 **简要说明** 来帮助大家运行项目以及了解本节的知识点。</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br>配备了 <strong>运行步骤</strong> 以及 <strong>简要说明</strong> 来帮助大家运行项目以及了解本节的知识点。</p>\n</blockquote>\n<hr>\n<h2 id=\"加粗并带背景色\"><a href=\"#加粗并带背景色\" class=\"headerlink\" title=\"加粗并带背景色\"></a>加粗并带背景色</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在 <span class=\"string\">`app.js`</span> 中，暴露一个可以重复执行的工厂函数，为每个请求创建新的应用程序实例。</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br>在 <code>app.js</code> 中，暴露一个可以重复执行的工厂函数，为每个请求创建新的应用程序实例。</p>\n</blockquote>\n<hr>\n<h2 id=\"引入图片\"><a href=\"#引入图片\" class=\"headerlink\" title=\"引入图片\"></a>引入图片</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![](<span class=\"regexp\">/images/</span>vscode.png)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br><img src=\"/images/vscode.png\"></p>\n</blockquote>\n<hr>\n<h2 id=\"难度\"><a href=\"#难度\" class=\"headerlink\" title=\"难度\"></a>难度</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【难度：&lt;i <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;fa fa-star&quot;</span>&gt;&lt;<span class=\"regexp\">/i&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-star&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span>】</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br>【难度：<i class=\"fa fa-star\"></i><i class=\"fa fa-star\"></i><i class=\"fa fa-star\"></i>】</p>\n</blockquote>\n<hr>\n<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**<span class=\"number\">1</span>、配置webpack**</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br><strong>1、配置webpack</strong></p>\n</blockquote>\n<hr>\n<h2 id=\"文本居中\"><a href=\"#文本居中\" class=\"headerlink\" title=\"文本居中\"></a>文本居中</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;blockquote <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;blockquote-center&quot;</span>&gt;优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图</p>\n</blockquote>\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n---\n\n\n\n","site":{"data":{}},"excerpt":"<h2 id=\"绿色字体\"><a href=\"#绿色字体\" class=\"headerlink\" title=\"绿色字体\"></a>绿色字体</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font color=<span class=\"string\">&quot;green&quot;</span>&gt;【aaaaa】&lt;/font&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br><font color=\"green\">【aaaaa】</font></p>\n</blockquote>\n<hr>","more":"<h2 id=\"红色字体\"><a href=\"#红色字体\" class=\"headerlink\" title=\"红色字体\"></a>红色字体</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font color=<span class=\"string\">&quot;red&quot;</span>&gt;bbbb&lt;/font&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br><font color=\"red\">bbbb</font></p>\n</blockquote>\n<hr>\n<h2 id=\"字体加粗\"><a href=\"#字体加粗\" class=\"headerlink\" title=\"字体加粗\"></a>字体加粗</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配备了 **运行步骤** 以及 **简要说明** 来帮助大家运行项目以及了解本节的知识点。</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br>配备了 <strong>运行步骤</strong> 以及 <strong>简要说明</strong> 来帮助大家运行项目以及了解本节的知识点。</p>\n</blockquote>\n<hr>\n<h2 id=\"加粗并带背景色\"><a href=\"#加粗并带背景色\" class=\"headerlink\" title=\"加粗并带背景色\"></a>加粗并带背景色</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在 <span class=\"string\">`app.js`</span> 中，暴露一个可以重复执行的工厂函数，为每个请求创建新的应用程序实例。</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br>在 <code>app.js</code> 中，暴露一个可以重复执行的工厂函数，为每个请求创建新的应用程序实例。</p>\n</blockquote>\n<hr>\n<h2 id=\"引入图片\"><a href=\"#引入图片\" class=\"headerlink\" title=\"引入图片\"></a>引入图片</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![](<span class=\"regexp\">/images/</span>vscode.png)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br><img src=\"/images/vscode.png\"></p>\n</blockquote>\n<hr>\n<h2 id=\"难度\"><a href=\"#难度\" class=\"headerlink\" title=\"难度\"></a>难度</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【难度：&lt;i <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;fa fa-star&quot;</span>&gt;&lt;<span class=\"regexp\">/i&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-star&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span>】</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br>【难度：<i class=\"fa fa-star\"></i><i class=\"fa fa-star\"></i><i class=\"fa fa-star\"></i>】</p>\n</blockquote>\n<hr>\n<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**<span class=\"number\">1</span>、配置webpack**</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图<br><strong>1、配置webpack</strong></p>\n</blockquote>\n<hr>\n<h2 id=\"文本居中\"><a href=\"#文本居中\" class=\"headerlink\" title=\"文本居中\"></a>文本居中</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;blockquote <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;blockquote-center&quot;</span>&gt;优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>效果图</p>\n</blockquote>\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n---"},{"title":"typescript/webpack项目初始化","date":"2021-11-17T06:30:24.000Z","comments":0,"_content":"\n\n> 当只做几个单页面的时候，并不需要用到其他框架，可以考虑ts+jquery+webpack简单方便,[代码地址](https://github.com/Even-cxw/TypeScript/tree/main/ts05-webpack-jquery)。\n\n\n# 版本\n- node -v `v10.15.3`\n- npm -v  `7.20.6`\n- tsc -v  `4.4.3` <font color=\"red\">【若没有，请全局安装`npm install typescript -g`】</font>\n- webpack -v  `5.52.1`\n- webpack-cli -v `3.3.12` <font color=\"red\">【webpack-cli下载版本过高，会导致版本不兼容等】</font>\n- webpack-dev-server -v  `3.11.2`\n\n<!-- more -->\n\n# 结构\n> 跟其他项目一样有个<font color=\"red\">【src】</font>，执行打包命令行后，会有个dist文件夹，里面才是上线的代码\n- `src/asset`: 存放第三方库eg:**jqeury**等，webpack不会做打包处理，直接原封copy\n- `src/css` : 样式文件夹\n- `src/images` : 图片文件夹\n- `src/js` : typescript转移后生成的js\n- `src/ts` : ts文件\n- `src/index.html` : 跟页面<font color=\"red\">【需要手动引入js等文件】</font>\n\n# npm初始化\n- 新建目录proect并在当前目录执行`npm init` 一路回车，会在当前目录下生成package.json\n- 修改package.json文件，找到`scripts`对象，<font color=\"red\">莫急、等webpack配置完才可运行</font>\n```javascript\n  \"dev\": \"cross-env NODE_ENV=sit webpack-dev-server\",\n  \"sit\": \"cross-env NODE_ENV=sit webpack\",\n  \"uat\": \"cross-env NODE_ENV=uat webpack\",\n  \"pat\": \"cross-env NODE_ENV=pat webpack\"\n```\n- 下载插件`npm install cross-env -S` \n> cross-env作用：当我们在打包的时候需要区分**测试环境**、**生产环境**，不同环境打包配置不一样，cross-env可以自定义变量传递到node.js环境中。[官方解释](https://www.npmjs.com/package/cross-env)\n> 如下命令：`cross-env NODE_ENV=sit` 相当于在<font color=\"red\">node.js</font>中执行了如下代码\n```javascript\n// 切记node.js环境\nprocess.env.NODE_ENV = 'sit'\n// 所以可以通过 process.env对象访问\n```\n\n# typescript初始化\n- 执行`tsc --init` 会生成tsconfig.json配置文件\n- 修改配置文件，我的配置文件如下\n> 如下配置执行`tsc`时，会自动检索`include`配置中的ts文件，输出到`outDir`配置js文件中，并转义成es5\n```javascript\n{\n  \"compilerOptions\": {\n    \"removeComments\": true, /*不输出注释*/\n    \"sourceMap\": false,/*生成目标文件 inline sourceMap*/\n    \"declaration\": false,/*生成响应的 d.ts文件*/\n    \"strict\": true,/*启用所有严格类型检查选项*/\n    \"strictFunctionTypes\": false,/*不润徐函数参数双向协变*/\n    \"moduleResolution\": \"node\",/*指定模块解析器*/\n    \"target\": \"ES5\",/**/\n    \"outDir\": \"./src/js\",/*指定文件的输出目录*/\n    \"lib\":[\n      \"ES5\",\n      \"ESNext\",\n      \"DOM\",\n      \"DOM.Iterable\",\n      \"ScriptHost\",\n    ]\n  },\n  \"include\": [\"./src/ts/*\"]/*编译器需要编译的文件或目录，支持通配符*/\n}\n```\n\n# 配置webpack\n- 安装依赖`npm install webpack@5 webpack-cli@3 webpack-dev-server@3 -D`\n- 安装依赖`npm install copy-webpack-plugin -D`\n- 当前页面新建文件`webpack.config.js`  \n> `mode`模式可根据大家爱好自行修改，当然模式不一样，打包后的代码也不一样。\n```javascript\nconst path = require('path');\nconst fs = require('fs');\nconst webpack = require('webpack');\nconst CopyPlugin = require('copy-webpack-plugin');\nconst {CleanWebpackPlugin} = require('clean-webpack-plugin');\nconst actCodeUUIDSit = '7ba408f51c5c42b98133eeec145e70ca';\nconst actCodeUUIDUat = 'ba408f51c5c42b98133eeec145e70ca';\nlet actCodeUUID = process.env.NODE_ENV == 'sit'?actCodeUUIDSit:actCodeUUIDUat;\nlet dirpath ='dist/' + process.env.NODE_ENV + '/'+ actCodeUUID;\nmodule.exports = {\n  mode: 'none',\n  entry: {\n    ...entryPath(__dirname+'/src/js')\n  },\n  output: {\n    path: path.resolve(__dirname, dirpath+'/js'),\n    publicPath: 'js',\n    filename: '[name].js',\n  },\n  devServer: {\n    port: 9999,\n    contentBase: 'src',\n    proxy: {\n      '/pfhd-external-gateway': {\n       target: 'http://172.29.24.150',\n       changeOrigin: true,\n       pathRewrite: {\n         '^/pfhd-external-gateway': '/pfhd-external-gateway'\n       }\n     }\n   },\n  },\n  resolve:{\n    alias: {\n      // jquery:path.resolve(__dirname, './src/js/jquery.js')\n    },\n  },\n  plugins: [\n    // new webpack.ProvidePlugin({\n    //   $:'jquery',\n    // }),\n    new CleanWebpackPlugin(),\n    new webpack.DefinePlugin({\n      'process.env.actCodeUUID': JSON.stringify(actCodeUUID),\n    }),\n    new CopyPlugin({\n      patterns:[\n        ...copyPath(__dirname+'/src')\n      ]\n    })\n  ]\n}\n// 读取入口文件\nfunction entryPath(currentDirPath) {\n  let entryObj = {};\n  let arrPath = fs.readdirSync(currentDirPath)\n  arrPath.forEach((item) => {\n    entryObj[item.split('.')[0]] = path.resolve(__dirname, './src/js/'+item)\n  })\n  return entryObj;\n}\n// 读取需要copy的文件\nfunction copyPath(currentDirPath) {\n  let copyPathArr = [];\n  let arrPath = fs.readdirSync(currentDirPath)\n  arrPath.forEach((item) => {\n    if (item.indexOf('js') == -1 && item.indexOf('ts') == -1) {\n      let obj = {from:__dirname+'/src/'+item,to:__dirname+'/'+dirpath+'/'+item}\n      copyPathArr.push(obj);\n    }\n  })\n  return copyPathArr;\n}\n```\n\n**1、配置文件中用到了node.js模块`path`、`fs`、`process`**\n- [path](http://nodejs.cn/api/path.html): node.js环境中因操作系统不同，文件路径也有有所差异eg:`\\`、`/`,为了统一化并快速获取根目录，在node中才有了`__dirname`这个全局变量，可以返回当前文件的**绝对路径**。\n> 切记`__dirname`是node中的全局变量，如何验证？ 可以创建个js文件，\n```javascript\n// index.js\nconsole.log('__dirname', __dirname);\n```\n> 终端在此目录执行`node index.js`命令， 会发现输出当前磁盘**根目录**  <font color=\"green\">【因为这是在node环境执行的脚本】</font>\n> 你若新建index.html引入index.js文件的时候，会发现控制台输出 `undefined`, 因为浏览器环境根本没有这个变量。\n- [fs](http://nodejs.cn/api/fs.html): fs.readdirSync(dirPath)读取`src`目录下的文件， 并返回数组形式的文件名，eg:['assets', 'css', 'js]等。\n- [process](http://nodejs.cn/api/process.html#processenv):对象提供有关当前 Node.js 进程的信息、用户环境信息等，如：node安装目录等。\n\n**2、配置文件中用到了webpack插件`copy-webapck-plugin`**\n- [copy-webapck-plugin](https://www.npmjs.com/package/copy-webpack-plugin):简单暴力只需要按照文档配置入口出口，就可以将文件copy一份到出口中。\n> 可以将一些不需要处理的文件（图片、jquery、等）直接copy一份\n- webpack自带属性`DefinePlugin`：可以将node.js环境中的变量托管到**js**代码中实现互通\n> 打包的时候会自动赋值\n```javascript\n// webpack.config.js 文件\nnew webpack.definePlugin({\n    'process.env.actCodeUUID':JSON.stringify(actCodeUUID)\n})\n// index.js文件访问\nconsole.log(process) // undefined\nconsole.log(process.env.actCodeUUID) // 有值\n\n```","source":"_posts/typescript-webpack.md","raw":"---\ntitle: typescript/webpack项目初始化\ndate: 2021-11-17 14:30:24\ncategories: typescript\ntags: [typescript, webpack]\ncomments: false\n---\n\n\n> 当只做几个单页面的时候，并不需要用到其他框架，可以考虑ts+jquery+webpack简单方便,[代码地址](https://github.com/Even-cxw/TypeScript/tree/main/ts05-webpack-jquery)。\n\n\n# 版本\n- node -v `v10.15.3`\n- npm -v  `7.20.6`\n- tsc -v  `4.4.3` <font color=\"red\">【若没有，请全局安装`npm install typescript -g`】</font>\n- webpack -v  `5.52.1`\n- webpack-cli -v `3.3.12` <font color=\"red\">【webpack-cli下载版本过高，会导致版本不兼容等】</font>\n- webpack-dev-server -v  `3.11.2`\n\n<!-- more -->\n\n# 结构\n> 跟其他项目一样有个<font color=\"red\">【src】</font>，执行打包命令行后，会有个dist文件夹，里面才是上线的代码\n- `src/asset`: 存放第三方库eg:**jqeury**等，webpack不会做打包处理，直接原封copy\n- `src/css` : 样式文件夹\n- `src/images` : 图片文件夹\n- `src/js` : typescript转移后生成的js\n- `src/ts` : ts文件\n- `src/index.html` : 跟页面<font color=\"red\">【需要手动引入js等文件】</font>\n\n# npm初始化\n- 新建目录proect并在当前目录执行`npm init` 一路回车，会在当前目录下生成package.json\n- 修改package.json文件，找到`scripts`对象，<font color=\"red\">莫急、等webpack配置完才可运行</font>\n```javascript\n  \"dev\": \"cross-env NODE_ENV=sit webpack-dev-server\",\n  \"sit\": \"cross-env NODE_ENV=sit webpack\",\n  \"uat\": \"cross-env NODE_ENV=uat webpack\",\n  \"pat\": \"cross-env NODE_ENV=pat webpack\"\n```\n- 下载插件`npm install cross-env -S` \n> cross-env作用：当我们在打包的时候需要区分**测试环境**、**生产环境**，不同环境打包配置不一样，cross-env可以自定义变量传递到node.js环境中。[官方解释](https://www.npmjs.com/package/cross-env)\n> 如下命令：`cross-env NODE_ENV=sit` 相当于在<font color=\"red\">node.js</font>中执行了如下代码\n```javascript\n// 切记node.js环境\nprocess.env.NODE_ENV = 'sit'\n// 所以可以通过 process.env对象访问\n```\n\n# typescript初始化\n- 执行`tsc --init` 会生成tsconfig.json配置文件\n- 修改配置文件，我的配置文件如下\n> 如下配置执行`tsc`时，会自动检索`include`配置中的ts文件，输出到`outDir`配置js文件中，并转义成es5\n```javascript\n{\n  \"compilerOptions\": {\n    \"removeComments\": true, /*不输出注释*/\n    \"sourceMap\": false,/*生成目标文件 inline sourceMap*/\n    \"declaration\": false,/*生成响应的 d.ts文件*/\n    \"strict\": true,/*启用所有严格类型检查选项*/\n    \"strictFunctionTypes\": false,/*不润徐函数参数双向协变*/\n    \"moduleResolution\": \"node\",/*指定模块解析器*/\n    \"target\": \"ES5\",/**/\n    \"outDir\": \"./src/js\",/*指定文件的输出目录*/\n    \"lib\":[\n      \"ES5\",\n      \"ESNext\",\n      \"DOM\",\n      \"DOM.Iterable\",\n      \"ScriptHost\",\n    ]\n  },\n  \"include\": [\"./src/ts/*\"]/*编译器需要编译的文件或目录，支持通配符*/\n}\n```\n\n# 配置webpack\n- 安装依赖`npm install webpack@5 webpack-cli@3 webpack-dev-server@3 -D`\n- 安装依赖`npm install copy-webpack-plugin -D`\n- 当前页面新建文件`webpack.config.js`  \n> `mode`模式可根据大家爱好自行修改，当然模式不一样，打包后的代码也不一样。\n```javascript\nconst path = require('path');\nconst fs = require('fs');\nconst webpack = require('webpack');\nconst CopyPlugin = require('copy-webpack-plugin');\nconst {CleanWebpackPlugin} = require('clean-webpack-plugin');\nconst actCodeUUIDSit = '7ba408f51c5c42b98133eeec145e70ca';\nconst actCodeUUIDUat = 'ba408f51c5c42b98133eeec145e70ca';\nlet actCodeUUID = process.env.NODE_ENV == 'sit'?actCodeUUIDSit:actCodeUUIDUat;\nlet dirpath ='dist/' + process.env.NODE_ENV + '/'+ actCodeUUID;\nmodule.exports = {\n  mode: 'none',\n  entry: {\n    ...entryPath(__dirname+'/src/js')\n  },\n  output: {\n    path: path.resolve(__dirname, dirpath+'/js'),\n    publicPath: 'js',\n    filename: '[name].js',\n  },\n  devServer: {\n    port: 9999,\n    contentBase: 'src',\n    proxy: {\n      '/pfhd-external-gateway': {\n       target: 'http://172.29.24.150',\n       changeOrigin: true,\n       pathRewrite: {\n         '^/pfhd-external-gateway': '/pfhd-external-gateway'\n       }\n     }\n   },\n  },\n  resolve:{\n    alias: {\n      // jquery:path.resolve(__dirname, './src/js/jquery.js')\n    },\n  },\n  plugins: [\n    // new webpack.ProvidePlugin({\n    //   $:'jquery',\n    // }),\n    new CleanWebpackPlugin(),\n    new webpack.DefinePlugin({\n      'process.env.actCodeUUID': JSON.stringify(actCodeUUID),\n    }),\n    new CopyPlugin({\n      patterns:[\n        ...copyPath(__dirname+'/src')\n      ]\n    })\n  ]\n}\n// 读取入口文件\nfunction entryPath(currentDirPath) {\n  let entryObj = {};\n  let arrPath = fs.readdirSync(currentDirPath)\n  arrPath.forEach((item) => {\n    entryObj[item.split('.')[0]] = path.resolve(__dirname, './src/js/'+item)\n  })\n  return entryObj;\n}\n// 读取需要copy的文件\nfunction copyPath(currentDirPath) {\n  let copyPathArr = [];\n  let arrPath = fs.readdirSync(currentDirPath)\n  arrPath.forEach((item) => {\n    if (item.indexOf('js') == -1 && item.indexOf('ts') == -1) {\n      let obj = {from:__dirname+'/src/'+item,to:__dirname+'/'+dirpath+'/'+item}\n      copyPathArr.push(obj);\n    }\n  })\n  return copyPathArr;\n}\n```\n\n**1、配置文件中用到了node.js模块`path`、`fs`、`process`**\n- [path](http://nodejs.cn/api/path.html): node.js环境中因操作系统不同，文件路径也有有所差异eg:`\\`、`/`,为了统一化并快速获取根目录，在node中才有了`__dirname`这个全局变量，可以返回当前文件的**绝对路径**。\n> 切记`__dirname`是node中的全局变量，如何验证？ 可以创建个js文件，\n```javascript\n// index.js\nconsole.log('__dirname', __dirname);\n```\n> 终端在此目录执行`node index.js`命令， 会发现输出当前磁盘**根目录**  <font color=\"green\">【因为这是在node环境执行的脚本】</font>\n> 你若新建index.html引入index.js文件的时候，会发现控制台输出 `undefined`, 因为浏览器环境根本没有这个变量。\n- [fs](http://nodejs.cn/api/fs.html): fs.readdirSync(dirPath)读取`src`目录下的文件， 并返回数组形式的文件名，eg:['assets', 'css', 'js]等。\n- [process](http://nodejs.cn/api/process.html#processenv):对象提供有关当前 Node.js 进程的信息、用户环境信息等，如：node安装目录等。\n\n**2、配置文件中用到了webpack插件`copy-webapck-plugin`**\n- [copy-webapck-plugin](https://www.npmjs.com/package/copy-webpack-plugin):简单暴力只需要按照文档配置入口出口，就可以将文件copy一份到出口中。\n> 可以将一些不需要处理的文件（图片、jquery、等）直接copy一份\n- webpack自带属性`DefinePlugin`：可以将node.js环境中的变量托管到**js**代码中实现互通\n> 打包的时候会自动赋值\n```javascript\n// webpack.config.js 文件\nnew webpack.definePlugin({\n    'process.env.actCodeUUID':JSON.stringify(actCodeUUID)\n})\n// index.js文件访问\nconsole.log(process) // undefined\nconsole.log(process.env.actCodeUUID) // 有值\n\n```","slug":"typescript-webpack","published":1,"updated":"2021-11-19T09:44:23.490Z","layout":"post","photos":[],"link":"","_id":"ckwlvxnt3000f19oz80yn5tjk","content":"<blockquote>\n<p>当只做几个单页面的时候，并不需要用到其他框架，可以考虑ts+jquery+webpack简单方便,<a href=\"https://github.com/Even-cxw/TypeScript/tree/main/ts05-webpack-jquery\">代码地址</a>。</p>\n</blockquote>\n<h1 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h1><ul>\n<li>node -v <code>v10.15.3</code></li>\n<li>npm -v  <code>7.20.6</code></li>\n<li>tsc -v  <code>4.4.3</code> <font color=\"red\">【若没有，请全局安装<code>npm install typescript -g</code>】</font></li>\n<li>webpack -v  <code>5.52.1</code></li>\n<li>webpack-cli -v <code>3.3.12</code> <font color=\"red\">【webpack-cli下载版本过高，会导致版本不兼容等】</font></li>\n<li>webpack-dev-server -v  <code>3.11.2</code></li>\n</ul>\n<span id=\"more\"></span>\n\n<h1 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h1><blockquote>\n<p>跟其他项目一样有个<font color=\"red\">【src】</font>，执行打包命令行后，会有个dist文件夹，里面才是上线的代码</p>\n</blockquote>\n<ul>\n<li><code>src/asset</code>: 存放第三方库eg:<strong>jqeury</strong>等，webpack不会做打包处理，直接原封copy</li>\n<li><code>src/css</code> : 样式文件夹</li>\n<li><code>src/images</code> : 图片文件夹</li>\n<li><code>src/js</code> : typescript转移后生成的js</li>\n<li><code>src/ts</code> : ts文件</li>\n<li><code>src/index.html</code> : 跟页面<font color=\"red\">【需要手动引入js等文件】</font></li>\n</ul>\n<h1 id=\"npm初始化\"><a href=\"#npm初始化\" class=\"headerlink\" title=\"npm初始化\"></a>npm初始化</h1><ul>\n<li>新建目录proect并在当前目录执行<code>npm init</code> 一路回车，会在当前目录下生成package.json</li>\n<li>修改package.json文件，找到<code>scripts</code>对象，<font color=\"red\">莫急、等webpack配置完才可运行</font><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;dev&quot;</span>: <span class=\"string\">&quot;cross-env NODE_ENV=sit webpack-dev-server&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;sit&quot;</span>: <span class=\"string\">&quot;cross-env NODE_ENV=sit webpack&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;uat&quot;</span>: <span class=\"string\">&quot;cross-env NODE_ENV=uat webpack&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;pat&quot;</span>: <span class=\"string\">&quot;cross-env NODE_ENV=pat webpack&quot;</span></span><br></pre></td></tr></table></figure></li>\n<li>下载插件<code>npm install cross-env -S</code> <blockquote>\n<p>cross-env作用：当我们在打包的时候需要区分<strong>测试环境</strong>、<strong>生产环境</strong>，不同环境打包配置不一样，cross-env可以自定义变量传递到node.js环境中。<a href=\"https://www.npmjs.com/package/cross-env\">官方解释</a><br>如下命令：<code>cross-env NODE_ENV=sit</code> 相当于在<font color=\"red\">node.js</font>中执行了如下代码</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 切记node.js环境</span></span><br><span class=\"line\">process.env.NODE_ENV = <span class=\"string\">&#x27;sit&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 所以可以通过 process.env对象访问</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"typescript初始化\"><a href=\"#typescript初始化\" class=\"headerlink\" title=\"typescript初始化\"></a>typescript初始化</h1><ul>\n<li>执行<code>tsc --init</code> 会生成tsconfig.json配置文件</li>\n<li>修改配置文件，我的配置文件如下<blockquote>\n<p>如下配置执行<code>tsc</code>时，会自动检索<code>include</code>配置中的ts文件，输出到<code>outDir</code>配置js文件中，并转义成es5</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;removeComments&quot;</span>: <span class=\"literal\">true</span>, <span class=\"comment\">/*不输出注释*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;sourceMap&quot;</span>: <span class=\"literal\">false</span>,<span class=\"comment\">/*生成目标文件 inline sourceMap*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;declaration&quot;</span>: <span class=\"literal\">false</span>,<span class=\"comment\">/*生成响应的 d.ts文件*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;strict&quot;</span>: <span class=\"literal\">true</span>,<span class=\"comment\">/*启用所有严格类型检查选项*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;strictFunctionTypes&quot;</span>: <span class=\"literal\">false</span>,<span class=\"comment\">/*不润徐函数参数双向协变*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;moduleResolution&quot;</span>: <span class=\"string\">&quot;node&quot;</span>,<span class=\"comment\">/*指定模块解析器*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;target&quot;</span>: <span class=\"string\">&quot;ES5&quot;</span>,<span class=\"comment\">/**/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;outDir&quot;</span>: <span class=\"string\">&quot;./src/js&quot;</span>,<span class=\"comment\">/*指定文件的输出目录*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;lib&quot;</span>:[</span><br><span class=\"line\">      <span class=\"string\">&quot;ES5&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;ESNext&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;DOM&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;DOM.Iterable&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;ScriptHost&quot;</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;include&quot;</span>: [<span class=\"string\">&quot;./src/ts/*&quot;</span>]<span class=\"comment\">/*编译器需要编译的文件或目录，支持通配符*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"配置webpack\"><a href=\"#配置webpack\" class=\"headerlink\" title=\"配置webpack\"></a>配置webpack</h1><ul>\n<li>安装依赖<code>npm install webpack@5 webpack-cli@3 webpack-dev-server@3 -D</code></li>\n<li>安装依赖<code>npm install copy-webpack-plugin -D</code></li>\n<li>当前页面新建文件<code>webpack.config.js</code>  <blockquote>\n<p><code>mode</code>模式可根据大家爱好自行修改，当然模式不一样，打包后的代码也不一样。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> CopyPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;copy-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;CleanWebpackPlugin&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;clean-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> actCodeUUIDSit = <span class=\"string\">&#x27;7ba408f51c5c42b98133eeec145e70ca&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> actCodeUUIDUat = <span class=\"string\">&#x27;ba408f51c5c42b98133eeec145e70ca&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> actCodeUUID = process.env.NODE_ENV == <span class=\"string\">&#x27;sit&#x27;</span>?actCodeUUIDSit:actCodeUUIDUat;</span><br><span class=\"line\"><span class=\"keyword\">let</span> dirpath =<span class=\"string\">&#x27;dist/&#x27;</span> + process.env.NODE_ENV + <span class=\"string\">&#x27;/&#x27;</span>+ actCodeUUID;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: &#123;</span><br><span class=\"line\">    ...entryPath(__dirname+<span class=\"string\">&#x27;/src/js&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: path.resolve(__dirname, dirpath+<span class=\"string\">&#x27;/js&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">publicPath</span>: <span class=\"string\">&#x27;js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].js&#x27;</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">9999</span>,</span><br><span class=\"line\">    <span class=\"attr\">contentBase</span>: <span class=\"string\">&#x27;src&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;/pfhd-external-gateway&#x27;</span>: &#123;</span><br><span class=\"line\">       <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://172.29.24.150&#x27;</span>,</span><br><span class=\"line\">       <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">       <span class=\"attr\">pathRewrite</span>: &#123;</span><br><span class=\"line\">         <span class=\"string\">&#x27;^/pfhd-external-gateway&#x27;</span>: <span class=\"string\">&#x27;/pfhd-external-gateway&#x27;</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">resolve</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// jquery:path.resolve(__dirname, &#x27;./src/js/jquery.js&#x27;)</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// new webpack.ProvidePlugin(&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//   $:&#x27;jquery&#x27;,</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;),</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> CleanWebpackPlugin(),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.DefinePlugin(&#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;process.env.actCodeUUID&#x27;</span>: <span class=\"built_in\">JSON</span>.stringify(actCodeUUID),</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> CopyPlugin(&#123;</span><br><span class=\"line\">      <span class=\"attr\">patterns</span>:[</span><br><span class=\"line\">        ...copyPath(__dirname+<span class=\"string\">&#x27;/src&#x27;</span>)</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 读取入口文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">entryPath</span>(<span class=\"params\">currentDirPath</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> entryObj = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arrPath = fs.readdirSync(currentDirPath)</span><br><span class=\"line\">  arrPath.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    entryObj[item.split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>]] = path.resolve(__dirname, <span class=\"string\">&#x27;./src/js/&#x27;</span>+item)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> entryObj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 读取需要copy的文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copyPath</span>(<span class=\"params\">currentDirPath</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> copyPathArr = [];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arrPath = fs.readdirSync(currentDirPath)</span><br><span class=\"line\">  arrPath.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.indexOf(<span class=\"string\">&#x27;js&#x27;</span>) == -<span class=\"number\">1</span> &amp;&amp; item.indexOf(<span class=\"string\">&#x27;ts&#x27;</span>) == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> obj = &#123;<span class=\"attr\">from</span>:__dirname+<span class=\"string\">&#x27;/src/&#x27;</span>+item,<span class=\"attr\">to</span>:__dirname+<span class=\"string\">&#x27;/&#x27;</span>+dirpath+<span class=\"string\">&#x27;/&#x27;</span>+item&#125;</span><br><span class=\"line\">      copyPathArr.push(obj);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> copyPathArr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>1、配置文件中用到了node.js模块<code>path</code>、<code>fs</code>、<code>process</code></strong></p>\n<ul>\n<li><a href=\"http://nodejs.cn/api/path.html\">path</a>: node.js环境中因操作系统不同，文件路径也有有所差异eg:<code>\\</code>、<code>/</code>,为了统一化并快速获取根目录，在node中才有了<code>__dirname</code>这个全局变量，可以返回当前文件的<strong>绝对路径</strong>。<blockquote>\n<p>切记<code>__dirname</code>是node中的全局变量，如何验证？ 可以创建个js文件，</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;__dirname&#x27;</span>, __dirname);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>终端在此目录执行<code>node index.js</code>命令， 会发现输出当前磁盘<strong>根目录</strong>  <font color=\"green\">【因为这是在node环境执行的脚本】</font><br>你若新建index.html引入index.js文件的时候，会发现控制台输出 <code>undefined</code>, 因为浏览器环境根本没有这个变量。</p>\n</blockquote>\n</li>\n<li><a href=\"http://nodejs.cn/api/fs.html\">fs</a>: fs.readdirSync(dirPath)读取<code>src</code>目录下的文件， 并返回数组形式的文件名，eg:[‘assets’, ‘css’, ‘js]等。</li>\n<li><a href=\"http://nodejs.cn/api/process.html#processenv\">process</a>:对象提供有关当前 Node.js 进程的信息、用户环境信息等，如：node安装目录等。</li>\n</ul>\n<p><strong>2、配置文件中用到了webpack插件<code>copy-webapck-plugin</code></strong></p>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/copy-webpack-plugin\">copy-webapck-plugin</a>:简单暴力只需要按照文档配置入口出口，就可以将文件copy一份到出口中。<blockquote>\n<p>可以将一些不需要处理的文件（图片、jquery、等）直接copy一份</p>\n</blockquote>\n</li>\n<li>webpack自带属性<code>DefinePlugin</code>：可以将node.js环境中的变量托管到<strong>js</strong>代码中实现互通<blockquote>\n<p>打包的时候会自动赋值</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// webpack.config.js 文件</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> webpack.definePlugin(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;process.env.actCodeUUID&#x27;</span>:<span class=\"built_in\">JSON</span>.stringify(actCodeUUID)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// index.js文件访问</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(process) <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(process.env.actCodeUUID) <span class=\"comment\">// 有值</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>当只做几个单页面的时候，并不需要用到其他框架，可以考虑ts+jquery+webpack简单方便,<a href=\"https://github.com/Even-cxw/TypeScript/tree/main/ts05-webpack-jquery\">代码地址</a>。</p>\n</blockquote>\n<h1 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h1><ul>\n<li>node -v <code>v10.15.3</code></li>\n<li>npm -v  <code>7.20.6</code></li>\n<li>tsc -v  <code>4.4.3</code> <font color=\"red\">【若没有，请全局安装<code>npm install typescript -g</code>】</font></li>\n<li>webpack -v  <code>5.52.1</code></li>\n<li>webpack-cli -v <code>3.3.12</code> <font color=\"red\">【webpack-cli下载版本过高，会导致版本不兼容等】</font></li>\n<li>webpack-dev-server -v  <code>3.11.2</code></li>\n</ul>","more":"<h1 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h1><blockquote>\n<p>跟其他项目一样有个<font color=\"red\">【src】</font>，执行打包命令行后，会有个dist文件夹，里面才是上线的代码</p>\n</blockquote>\n<ul>\n<li><code>src/asset</code>: 存放第三方库eg:<strong>jqeury</strong>等，webpack不会做打包处理，直接原封copy</li>\n<li><code>src/css</code> : 样式文件夹</li>\n<li><code>src/images</code> : 图片文件夹</li>\n<li><code>src/js</code> : typescript转移后生成的js</li>\n<li><code>src/ts</code> : ts文件</li>\n<li><code>src/index.html</code> : 跟页面<font color=\"red\">【需要手动引入js等文件】</font></li>\n</ul>\n<h1 id=\"npm初始化\"><a href=\"#npm初始化\" class=\"headerlink\" title=\"npm初始化\"></a>npm初始化</h1><ul>\n<li>新建目录proect并在当前目录执行<code>npm init</code> 一路回车，会在当前目录下生成package.json</li>\n<li>修改package.json文件，找到<code>scripts</code>对象，<font color=\"red\">莫急、等webpack配置完才可运行</font><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;dev&quot;</span>: <span class=\"string\">&quot;cross-env NODE_ENV=sit webpack-dev-server&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;sit&quot;</span>: <span class=\"string\">&quot;cross-env NODE_ENV=sit webpack&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;uat&quot;</span>: <span class=\"string\">&quot;cross-env NODE_ENV=uat webpack&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;pat&quot;</span>: <span class=\"string\">&quot;cross-env NODE_ENV=pat webpack&quot;</span></span><br></pre></td></tr></table></figure></li>\n<li>下载插件<code>npm install cross-env -S</code> <blockquote>\n<p>cross-env作用：当我们在打包的时候需要区分<strong>测试环境</strong>、<strong>生产环境</strong>，不同环境打包配置不一样，cross-env可以自定义变量传递到node.js环境中。<a href=\"https://www.npmjs.com/package/cross-env\">官方解释</a><br>如下命令：<code>cross-env NODE_ENV=sit</code> 相当于在<font color=\"red\">node.js</font>中执行了如下代码</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 切记node.js环境</span></span><br><span class=\"line\">process.env.NODE_ENV = <span class=\"string\">&#x27;sit&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 所以可以通过 process.env对象访问</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"typescript初始化\"><a href=\"#typescript初始化\" class=\"headerlink\" title=\"typescript初始化\"></a>typescript初始化</h1><ul>\n<li>执行<code>tsc --init</code> 会生成tsconfig.json配置文件</li>\n<li>修改配置文件，我的配置文件如下<blockquote>\n<p>如下配置执行<code>tsc</code>时，会自动检索<code>include</code>配置中的ts文件，输出到<code>outDir</code>配置js文件中，并转义成es5</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;removeComments&quot;</span>: <span class=\"literal\">true</span>, <span class=\"comment\">/*不输出注释*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;sourceMap&quot;</span>: <span class=\"literal\">false</span>,<span class=\"comment\">/*生成目标文件 inline sourceMap*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;declaration&quot;</span>: <span class=\"literal\">false</span>,<span class=\"comment\">/*生成响应的 d.ts文件*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;strict&quot;</span>: <span class=\"literal\">true</span>,<span class=\"comment\">/*启用所有严格类型检查选项*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;strictFunctionTypes&quot;</span>: <span class=\"literal\">false</span>,<span class=\"comment\">/*不润徐函数参数双向协变*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;moduleResolution&quot;</span>: <span class=\"string\">&quot;node&quot;</span>,<span class=\"comment\">/*指定模块解析器*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;target&quot;</span>: <span class=\"string\">&quot;ES5&quot;</span>,<span class=\"comment\">/**/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;outDir&quot;</span>: <span class=\"string\">&quot;./src/js&quot;</span>,<span class=\"comment\">/*指定文件的输出目录*/</span></span><br><span class=\"line\">    <span class=\"string\">&quot;lib&quot;</span>:[</span><br><span class=\"line\">      <span class=\"string\">&quot;ES5&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;ESNext&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;DOM&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;DOM.Iterable&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;ScriptHost&quot;</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;include&quot;</span>: [<span class=\"string\">&quot;./src/ts/*&quot;</span>]<span class=\"comment\">/*编译器需要编译的文件或目录，支持通配符*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"配置webpack\"><a href=\"#配置webpack\" class=\"headerlink\" title=\"配置webpack\"></a>配置webpack</h1><ul>\n<li>安装依赖<code>npm install webpack@5 webpack-cli@3 webpack-dev-server@3 -D</code></li>\n<li>安装依赖<code>npm install copy-webpack-plugin -D</code></li>\n<li>当前页面新建文件<code>webpack.config.js</code>  <blockquote>\n<p><code>mode</code>模式可根据大家爱好自行修改，当然模式不一样，打包后的代码也不一样。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> CopyPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;copy-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;CleanWebpackPlugin&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;clean-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> actCodeUUIDSit = <span class=\"string\">&#x27;7ba408f51c5c42b98133eeec145e70ca&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> actCodeUUIDUat = <span class=\"string\">&#x27;ba408f51c5c42b98133eeec145e70ca&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> actCodeUUID = process.env.NODE_ENV == <span class=\"string\">&#x27;sit&#x27;</span>?actCodeUUIDSit:actCodeUUIDUat;</span><br><span class=\"line\"><span class=\"keyword\">let</span> dirpath =<span class=\"string\">&#x27;dist/&#x27;</span> + process.env.NODE_ENV + <span class=\"string\">&#x27;/&#x27;</span>+ actCodeUUID;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: &#123;</span><br><span class=\"line\">    ...entryPath(__dirname+<span class=\"string\">&#x27;/src/js&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: path.resolve(__dirname, dirpath+<span class=\"string\">&#x27;/js&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">publicPath</span>: <span class=\"string\">&#x27;js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].js&#x27;</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">9999</span>,</span><br><span class=\"line\">    <span class=\"attr\">contentBase</span>: <span class=\"string\">&#x27;src&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;/pfhd-external-gateway&#x27;</span>: &#123;</span><br><span class=\"line\">       <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://172.29.24.150&#x27;</span>,</span><br><span class=\"line\">       <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">       <span class=\"attr\">pathRewrite</span>: &#123;</span><br><span class=\"line\">         <span class=\"string\">&#x27;^/pfhd-external-gateway&#x27;</span>: <span class=\"string\">&#x27;/pfhd-external-gateway&#x27;</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">resolve</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// jquery:path.resolve(__dirname, &#x27;./src/js/jquery.js&#x27;)</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// new webpack.ProvidePlugin(&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//   $:&#x27;jquery&#x27;,</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;),</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> CleanWebpackPlugin(),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.DefinePlugin(&#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;process.env.actCodeUUID&#x27;</span>: <span class=\"built_in\">JSON</span>.stringify(actCodeUUID),</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> CopyPlugin(&#123;</span><br><span class=\"line\">      <span class=\"attr\">patterns</span>:[</span><br><span class=\"line\">        ...copyPath(__dirname+<span class=\"string\">&#x27;/src&#x27;</span>)</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 读取入口文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">entryPath</span>(<span class=\"params\">currentDirPath</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> entryObj = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arrPath = fs.readdirSync(currentDirPath)</span><br><span class=\"line\">  arrPath.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    entryObj[item.split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>]] = path.resolve(__dirname, <span class=\"string\">&#x27;./src/js/&#x27;</span>+item)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> entryObj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 读取需要copy的文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copyPath</span>(<span class=\"params\">currentDirPath</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> copyPathArr = [];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arrPath = fs.readdirSync(currentDirPath)</span><br><span class=\"line\">  arrPath.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.indexOf(<span class=\"string\">&#x27;js&#x27;</span>) == -<span class=\"number\">1</span> &amp;&amp; item.indexOf(<span class=\"string\">&#x27;ts&#x27;</span>) == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> obj = &#123;<span class=\"attr\">from</span>:__dirname+<span class=\"string\">&#x27;/src/&#x27;</span>+item,<span class=\"attr\">to</span>:__dirname+<span class=\"string\">&#x27;/&#x27;</span>+dirpath+<span class=\"string\">&#x27;/&#x27;</span>+item&#125;</span><br><span class=\"line\">      copyPathArr.push(obj);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> copyPathArr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>1、配置文件中用到了node.js模块<code>path</code>、<code>fs</code>、<code>process</code></strong></p>\n<ul>\n<li><a href=\"http://nodejs.cn/api/path.html\">path</a>: node.js环境中因操作系统不同，文件路径也有有所差异eg:<code>\\</code>、<code>/</code>,为了统一化并快速获取根目录，在node中才有了<code>__dirname</code>这个全局变量，可以返回当前文件的<strong>绝对路径</strong>。<blockquote>\n<p>切记<code>__dirname</code>是node中的全局变量，如何验证？ 可以创建个js文件，</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;__dirname&#x27;</span>, __dirname);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>终端在此目录执行<code>node index.js</code>命令， 会发现输出当前磁盘<strong>根目录</strong>  <font color=\"green\">【因为这是在node环境执行的脚本】</font><br>你若新建index.html引入index.js文件的时候，会发现控制台输出 <code>undefined</code>, 因为浏览器环境根本没有这个变量。</p>\n</blockquote>\n</li>\n<li><a href=\"http://nodejs.cn/api/fs.html\">fs</a>: fs.readdirSync(dirPath)读取<code>src</code>目录下的文件， 并返回数组形式的文件名，eg:[‘assets’, ‘css’, ‘js]等。</li>\n<li><a href=\"http://nodejs.cn/api/process.html#processenv\">process</a>:对象提供有关当前 Node.js 进程的信息、用户环境信息等，如：node安装目录等。</li>\n</ul>\n<p><strong>2、配置文件中用到了webpack插件<code>copy-webapck-plugin</code></strong></p>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/copy-webpack-plugin\">copy-webapck-plugin</a>:简单暴力只需要按照文档配置入口出口，就可以将文件copy一份到出口中。<blockquote>\n<p>可以将一些不需要处理的文件（图片、jquery、等）直接copy一份</p>\n</blockquote>\n</li>\n<li>webpack自带属性<code>DefinePlugin</code>：可以将node.js环境中的变量托管到<strong>js</strong>代码中实现互通<blockquote>\n<p>打包的时候会自动赋值</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// webpack.config.js 文件</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> webpack.definePlugin(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;process.env.actCodeUUID&#x27;</span>:<span class=\"built_in\">JSON</span>.stringify(actCodeUUID)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// index.js文件访问</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(process) <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(process.env.actCodeUUID) <span class=\"comment\">// 有值</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>"},{"title":"隐式类型转换、原始值、引用值","date":"2021-11-30T06:30:24.000Z","comments":0,"_content":"\n## 原始值\n- 在 ECMAScript 中，变量可以存在两种类型的值，即[原始值]((https://www.w3school.com.cn/js/pro_js_value.asp))和[引用值](https://www.w3school.com.cn/js/pro_js_value.asp),`这里就不做过多解释了。`\n- 原始值有`5种数据类型`，**undefined**、**null**、**boolean**、**string**、**number**\n- 引用值有`俩种引用类型`，**Object**、**Array**\n\n## valueOf()、toString()方法解析\n- [valueOf()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf)、[toString()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString) : `返回值为该对象的原始值。`\n\n- 那么5中基本数据类型的原始值分别是什么呢?\n```javascript\n// null undefined 不存在原始值\nvar a = null;\nconsole.log('a.valueOf()',a.valueOf()) // 报错\nconsole.log('a.toString()', a.toString()) // 报错\n\nvar b = undefined;\nconsole.log('a.valueOf()',a.valueOf()) // 报错\nconsole.log('a.toString()', a.toString()) // 报错\n\nvar c = new Number('123')\nconsole.log('Number.valueOf()',c.valueOf())  // 123\nconsole.log('Number.toString()', c.toString())  // '123'\n\nvar d = new String('12df');\nconsole.log('String.valueOf()',typeof d.valueOf()) // '12df'\nconsole.log('String.toString()', d.toString()) // '12df'\n\nvar e = new Boolean('fd');\nconsole.log('Boolean.valueOf()', e.valueOf()) // true\nconsole.log('Boolean.toString()', e.toString()) // true\n\n```\n> 由此可见除了`undefined`、`null`报错外，其他都返回自己本身。\n\n## 引用值转成原始值\n- `为什么`引用值要转成原始值呢？：因为在`隐式类型转换`的时候出现引用类型，javascript会吧`他`转成原始值进行`比较`。\n```javascript\nvar f = new Array();\nconsole.log('Array.valueOf()',f.valueOf())  // []\nconsole.log('Array.toString()', f.toString())  // ''\n\nvar e = new Array(3);\nconsole.log('Array.valueOf()',e.valueOf())  // [3]\nconsole.log('Array.toString()', e.toString())  // '3'\n\nvar g = new Array(1,2,3);\nconsole.log('Array.valueOf()',g.valueOf())  // [1, 2, 3]\nconsole.log('Array.toString()', g.toString())  // '1,2,3'\n\nvar j = new Object({});\nconsole.log('Object.valueOf()',j.valueOf())  // {}\nconsole.log('Object.toString()', j.toString())  // '[object Object]'\n```\n- 大家可以发现规律`valueOf()`一般都返回自己本身，而`toString()`转成string比较傻帽，铺垫已做好那么开始看**正题**。\n\n<!--more-->\n\n## 隐式类型转换\n### `Boolen()`、`if()`、`!!`\n- 以上操作都会强制转换成布尔类型，比较`强横`,只要记住以下转成false即可！！！\n| 值 |  转换符 |  结果  |\n| -- | ----  | --- |\n| \"\"  | Boolen(\"\") | false |\n| 0 | Boolen(+0) | false |\n| false  | Boolen(false) | false |\n| undefined  | Boolen(undefined) | false |\n| null  | Boolen(null) | false |\n| NAN  | Boolen(NAN) | false |\n\n- 其他均转成true\n```javascript\nconsole.log('Boolean([])',Boolean([])) // true\nconsole.log('Boolean({})',Boolean({})) // true\n```\n\n### `Number()`\n> Number类型转换就比较`复杂`.\n#### 1、基本数据类型转成Number,\n- Number类型转Number,保持原有值\n```javascript\nconsole.log('Number(1)',Number(1)) // 1\n```\n- Boolen类型转Number\n```javascript\nconsole.log('Number(true)',Number(true)) // 1 \nconsole.log('Number(false)',Number(false)) // 0\n```\n- undefined、null类型转Number\n```javascript\nconsole.log('Number(undefined)',Number(undefined)) // NaN\nconsole.log('Number(null)',Number(null)) // 0\n```\n- String类型转Number\n```javascript\nconsole.log('Number(空字符串)',Number('')) // 0\nconsole.log('Number(字符串123)',Number('123')) // 123\nconsole.log('Number(asdf)',Number('asdf')) // NaN\n```\n\n#### 2、引用数据类型转成Number\n- 除了转Boolen类型的时候是特殊的，其他类型转换需要将引用数据类型先转成`原始值`在转成`Number`。\n> <font color=\"red\">【原始值查找规则：如果valueOf有值返回valueOf,如果没有查找toString。 基本数据类型一般找valueOf,引用数据类型找toString】</font>\n```javascript\nconsole.log('Number([])',Number([])) // 0\n// toString原始值 \"\" 转成数组 0\nconsole.log('Number([4])',Number([4])) // 4\n// toString原始值 4 转成数组 4\nconsole.log('Number([1,2])',Number([1,2])) // NaN\n// toString原始值 '1,2' 转成数组 NaN\nconsole.log('Number([a])',Number(['a'])) // NaN\n// toString原始值 'a' 转成数组 NaN\nconsole.log('Number({})',Number({})) // NaN\n// toString原始值 [object Object]  NaN\nconsole.log('Number({a:1})',Number({a:1})) // NaN\n// toString原始值 [object Object]  NaN\n```\n\n### `==`\n\n- `==` 我们在代码中总会碰到，但是一般都是简单的比较，他在比较中又做了哪些转换呢？`请记住一下4点转换规则`\n\n1. `两边如果存在null或者undefined，他们只和对方以及**自身相等**，和其他的都不等`\n```javascript\nconsole.log('null == undefined', null == undefined) // true\nconsole.log('null == false',null == false) // false\nconsole.log('null == 0 ', null == 0 ) // false\n```\n\n2. `如果等式两边有布尔类型，要将布尔类型转化成数字`\n```javascript\nconsole.log('false == \"\"',false == \"\") // true\n```\n> 1. Number(false) // 0\n> 2. Number(\"\") // 0\n\n3. `如果等式两边有数字，就要将不是数字的那边转化成数字`\n```javascript\nconsole.log('false == \"\"',false == \"\") // true\n```\n\n4. `如果等式两边有引用类型存在，需要将引用类型转换为**原始值**,调用**ToPrimitive**方法.`\n```javascript\nfalse == [] // true\n```\n> 1. []的原始值`''`, 就变成了 false == ''\n> 2. false == '' 转成Number类型 0 == 0\n\n\n## 练习题\n\n- 如果下面练习题作对了，说明你真的理解`隐式转换了`\n\n```javascript\nconsole.log('false == [1]',false == [1]) \nconsole.log('false == [a]',false == ['a'])\nconsole.log('false == {}',false == {})\n```\n\n- 揭晓答案\n\n```javascript\nconsole.log('false == []',false == []) \n```\n\n> 1. [1]的原始值`toString([1])` => `1`, 简化为 `false == 1`\n> 2. false转成Number,`Number(false)` => `0`  所以 0 == 1  是`false`\n\n```javascript\nconsole.log('false == [a]',false == ['a']) \n```\n> 1. ['a']的原始值`toString([a])` => `'a'`, 简化为 `false == 'a'`\n> 2. false转成Number,`Number(false)` => `0`  简化为 0 == 'a' \n> 3. 'a'转成Number, `Number('a')` => `NaN` 所以 0 == NaN 是`false`\n\n```javascript\nconsole.log('false == {}',false == {})\n```\n> 1. ['a']的原始值`toString({})` => `[object,object]`, 简化为 `false == '[object,object]'`\n> 2. false转成Number,`Number(false)` => `0`  简化为 0 == 'a' \n> 3. 'a'转成Number, `Number('[object,object]')` => `NaN` 所以 0 == NaN 是`false`","source":"_posts/type.md","raw":"---\ntitle: 隐式类型转换、原始值、引用值\ndate: 2021-11-30 14:30:24\ncategories: javascript\ntags: [javascript]\ncomments: false\n---\n\n## 原始值\n- 在 ECMAScript 中，变量可以存在两种类型的值，即[原始值]((https://www.w3school.com.cn/js/pro_js_value.asp))和[引用值](https://www.w3school.com.cn/js/pro_js_value.asp),`这里就不做过多解释了。`\n- 原始值有`5种数据类型`，**undefined**、**null**、**boolean**、**string**、**number**\n- 引用值有`俩种引用类型`，**Object**、**Array**\n\n## valueOf()、toString()方法解析\n- [valueOf()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf)、[toString()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString) : `返回值为该对象的原始值。`\n\n- 那么5中基本数据类型的原始值分别是什么呢?\n```javascript\n// null undefined 不存在原始值\nvar a = null;\nconsole.log('a.valueOf()',a.valueOf()) // 报错\nconsole.log('a.toString()', a.toString()) // 报错\n\nvar b = undefined;\nconsole.log('a.valueOf()',a.valueOf()) // 报错\nconsole.log('a.toString()', a.toString()) // 报错\n\nvar c = new Number('123')\nconsole.log('Number.valueOf()',c.valueOf())  // 123\nconsole.log('Number.toString()', c.toString())  // '123'\n\nvar d = new String('12df');\nconsole.log('String.valueOf()',typeof d.valueOf()) // '12df'\nconsole.log('String.toString()', d.toString()) // '12df'\n\nvar e = new Boolean('fd');\nconsole.log('Boolean.valueOf()', e.valueOf()) // true\nconsole.log('Boolean.toString()', e.toString()) // true\n\n```\n> 由此可见除了`undefined`、`null`报错外，其他都返回自己本身。\n\n## 引用值转成原始值\n- `为什么`引用值要转成原始值呢？：因为在`隐式类型转换`的时候出现引用类型，javascript会吧`他`转成原始值进行`比较`。\n```javascript\nvar f = new Array();\nconsole.log('Array.valueOf()',f.valueOf())  // []\nconsole.log('Array.toString()', f.toString())  // ''\n\nvar e = new Array(3);\nconsole.log('Array.valueOf()',e.valueOf())  // [3]\nconsole.log('Array.toString()', e.toString())  // '3'\n\nvar g = new Array(1,2,3);\nconsole.log('Array.valueOf()',g.valueOf())  // [1, 2, 3]\nconsole.log('Array.toString()', g.toString())  // '1,2,3'\n\nvar j = new Object({});\nconsole.log('Object.valueOf()',j.valueOf())  // {}\nconsole.log('Object.toString()', j.toString())  // '[object Object]'\n```\n- 大家可以发现规律`valueOf()`一般都返回自己本身，而`toString()`转成string比较傻帽，铺垫已做好那么开始看**正题**。\n\n<!--more-->\n\n## 隐式类型转换\n### `Boolen()`、`if()`、`!!`\n- 以上操作都会强制转换成布尔类型，比较`强横`,只要记住以下转成false即可！！！\n| 值 |  转换符 |  结果  |\n| -- | ----  | --- |\n| \"\"  | Boolen(\"\") | false |\n| 0 | Boolen(+0) | false |\n| false  | Boolen(false) | false |\n| undefined  | Boolen(undefined) | false |\n| null  | Boolen(null) | false |\n| NAN  | Boolen(NAN) | false |\n\n- 其他均转成true\n```javascript\nconsole.log('Boolean([])',Boolean([])) // true\nconsole.log('Boolean({})',Boolean({})) // true\n```\n\n### `Number()`\n> Number类型转换就比较`复杂`.\n#### 1、基本数据类型转成Number,\n- Number类型转Number,保持原有值\n```javascript\nconsole.log('Number(1)',Number(1)) // 1\n```\n- Boolen类型转Number\n```javascript\nconsole.log('Number(true)',Number(true)) // 1 \nconsole.log('Number(false)',Number(false)) // 0\n```\n- undefined、null类型转Number\n```javascript\nconsole.log('Number(undefined)',Number(undefined)) // NaN\nconsole.log('Number(null)',Number(null)) // 0\n```\n- String类型转Number\n```javascript\nconsole.log('Number(空字符串)',Number('')) // 0\nconsole.log('Number(字符串123)',Number('123')) // 123\nconsole.log('Number(asdf)',Number('asdf')) // NaN\n```\n\n#### 2、引用数据类型转成Number\n- 除了转Boolen类型的时候是特殊的，其他类型转换需要将引用数据类型先转成`原始值`在转成`Number`。\n> <font color=\"red\">【原始值查找规则：如果valueOf有值返回valueOf,如果没有查找toString。 基本数据类型一般找valueOf,引用数据类型找toString】</font>\n```javascript\nconsole.log('Number([])',Number([])) // 0\n// toString原始值 \"\" 转成数组 0\nconsole.log('Number([4])',Number([4])) // 4\n// toString原始值 4 转成数组 4\nconsole.log('Number([1,2])',Number([1,2])) // NaN\n// toString原始值 '1,2' 转成数组 NaN\nconsole.log('Number([a])',Number(['a'])) // NaN\n// toString原始值 'a' 转成数组 NaN\nconsole.log('Number({})',Number({})) // NaN\n// toString原始值 [object Object]  NaN\nconsole.log('Number({a:1})',Number({a:1})) // NaN\n// toString原始值 [object Object]  NaN\n```\n\n### `==`\n\n- `==` 我们在代码中总会碰到，但是一般都是简单的比较，他在比较中又做了哪些转换呢？`请记住一下4点转换规则`\n\n1. `两边如果存在null或者undefined，他们只和对方以及**自身相等**，和其他的都不等`\n```javascript\nconsole.log('null == undefined', null == undefined) // true\nconsole.log('null == false',null == false) // false\nconsole.log('null == 0 ', null == 0 ) // false\n```\n\n2. `如果等式两边有布尔类型，要将布尔类型转化成数字`\n```javascript\nconsole.log('false == \"\"',false == \"\") // true\n```\n> 1. Number(false) // 0\n> 2. Number(\"\") // 0\n\n3. `如果等式两边有数字，就要将不是数字的那边转化成数字`\n```javascript\nconsole.log('false == \"\"',false == \"\") // true\n```\n\n4. `如果等式两边有引用类型存在，需要将引用类型转换为**原始值**,调用**ToPrimitive**方法.`\n```javascript\nfalse == [] // true\n```\n> 1. []的原始值`''`, 就变成了 false == ''\n> 2. false == '' 转成Number类型 0 == 0\n\n\n## 练习题\n\n- 如果下面练习题作对了，说明你真的理解`隐式转换了`\n\n```javascript\nconsole.log('false == [1]',false == [1]) \nconsole.log('false == [a]',false == ['a'])\nconsole.log('false == {}',false == {})\n```\n\n- 揭晓答案\n\n```javascript\nconsole.log('false == []',false == []) \n```\n\n> 1. [1]的原始值`toString([1])` => `1`, 简化为 `false == 1`\n> 2. false转成Number,`Number(false)` => `0`  所以 0 == 1  是`false`\n\n```javascript\nconsole.log('false == [a]',false == ['a']) \n```\n> 1. ['a']的原始值`toString([a])` => `'a'`, 简化为 `false == 'a'`\n> 2. false转成Number,`Number(false)` => `0`  简化为 0 == 'a' \n> 3. 'a'转成Number, `Number('a')` => `NaN` 所以 0 == NaN 是`false`\n\n```javascript\nconsole.log('false == {}',false == {})\n```\n> 1. ['a']的原始值`toString({})` => `[object,object]`, 简化为 `false == '[object,object]'`\n> 2. false转成Number,`Number(false)` => `0`  简化为 0 == 'a' \n> 3. 'a'转成Number, `Number('[object,object]')` => `NaN` 所以 0 == NaN 是`false`","slug":"type","published":1,"updated":"2021-11-30T09:09:08.969Z","layout":"post","photos":[],"link":"","_id":"ckwlvxnt5000j19ozfg6v0fuj","content":"<h2 id=\"原始值\"><a href=\"#原始值\" class=\"headerlink\" title=\"原始值\"></a>原始值</h2><ul>\n<li>在 ECMAScript 中，变量可以存在两种类型的值，即<a href=\"(https://www.w3school.com.cn/js/pro_js_value.asp)\">原始值</a>和<a href=\"https://www.w3school.com.cn/js/pro_js_value.asp\">引用值</a>,<code>这里就不做过多解释了。</code></li>\n<li>原始值有<code>5种数据类型</code>，<strong>undefined</strong>、<strong>null</strong>、<strong>boolean</strong>、<strong>string</strong>、<strong>number</strong></li>\n<li>引用值有<code>俩种引用类型</code>，<strong>Object</strong>、<strong>Array</strong></li>\n</ul>\n<h2 id=\"valueOf-、toString-方法解析\"><a href=\"#valueOf-、toString-方法解析\" class=\"headerlink\" title=\"valueOf()、toString()方法解析\"></a>valueOf()、toString()方法解析</h2><ul>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\">valueOf()</a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\">toString()</a> : <code>返回值为该对象的原始值。</code></p>\n</li>\n<li><p>那么5中基本数据类型的原始值分别是什么呢?</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// null undefined 不存在原始值</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;a.valueOf()&#x27;</span>,a.valueOf()) <span class=\"comment\">// 报错</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;a.toString()&#x27;</span>, a.toString()) <span class=\"comment\">// 报错</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;a.valueOf()&#x27;</span>,a.valueOf()) <span class=\"comment\">// 报错</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;a.toString()&#x27;</span>, a.toString()) <span class=\"comment\">// 报错</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>(<span class=\"string\">&#x27;123&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number.valueOf()&#x27;</span>,c.valueOf())  <span class=\"comment\">// 123</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number.toString()&#x27;</span>, c.toString())  <span class=\"comment\">// &#x27;123&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> d = <span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">&#x27;12df&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;String.valueOf()&#x27;</span>,<span class=\"keyword\">typeof</span> d.valueOf()) <span class=\"comment\">// &#x27;12df&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;String.toString()&#x27;</span>, d.toString()) <span class=\"comment\">// &#x27;12df&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> e = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(<span class=\"string\">&#x27;fd&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Boolean.valueOf()&#x27;</span>, e.valueOf()) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Boolean.toString()&#x27;</span>, e.toString()) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>由此可见除了<code>undefined</code>、<code>null</code>报错外，其他都返回自己本身。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"引用值转成原始值\"><a href=\"#引用值转成原始值\" class=\"headerlink\" title=\"引用值转成原始值\"></a>引用值转成原始值</h2><ul>\n<li><code>为什么</code>引用值要转成原始值呢？：因为在<code>隐式类型转换</code>的时候出现引用类型，javascript会吧<code>他</code>转成原始值进行<code>比较</code>。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> f = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Array.valueOf()&#x27;</span>,f.valueOf())  <span class=\"comment\">// []</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Array.toString()&#x27;</span>, f.toString())  <span class=\"comment\">// &#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> e = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Array.valueOf()&#x27;</span>,e.valueOf())  <span class=\"comment\">// [3]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Array.toString()&#x27;</span>, e.toString())  <span class=\"comment\">// &#x27;3&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> g = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Array.valueOf()&#x27;</span>,g.valueOf())  <span class=\"comment\">// [1, 2, 3]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Array.toString()&#x27;</span>, g.toString())  <span class=\"comment\">// &#x27;1,2,3&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> j = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>(&#123;&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Object.valueOf()&#x27;</span>,j.valueOf())  <span class=\"comment\">// &#123;&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Object.toString()&#x27;</span>, j.toString())  <span class=\"comment\">// &#x27;[object Object]&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li>大家可以发现规律<code>valueOf()</code>一般都返回自己本身，而<code>toString()</code>转成string比较傻帽，铺垫已做好那么开始看<strong>正题</strong>。</li>\n</ul>\n<span id=\"more\"></span>\n\n<h2 id=\"隐式类型转换\"><a href=\"#隐式类型转换\" class=\"headerlink\" title=\"隐式类型转换\"></a>隐式类型转换</h2><h3 id=\"Boolen-、if-、\"><a href=\"#Boolen-、if-、\" class=\"headerlink\" title=\"Boolen()、if()、!!\"></a><code>Boolen()</code>、<code>if()</code>、<code>!!</code></h3><ul>\n<li><p>以上操作都会强制转换成布尔类型，比较<code>强横</code>,只要记住以下转成false即可！！！</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>转换符</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>“”</td>\n<td>Boolen(“”)</td>\n<td>false</td>\n</tr>\n<tr>\n<td>0</td>\n<td>Boolen(+0)</td>\n<td>false</td>\n</tr>\n<tr>\n<td>false</td>\n<td>Boolen(false)</td>\n<td>false</td>\n</tr>\n<tr>\n<td>undefined</td>\n<td>Boolen(undefined)</td>\n<td>false</td>\n</tr>\n<tr>\n<td>null</td>\n<td>Boolen(null)</td>\n<td>false</td>\n</tr>\n<tr>\n<td>NAN</td>\n<td>Boolen(NAN)</td>\n<td>false</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>其他均转成true</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Boolean([])&#x27;</span>,<span class=\"built_in\">Boolean</span>([])) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Boolean(&#123;&#125;)&#x27;</span>,<span class=\"built_in\">Boolean</span>(&#123;&#125;)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number()\"></a><code>Number()</code></h3><blockquote>\n<p>Number类型转换就比较<code>复杂</code>.</p>\n</blockquote>\n<h4 id=\"1、基本数据类型转成Number\"><a href=\"#1、基本数据类型转成Number\" class=\"headerlink\" title=\"1、基本数据类型转成Number,\"></a>1、基本数据类型转成Number,</h4><ul>\n<li>Number类型转Number,保持原有值<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(1)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"number\">1</span>)) <span class=\"comment\">// 1</span></span><br></pre></td></tr></table></figure></li>\n<li>Boolen类型转Number<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(true)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"literal\">true</span>)) <span class=\"comment\">// 1 </span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(false)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"literal\">false</span>)) <span class=\"comment\">// 0</span></span><br></pre></td></tr></table></figure></li>\n<li>undefined、null类型转Number<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(undefined)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"literal\">undefined</span>)) <span class=\"comment\">// NaN</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(null)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"literal\">null</span>)) <span class=\"comment\">// 0</span></span><br></pre></td></tr></table></figure></li>\n<li>String类型转Number<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(空字符串)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"string\">&#x27;&#x27;</span>)) <span class=\"comment\">// 0</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(字符串123)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"string\">&#x27;123&#x27;</span>)) <span class=\"comment\">// 123</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(asdf)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"string\">&#x27;asdf&#x27;</span>)) <span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"2、引用数据类型转成Number\"><a href=\"#2、引用数据类型转成Number\" class=\"headerlink\" title=\"2、引用数据类型转成Number\"></a>2、引用数据类型转成Number</h4><ul>\n<li>除了转Boolen类型的时候是特殊的，其他类型转换需要将引用数据类型先转成<code>原始值</code>在转成<code>Number</code>。<blockquote>\n<p><font color=\"red\">【原始值查找规则：如果valueOf有值返回valueOf,如果没有查找toString。 基本数据类型一般找valueOf,引用数据类型找toString】</font></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number([])&#x27;</span>,<span class=\"built_in\">Number</span>([])) <span class=\"comment\">// 0</span></span><br><span class=\"line\"><span class=\"comment\">// toString原始值 &quot;&quot; 转成数组 0</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number([4])&#x27;</span>,<span class=\"built_in\">Number</span>([<span class=\"number\">4</span>])) <span class=\"comment\">// 4</span></span><br><span class=\"line\"><span class=\"comment\">// toString原始值 4 转成数组 4</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number([1,2])&#x27;</span>,<span class=\"built_in\">Number</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>])) <span class=\"comment\">// NaN</span></span><br><span class=\"line\"><span class=\"comment\">// toString原始值 &#x27;1,2&#x27; 转成数组 NaN</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number([a])&#x27;</span>,<span class=\"built_in\">Number</span>([<span class=\"string\">&#x27;a&#x27;</span>])) <span class=\"comment\">// NaN</span></span><br><span class=\"line\"><span class=\"comment\">// toString原始值 &#x27;a&#x27; 转成数组 NaN</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(&#123;&#125;)&#x27;</span>,<span class=\"built_in\">Number</span>(&#123;&#125;)) <span class=\"comment\">// NaN</span></span><br><span class=\"line\"><span class=\"comment\">// toString原始值 [object Object]  NaN</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(&#123;a:1&#125;)&#x27;</span>,<span class=\"built_in\">Number</span>(&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>&#125;)) <span class=\"comment\">// NaN</span></span><br><span class=\"line\"><span class=\"comment\">// toString原始值 [object Object]  NaN</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"==\"></a><code>==</code></h3><ul>\n<li><code>==</code> 我们在代码中总会碰到，但是一般都是简单的比较，他在比较中又做了哪些转换呢？<code>请记住一下4点转换规则</code></li>\n</ul>\n<ol>\n<li><p><code>两边如果存在null或者undefined，他们只和对方以及**自身相等**，和其他的都不等</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;null == undefined&#x27;</span>, <span class=\"literal\">null</span> == <span class=\"literal\">undefined</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;null == false&#x27;</span>,<span class=\"literal\">null</span> == <span class=\"literal\">false</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;null == 0 &#x27;</span>, <span class=\"literal\">null</span> == <span class=\"number\">0</span> ) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></li>\n<li><p><code>如果等式两边有布尔类型，要将布尔类型转化成数字</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == &quot;&quot;&#x27;</span>,<span class=\"literal\">false</span> == <span class=\"string\">&quot;&quot;</span>) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>Number(false) // 0</li>\n<li>Number(“”) // 0</li>\n</ol>\n</blockquote>\n</li>\n<li><p><code>如果等式两边有数字，就要将不是数字的那边转化成数字</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == &quot;&quot;&#x27;</span>,<span class=\"literal\">false</span> == <span class=\"string\">&quot;&quot;</span>) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></li>\n<li><p><code>如果等式两边有引用类型存在，需要将引用类型转换为**原始值**,调用**ToPrimitive**方法.</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"literal\">false</span> == [] <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>[]的原始值<code>&#39;&#39;</code>, 就变成了 false == ‘’</li>\n<li>false == ‘’ 转成Number类型 0 == 0</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"练习题\"><a href=\"#练习题\" class=\"headerlink\" title=\"练习题\"></a>练习题</h2><ul>\n<li>如果下面练习题作对了，说明你真的理解<code>隐式转换了</code></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == [1]&#x27;</span>,<span class=\"literal\">false</span> == [<span class=\"number\">1</span>]) </span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == [a]&#x27;</span>,<span class=\"literal\">false</span> == [<span class=\"string\">&#x27;a&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == &#123;&#125;&#x27;</span>,<span class=\"literal\">false</span> == &#123;&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>揭晓答案</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == []&#x27;</span>,<span class=\"literal\">false</span> == []) </span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ol>\n<li>[1]的原始值<code>toString([1])</code> =&gt; <code>1</code>, 简化为 <code>false == 1</code></li>\n<li>false转成Number,<code>Number(false)</code> =&gt; <code>0</code>  所以 0 == 1  是<code>false</code></li>\n</ol>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == [a]&#x27;</span>,<span class=\"literal\">false</span> == [<span class=\"string\">&#x27;a&#x27;</span>]) </span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>[‘a’]的原始值<code>toString([a])</code> =&gt; <code>&#39;a&#39;</code>, 简化为 <code>false == &#39;a&#39;</code></li>\n<li>false转成Number,<code>Number(false)</code> =&gt; <code>0</code>  简化为 0 == ‘a’ </li>\n<li>‘a’转成Number, <code>Number(&#39;a&#39;)</code> =&gt; <code>NaN</code> 所以 0 == NaN 是<code>false</code></li>\n</ol>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == &#123;&#125;&#x27;</span>,<span class=\"literal\">false</span> == &#123;&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>[‘a’]的原始值<code>toString(&#123;&#125;)</code> =&gt; <code>[object,object]</code>, 简化为 <code>false == &#39;[object,object]&#39;</code></li>\n<li>false转成Number,<code>Number(false)</code> =&gt; <code>0</code>  简化为 0 == ‘a’ </li>\n<li>‘a’转成Number, <code>Number(&#39;[object,object]&#39;)</code> =&gt; <code>NaN</code> 所以 0 == NaN 是<code>false</code></li>\n</ol>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h2 id=\"原始值\"><a href=\"#原始值\" class=\"headerlink\" title=\"原始值\"></a>原始值</h2><ul>\n<li>在 ECMAScript 中，变量可以存在两种类型的值，即<a href=\"(https://www.w3school.com.cn/js/pro_js_value.asp)\">原始值</a>和<a href=\"https://www.w3school.com.cn/js/pro_js_value.asp\">引用值</a>,<code>这里就不做过多解释了。</code></li>\n<li>原始值有<code>5种数据类型</code>，<strong>undefined</strong>、<strong>null</strong>、<strong>boolean</strong>、<strong>string</strong>、<strong>number</strong></li>\n<li>引用值有<code>俩种引用类型</code>，<strong>Object</strong>、<strong>Array</strong></li>\n</ul>\n<h2 id=\"valueOf-、toString-方法解析\"><a href=\"#valueOf-、toString-方法解析\" class=\"headerlink\" title=\"valueOf()、toString()方法解析\"></a>valueOf()、toString()方法解析</h2><ul>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\">valueOf()</a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\">toString()</a> : <code>返回值为该对象的原始值。</code></p>\n</li>\n<li><p>那么5中基本数据类型的原始值分别是什么呢?</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// null undefined 不存在原始值</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;a.valueOf()&#x27;</span>,a.valueOf()) <span class=\"comment\">// 报错</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;a.toString()&#x27;</span>, a.toString()) <span class=\"comment\">// 报错</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;a.valueOf()&#x27;</span>,a.valueOf()) <span class=\"comment\">// 报错</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;a.toString()&#x27;</span>, a.toString()) <span class=\"comment\">// 报错</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>(<span class=\"string\">&#x27;123&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number.valueOf()&#x27;</span>,c.valueOf())  <span class=\"comment\">// 123</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number.toString()&#x27;</span>, c.toString())  <span class=\"comment\">// &#x27;123&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> d = <span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">&#x27;12df&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;String.valueOf()&#x27;</span>,<span class=\"keyword\">typeof</span> d.valueOf()) <span class=\"comment\">// &#x27;12df&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;String.toString()&#x27;</span>, d.toString()) <span class=\"comment\">// &#x27;12df&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> e = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(<span class=\"string\">&#x27;fd&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Boolean.valueOf()&#x27;</span>, e.valueOf()) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Boolean.toString()&#x27;</span>, e.toString()) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>由此可见除了<code>undefined</code>、<code>null</code>报错外，其他都返回自己本身。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"引用值转成原始值\"><a href=\"#引用值转成原始值\" class=\"headerlink\" title=\"引用值转成原始值\"></a>引用值转成原始值</h2><ul>\n<li><code>为什么</code>引用值要转成原始值呢？：因为在<code>隐式类型转换</code>的时候出现引用类型，javascript会吧<code>他</code>转成原始值进行<code>比较</code>。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> f = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Array.valueOf()&#x27;</span>,f.valueOf())  <span class=\"comment\">// []</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Array.toString()&#x27;</span>, f.toString())  <span class=\"comment\">// &#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> e = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Array.valueOf()&#x27;</span>,e.valueOf())  <span class=\"comment\">// [3]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Array.toString()&#x27;</span>, e.toString())  <span class=\"comment\">// &#x27;3&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> g = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Array.valueOf()&#x27;</span>,g.valueOf())  <span class=\"comment\">// [1, 2, 3]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Array.toString()&#x27;</span>, g.toString())  <span class=\"comment\">// &#x27;1,2,3&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> j = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>(&#123;&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Object.valueOf()&#x27;</span>,j.valueOf())  <span class=\"comment\">// &#123;&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Object.toString()&#x27;</span>, j.toString())  <span class=\"comment\">// &#x27;[object Object]&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li>大家可以发现规律<code>valueOf()</code>一般都返回自己本身，而<code>toString()</code>转成string比较傻帽，铺垫已做好那么开始看<strong>正题</strong>。</li>\n</ul>","more":"<h2 id=\"隐式类型转换\"><a href=\"#隐式类型转换\" class=\"headerlink\" title=\"隐式类型转换\"></a>隐式类型转换</h2><h3 id=\"Boolen-、if-、\"><a href=\"#Boolen-、if-、\" class=\"headerlink\" title=\"Boolen()、if()、!!\"></a><code>Boolen()</code>、<code>if()</code>、<code>!!</code></h3><ul>\n<li><p>以上操作都会强制转换成布尔类型，比较<code>强横</code>,只要记住以下转成false即可！！！</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>转换符</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>“”</td>\n<td>Boolen(“”)</td>\n<td>false</td>\n</tr>\n<tr>\n<td>0</td>\n<td>Boolen(+0)</td>\n<td>false</td>\n</tr>\n<tr>\n<td>false</td>\n<td>Boolen(false)</td>\n<td>false</td>\n</tr>\n<tr>\n<td>undefined</td>\n<td>Boolen(undefined)</td>\n<td>false</td>\n</tr>\n<tr>\n<td>null</td>\n<td>Boolen(null)</td>\n<td>false</td>\n</tr>\n<tr>\n<td>NAN</td>\n<td>Boolen(NAN)</td>\n<td>false</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>其他均转成true</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Boolean([])&#x27;</span>,<span class=\"built_in\">Boolean</span>([])) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Boolean(&#123;&#125;)&#x27;</span>,<span class=\"built_in\">Boolean</span>(&#123;&#125;)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number()\"></a><code>Number()</code></h3><blockquote>\n<p>Number类型转换就比较<code>复杂</code>.</p>\n</blockquote>\n<h4 id=\"1、基本数据类型转成Number\"><a href=\"#1、基本数据类型转成Number\" class=\"headerlink\" title=\"1、基本数据类型转成Number,\"></a>1、基本数据类型转成Number,</h4><ul>\n<li>Number类型转Number,保持原有值<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(1)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"number\">1</span>)) <span class=\"comment\">// 1</span></span><br></pre></td></tr></table></figure></li>\n<li>Boolen类型转Number<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(true)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"literal\">true</span>)) <span class=\"comment\">// 1 </span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(false)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"literal\">false</span>)) <span class=\"comment\">// 0</span></span><br></pre></td></tr></table></figure></li>\n<li>undefined、null类型转Number<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(undefined)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"literal\">undefined</span>)) <span class=\"comment\">// NaN</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(null)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"literal\">null</span>)) <span class=\"comment\">// 0</span></span><br></pre></td></tr></table></figure></li>\n<li>String类型转Number<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(空字符串)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"string\">&#x27;&#x27;</span>)) <span class=\"comment\">// 0</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(字符串123)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"string\">&#x27;123&#x27;</span>)) <span class=\"comment\">// 123</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(asdf)&#x27;</span>,<span class=\"built_in\">Number</span>(<span class=\"string\">&#x27;asdf&#x27;</span>)) <span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"2、引用数据类型转成Number\"><a href=\"#2、引用数据类型转成Number\" class=\"headerlink\" title=\"2、引用数据类型转成Number\"></a>2、引用数据类型转成Number</h4><ul>\n<li>除了转Boolen类型的时候是特殊的，其他类型转换需要将引用数据类型先转成<code>原始值</code>在转成<code>Number</code>。<blockquote>\n<p><font color=\"red\">【原始值查找规则：如果valueOf有值返回valueOf,如果没有查找toString。 基本数据类型一般找valueOf,引用数据类型找toString】</font></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number([])&#x27;</span>,<span class=\"built_in\">Number</span>([])) <span class=\"comment\">// 0</span></span><br><span class=\"line\"><span class=\"comment\">// toString原始值 &quot;&quot; 转成数组 0</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number([4])&#x27;</span>,<span class=\"built_in\">Number</span>([<span class=\"number\">4</span>])) <span class=\"comment\">// 4</span></span><br><span class=\"line\"><span class=\"comment\">// toString原始值 4 转成数组 4</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number([1,2])&#x27;</span>,<span class=\"built_in\">Number</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>])) <span class=\"comment\">// NaN</span></span><br><span class=\"line\"><span class=\"comment\">// toString原始值 &#x27;1,2&#x27; 转成数组 NaN</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number([a])&#x27;</span>,<span class=\"built_in\">Number</span>([<span class=\"string\">&#x27;a&#x27;</span>])) <span class=\"comment\">// NaN</span></span><br><span class=\"line\"><span class=\"comment\">// toString原始值 &#x27;a&#x27; 转成数组 NaN</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(&#123;&#125;)&#x27;</span>,<span class=\"built_in\">Number</span>(&#123;&#125;)) <span class=\"comment\">// NaN</span></span><br><span class=\"line\"><span class=\"comment\">// toString原始值 [object Object]  NaN</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Number(&#123;a:1&#125;)&#x27;</span>,<span class=\"built_in\">Number</span>(&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>&#125;)) <span class=\"comment\">// NaN</span></span><br><span class=\"line\"><span class=\"comment\">// toString原始值 [object Object]  NaN</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"==\"></a><code>==</code></h3><ul>\n<li><code>==</code> 我们在代码中总会碰到，但是一般都是简单的比较，他在比较中又做了哪些转换呢？<code>请记住一下4点转换规则</code></li>\n</ul>\n<ol>\n<li><p><code>两边如果存在null或者undefined，他们只和对方以及**自身相等**，和其他的都不等</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;null == undefined&#x27;</span>, <span class=\"literal\">null</span> == <span class=\"literal\">undefined</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;null == false&#x27;</span>,<span class=\"literal\">null</span> == <span class=\"literal\">false</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;null == 0 &#x27;</span>, <span class=\"literal\">null</span> == <span class=\"number\">0</span> ) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></li>\n<li><p><code>如果等式两边有布尔类型，要将布尔类型转化成数字</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == &quot;&quot;&#x27;</span>,<span class=\"literal\">false</span> == <span class=\"string\">&quot;&quot;</span>) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>Number(false) // 0</li>\n<li>Number(“”) // 0</li>\n</ol>\n</blockquote>\n</li>\n<li><p><code>如果等式两边有数字，就要将不是数字的那边转化成数字</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == &quot;&quot;&#x27;</span>,<span class=\"literal\">false</span> == <span class=\"string\">&quot;&quot;</span>) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></li>\n<li><p><code>如果等式两边有引用类型存在，需要将引用类型转换为**原始值**,调用**ToPrimitive**方法.</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"literal\">false</span> == [] <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>[]的原始值<code>&#39;&#39;</code>, 就变成了 false == ‘’</li>\n<li>false == ‘’ 转成Number类型 0 == 0</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"练习题\"><a href=\"#练习题\" class=\"headerlink\" title=\"练习题\"></a>练习题</h2><ul>\n<li>如果下面练习题作对了，说明你真的理解<code>隐式转换了</code></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == [1]&#x27;</span>,<span class=\"literal\">false</span> == [<span class=\"number\">1</span>]) </span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == [a]&#x27;</span>,<span class=\"literal\">false</span> == [<span class=\"string\">&#x27;a&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == &#123;&#125;&#x27;</span>,<span class=\"literal\">false</span> == &#123;&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>揭晓答案</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == []&#x27;</span>,<span class=\"literal\">false</span> == []) </span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ol>\n<li>[1]的原始值<code>toString([1])</code> =&gt; <code>1</code>, 简化为 <code>false == 1</code></li>\n<li>false转成Number,<code>Number(false)</code> =&gt; <code>0</code>  所以 0 == 1  是<code>false</code></li>\n</ol>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == [a]&#x27;</span>,<span class=\"literal\">false</span> == [<span class=\"string\">&#x27;a&#x27;</span>]) </span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>[‘a’]的原始值<code>toString([a])</code> =&gt; <code>&#39;a&#39;</code>, 简化为 <code>false == &#39;a&#39;</code></li>\n<li>false转成Number,<code>Number(false)</code> =&gt; <code>0</code>  简化为 0 == ‘a’ </li>\n<li>‘a’转成Number, <code>Number(&#39;a&#39;)</code> =&gt; <code>NaN</code> 所以 0 == NaN 是<code>false</code></li>\n</ol>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;false == &#123;&#125;&#x27;</span>,<span class=\"literal\">false</span> == &#123;&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>[‘a’]的原始值<code>toString(&#123;&#125;)</code> =&gt; <code>[object,object]</code>, 简化为 <code>false == &#39;[object,object]&#39;</code></li>\n<li>false转成Number,<code>Number(false)</code> =&gt; <code>0</code>  简化为 0 == ‘a’ </li>\n<li>‘a’转成Number, <code>Number(&#39;[object,object]&#39;)</code> =&gt; <code>NaN</code> 所以 0 == NaN 是<code>false</code></li>\n</ol>\n</blockquote>"},{"title":"vscode编辑器","date":"2021-11-16T06:30:24.000Z","comments":0,"_content":"\n## vscode下载\n- [VScode官方](https://code.visualstudio.com/)因为连接境外下载速度很慢，[解决方案](https://blog.csdn.net/m0_55548148/article/details/115587339)\n```javascript\n//外网地址：https://az764295.vo.msecnd.net/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip\n//内网地址：https://vscode.cdn.azure.cn/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip\n//替换连接：vscode.cdn.azure.cn\n```\n\n##  mac笔记本\n1. 打开vscode\n2. `command + shift + p `打开命令面板\n3. 输入shell（选择\"install code command in PATH\"）<font color=\"green\">【如下图】</font>\n4. 打开终端输入命令：`code <dir> ` (dir - 对应的文件夹路径)\n\n<!-- more -->\n\n![](/images/vscode.png)\n------\n\n## window笔记本\n1. 打开vscode安装位置，进入bin文件夹，复制路径 eg：`E:\\Microsoft VS Code\\bin；`\n2. 回到桌面，右键我的电脑，高级系统设置 ，环境变量，编辑path值，在原来的path后面加上eg ;`E:\\Microsoft VS Code\\bin`(英文的分号+vscode的bin路径)\n3. 打开终端输入命令：`code <dir> ` (dir - 对应的文件夹路径)\n\n\n## vscode常用插件\n- Live Serve : 在浏览器中打开index.html，自动热更新\n- typeScript Auto Compiler : 自动转成js文件","source":"_posts/vscode.md","raw":"---\ntitle: vscode编辑器\ndate: 2021-11-16 14:30:24\ncategories: vscode\ntags: [vscode]\ncomments: false\n---\n\n## vscode下载\n- [VScode官方](https://code.visualstudio.com/)因为连接境外下载速度很慢，[解决方案](https://blog.csdn.net/m0_55548148/article/details/115587339)\n```javascript\n//外网地址：https://az764295.vo.msecnd.net/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip\n//内网地址：https://vscode.cdn.azure.cn/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip\n//替换连接：vscode.cdn.azure.cn\n```\n\n##  mac笔记本\n1. 打开vscode\n2. `command + shift + p `打开命令面板\n3. 输入shell（选择\"install code command in PATH\"）<font color=\"green\">【如下图】</font>\n4. 打开终端输入命令：`code <dir> ` (dir - 对应的文件夹路径)\n\n<!-- more -->\n\n![](/images/vscode.png)\n------\n\n## window笔记本\n1. 打开vscode安装位置，进入bin文件夹，复制路径 eg：`E:\\Microsoft VS Code\\bin；`\n2. 回到桌面，右键我的电脑，高级系统设置 ，环境变量，编辑path值，在原来的path后面加上eg ;`E:\\Microsoft VS Code\\bin`(英文的分号+vscode的bin路径)\n3. 打开终端输入命令：`code <dir> ` (dir - 对应的文件夹路径)\n\n\n## vscode常用插件\n- Live Serve : 在浏览器中打开index.html，自动热更新\n- typeScript Auto Compiler : 自动转成js文件","slug":"vscode","published":1,"updated":"2021-11-26T02:54:04.461Z","layout":"post","photos":[],"link":"","_id":"ckwlvxnt6000l19ozb5j77elv","content":"<h2 id=\"vscode下载\"><a href=\"#vscode下载\" class=\"headerlink\" title=\"vscode下载\"></a>vscode下载</h2><ul>\n<li><a href=\"https://code.visualstudio.com/\">VScode官方</a>因为连接境外下载速度很慢，<a href=\"https://blog.csdn.net/m0_55548148/article/details/115587339\">解决方案</a><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//外网地址：https://az764295.vo.msecnd.net/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip</span></span><br><span class=\"line\"><span class=\"comment\">//内网地址：https://vscode.cdn.azure.cn/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip</span></span><br><span class=\"line\"><span class=\"comment\">//替换连接：vscode.cdn.azure.cn</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"mac笔记本\"><a href=\"#mac笔记本\" class=\"headerlink\" title=\"mac笔记本\"></a>mac笔记本</h2><ol>\n<li>打开vscode</li>\n<li><code>command + shift + p </code>打开命令面板</li>\n<li>输入shell（选择”install code command in PATH”）<font color=\"green\">【如下图】</font></li>\n<li>打开终端输入命令：<code>code &lt;dir&gt; </code> (dir - 对应的文件夹路径)</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"/images/vscode.png\"></h2><h2 id=\"window笔记本\"><a href=\"#window笔记本\" class=\"headerlink\" title=\"window笔记本\"></a>window笔记本</h2><ol>\n<li>打开vscode安装位置，进入bin文件夹，复制路径 eg：<code>E:\\Microsoft VS Code\\bin；</code></li>\n<li>回到桌面，右键我的电脑，高级系统设置 ，环境变量，编辑path值，在原来的path后面加上eg ;<code>E:\\Microsoft VS Code\\bin</code>(英文的分号+vscode的bin路径)</li>\n<li>打开终端输入命令：<code>code &lt;dir&gt; </code> (dir - 对应的文件夹路径)</li>\n</ol>\n<h2 id=\"vscode常用插件\"><a href=\"#vscode常用插件\" class=\"headerlink\" title=\"vscode常用插件\"></a>vscode常用插件</h2><ul>\n<li>Live Serve : 在浏览器中打开index.html，自动热更新</li>\n<li>typeScript Auto Compiler : 自动转成js文件</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"vscode下载\"><a href=\"#vscode下载\" class=\"headerlink\" title=\"vscode下载\"></a>vscode下载</h2><ul>\n<li><a href=\"https://code.visualstudio.com/\">VScode官方</a>因为连接境外下载速度很慢，<a href=\"https://blog.csdn.net/m0_55548148/article/details/115587339\">解决方案</a><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//外网地址：https://az764295.vo.msecnd.net/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip</span></span><br><span class=\"line\"><span class=\"comment\">//内网地址：https://vscode.cdn.azure.cn/stable/3a6960b964327f0e3882ce18fcebd07ed191b316/VSCode-darwin-universal.zip</span></span><br><span class=\"line\"><span class=\"comment\">//替换连接：vscode.cdn.azure.cn</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"mac笔记本\"><a href=\"#mac笔记本\" class=\"headerlink\" title=\"mac笔记本\"></a>mac笔记本</h2><ol>\n<li>打开vscode</li>\n<li><code>command + shift + p </code>打开命令面板</li>\n<li>输入shell（选择”install code command in PATH”）<font color=\"green\">【如下图】</font></li>\n<li>打开终端输入命令：<code>code &lt;dir&gt; </code> (dir - 对应的文件夹路径)</li>\n</ol>","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"/images/vscode.png\"></h2><h2 id=\"window笔记本\"><a href=\"#window笔记本\" class=\"headerlink\" title=\"window笔记本\"></a>window笔记本</h2><ol>\n<li>打开vscode安装位置，进入bin文件夹，复制路径 eg：<code>E:\\Microsoft VS Code\\bin；</code></li>\n<li>回到桌面，右键我的电脑，高级系统设置 ，环境变量，编辑path值，在原来的path后面加上eg ;<code>E:\\Microsoft VS Code\\bin</code>(英文的分号+vscode的bin路径)</li>\n<li>打开终端输入命令：<code>code &lt;dir&gt; </code> (dir - 对应的文件夹路径)</li>\n</ol>\n<h2 id=\"vscode常用插件\"><a href=\"#vscode常用插件\" class=\"headerlink\" title=\"vscode常用插件\"></a>vscode常用插件</h2><ul>\n<li>Live Serve : 在浏览器中打开index.html，自动热更新</li>\n<li>typeScript Auto Compiler : 自动转成js文件</li>\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckwlvxnsr000119ozc0gz4ngh","category_id":"ckwlvxnsx000419oz04b3b88i","_id":"ckwlvxnt4000g19ozgkdj48cy"},{"post_id":"ckwlvxnsv000319oz9raxdapa","category_id":"ckwlvxnt1000b19ozc5k53rui","_id":"ckwlvxnt7000m19oz0tn367uh"},{"post_id":"ckwlvxnt5000j19ozfg6v0fuj","category_id":"ckwlvxnt4000h19ozefw57ogl","_id":"ckwlvxnt9000r19oz34sx1ack"},{"post_id":"ckwlvxnsz000719ozabaqg3ev","category_id":"ckwlvxnt4000h19ozefw57ogl","_id":"ckwlvxnt9000u19oz2t7lbgbp"},{"post_id":"ckwlvxnt0000919oz464d3mjj","category_id":"ckwlvxnt7000n19ozde556w2o","_id":"ckwlvxntc000x19ozb89o8ngr"},{"post_id":"ckwlvxnt1000a19ozgo522cff","category_id":"ckwlvxnt4000h19ozefw57ogl","_id":"ckwlvxntd001019oz4swlejrm"},{"post_id":"ckwlvxnt2000e19oz1h8seic0","category_id":"ckwlvxntc000w19ozfukyblc5","_id":"ckwlvxntd001419oz8epifl33"},{"post_id":"ckwlvxnt3000f19oz80yn5tjk","category_id":"ckwlvxntd001119oz6i368jtn","_id":"ckwlvxnte001719ozd5tv9wf0"},{"post_id":"ckwlvxnt6000l19ozb5j77elv","category_id":"ckwlvxnte001519ozehcl2cfo","_id":"ckwlvxntf001b19ozebhq8grv"}],"PostTag":[{"post_id":"ckwlvxnsr000119ozc0gz4ngh","tag_id":"ckwlvxnsy000519oz9lmo4omm","_id":"ckwlvxnt2000d19oz4plo5jx5"},{"post_id":"ckwlvxnsv000319oz9raxdapa","tag_id":"ckwlvxnt2000c19ozc3ib8w8f","_id":"ckwlvxnt6000k19oz0v7v9s5d"},{"post_id":"ckwlvxnt5000j19ozfg6v0fuj","tag_id":"ckwlvxnt4000i19ozb9bq7j6i","_id":"ckwlvxnt8000p19oz28bxhw6t"},{"post_id":"ckwlvxnsz000719ozabaqg3ev","tag_id":"ckwlvxnt4000i19ozb9bq7j6i","_id":"ckwlvxnt9000q19oz05mfc3it"},{"post_id":"ckwlvxnt0000919oz464d3mjj","tag_id":"ckwlvxnt8000o19oz10fnhtd3","_id":"ckwlvxntb000v19ozhzqc97o9"},{"post_id":"ckwlvxnt1000a19ozgo522cff","tag_id":"ckwlvxnt4000i19ozb9bq7j6i","_id":"ckwlvxntc000z19oz49fb6ky9"},{"post_id":"ckwlvxnt2000e19oz1h8seic0","tag_id":"ckwlvxntc000y19ozaw3s2vux","_id":"ckwlvxntd001319ozb4gl1739"},{"post_id":"ckwlvxnt3000f19oz80yn5tjk","tag_id":"ckwlvxntd001219ozdm9j42vp","_id":"ckwlvxntf001919ozcqk889ku"},{"post_id":"ckwlvxnt3000f19oz80yn5tjk","tag_id":"ckwlvxnte001619ozbmrv1zl0","_id":"ckwlvxntf001a19ozes0wdod0"},{"post_id":"ckwlvxnt6000l19ozb5j77elv","tag_id":"ckwlvxnte001819oz4d1a6j0v","_id":"ckwlvxntf001c19oz4auadlek"}],"Tag":[{"name":"Vlog","_id":"ckwlvxnsy000519oz9lmo4omm"},{"name":"文档","_id":"ckwlvxnt2000c19ozc3ib8w8f"},{"name":"javascript","_id":"ckwlvxnt4000i19ozb9bq7j6i"},{"name":"Mac","_id":"ckwlvxnt8000o19oz10fnhtd3"},{"name":"md","_id":"ckwlvxntc000y19ozaw3s2vux"},{"name":"typescript","_id":"ckwlvxntd001219ozdm9j42vp"},{"name":"webpack","_id":"ckwlvxnte001619ozbmrv1zl0"},{"name":"vscode","_id":"ckwlvxnte001819oz4d1a6j0v"}]}}